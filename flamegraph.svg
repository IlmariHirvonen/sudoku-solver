<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="16282"><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="0.0307%" y="869" width="0.0246%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="4"/><text x="0.2807%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2 samples, 0.01%)</title><rect x="0.0553%" y="869" width="0.0123%" height="15" fill="rgb(217,0,24)" fg:x="9" fg:w="2"/><text x="0.3053%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.01%)</title><rect x="0.0553%" y="853" width="0.0123%" height="15" fill="rgb(221,193,54)" fg:x="9" fg:w="2"/><text x="0.3053%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.01%)</title><rect x="0.0553%" y="837" width="0.0123%" height="15" fill="rgb(248,212,6)" fg:x="9" fg:w="2"/><text x="0.3053%" y="847.50"></text></g><g><title>sudoku-solver`&lt;core::str::iter::SplitWhitespace as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.0860%" y="853" width="0.0123%" height="15" fill="rgb(208,68,35)" fg:x="14" fg:w="2"/><text x="0.3360%" y="863.50"></text></g><g><title>sudoku-solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="0.0798%" y="869" width="0.0246%" height="15" fill="rgb(232,128,0)" fg:x="13" fg:w="4"/><text x="0.3298%" y="879.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (8 samples, 0.05%)</title><rect x="0.1106%" y="869" width="0.0491%" height="15" fill="rgb(207,160,47)" fg:x="18" fg:w="8"/><text x="0.3606%" y="879.50"></text></g><g><title>sudoku-solver`std::io::stdio::_print (2 samples, 0.01%)</title><rect x="0.1597%" y="869" width="0.0123%" height="15" fill="rgb(228,23,34)" fg:x="26" fg:w="2"/><text x="0.4097%" y="879.50"></text></g><g><title>sudoku-solver`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (2 samples, 0.01%)</title><rect x="0.1597%" y="853" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="26" fg:w="2"/><text x="0.4097%" y="863.50"></text></g><g><title>sudoku-solver`core::fmt::write (2 samples, 0.01%)</title><rect x="0.1597%" y="837" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="26" fg:w="2"/><text x="0.4097%" y="847.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="0.1597%" y="821" width="0.0123%" height="15" fill="rgb(250,228,42)" fg:x="26" fg:w="2"/><text x="0.4097%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (2 samples, 0.01%)</title><rect x="0.1597%" y="805" width="0.0123%" height="15" fill="rgb(240,193,28)" fg:x="26" fg:w="2"/><text x="0.4097%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="0.2518%" y="693" width="0.0123%" height="15" fill="rgb(216,20,37)" fg:x="41" fg:w="2"/><text x="0.5018%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="0.3071%" y="677" width="0.0123%" height="15" fill="rgb(206,188,39)" fg:x="50" fg:w="2"/><text x="0.5571%" y="687.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="0.3501%" y="661" width="0.0123%" height="15" fill="rgb(217,207,13)" fg:x="57" fg:w="2"/><text x="0.6001%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="0.3808%" y="645" width="0.0123%" height="15" fill="rgb(231,73,38)" fg:x="62" fg:w="2"/><text x="0.6308%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="0.4299%" y="629" width="0.0123%" height="15" fill="rgb(225,20,46)" fg:x="70" fg:w="2"/><text x="0.6799%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="0.4913%" y="597" width="0.0123%" height="15" fill="rgb(210,31,41)" fg:x="80" fg:w="2"/><text x="0.7413%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="0.5528%" y="565" width="0.0123%" height="15" fill="rgb(221,200,47)" fg:x="90" fg:w="2"/><text x="0.8028%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="0.6265%" y="549" width="0.0184%" height="15" fill="rgb(226,26,5)" fg:x="102" fg:w="3"/><text x="0.8765%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="0.6449%" y="549" width="0.0184%" height="15" fill="rgb(249,33,26)" fg:x="105" fg:w="3"/><text x="0.8949%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="0.6879%" y="533" width="0.0184%" height="15" fill="rgb(235,183,28)" fg:x="112" fg:w="3"/><text x="0.9379%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="0.7554%" y="517" width="0.0246%" height="15" fill="rgb(221,5,38)" fg:x="123" fg:w="4"/><text x="1.0054%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="0.7800%" y="517" width="0.0184%" height="15" fill="rgb(247,18,42)" fg:x="127" fg:w="3"/><text x="1.0300%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="0.7984%" y="517" width="0.0307%" height="15" fill="rgb(241,131,45)" fg:x="130" fg:w="5"/><text x="1.0484%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="0.8414%" y="517" width="0.0123%" height="15" fill="rgb(249,31,29)" fg:x="137" fg:w="2"/><text x="1.0914%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.05%)</title><rect x="0.9090%" y="501" width="0.0491%" height="15" fill="rgb(225,111,53)" fg:x="148" fg:w="8"/><text x="1.1590%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="0.9581%" y="501" width="0.0184%" height="15" fill="rgb(238,160,17)" fg:x="156" fg:w="3"/><text x="1.2081%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="0.9827%" y="501" width="0.0123%" height="15" fill="rgb(214,148,48)" fg:x="160" fg:w="2"/><text x="1.2327%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="0.9950%" y="501" width="0.0123%" height="15" fill="rgb(232,36,49)" fg:x="162" fg:w="2"/><text x="1.2450%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="1.0564%" y="485" width="0.0123%" height="15" fill="rgb(209,103,24)" fg:x="172" fg:w="2"/><text x="1.3064%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="1.0687%" y="485" width="0.0123%" height="15" fill="rgb(229,88,8)" fg:x="174" fg:w="2"/><text x="1.3187%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="1.0809%" y="485" width="0.0369%" height="15" fill="rgb(213,181,19)" fg:x="176" fg:w="6"/><text x="1.3309%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.02%)</title><rect x="1.1178%" y="485" width="0.0246%" height="15" fill="rgb(254,191,54)" fg:x="182" fg:w="4"/><text x="1.3678%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="1.1424%" y="485" width="0.0246%" height="15" fill="rgb(241,83,37)" fg:x="186" fg:w="4"/><text x="1.3924%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.02%)</title><rect x="1.1669%" y="485" width="0.0246%" height="15" fill="rgb(233,36,39)" fg:x="190" fg:w="4"/><text x="1.4169%" y="495.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="1.1976%" y="485" width="0.0123%" height="15" fill="rgb(226,3,54)" fg:x="195" fg:w="2"/><text x="1.4476%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.03%)</title><rect x="1.2591%" y="469" width="0.0307%" height="15" fill="rgb(245,192,40)" fg:x="205" fg:w="5"/><text x="1.5091%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.08%)</title><rect x="1.2898%" y="469" width="0.0798%" height="15" fill="rgb(238,167,29)" fg:x="210" fg:w="13"/><text x="1.5398%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="1.3696%" y="469" width="0.0184%" height="15" fill="rgb(232,182,51)" fg:x="223" fg:w="3"/><text x="1.6196%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.06%)</title><rect x="1.3942%" y="469" width="0.0553%" height="15" fill="rgb(231,60,39)" fg:x="227" fg:w="9"/><text x="1.6442%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.04%)</title><rect x="1.4495%" y="469" width="0.0369%" height="15" fill="rgb(208,69,12)" fg:x="236" fg:w="6"/><text x="1.6995%" y="479.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.02%)</title><rect x="1.4863%" y="469" width="0.0184%" height="15" fill="rgb(235,93,37)" fg:x="242" fg:w="3"/><text x="1.7363%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="1.5416%" y="453" width="0.0246%" height="15" fill="rgb(213,116,39)" fg:x="251" fg:w="4"/><text x="1.7916%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="1.5661%" y="453" width="0.0184%" height="15" fill="rgb(222,207,29)" fg:x="255" fg:w="3"/><text x="1.8161%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.04%)</title><rect x="1.5846%" y="453" width="0.0430%" height="15" fill="rgb(206,96,30)" fg:x="258" fg:w="7"/><text x="1.8346%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="1.6337%" y="453" width="0.0184%" height="15" fill="rgb(218,138,4)" fg:x="266" fg:w="3"/><text x="1.8837%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="1.6521%" y="453" width="0.0307%" height="15" fill="rgb(250,191,14)" fg:x="269" fg:w="5"/><text x="1.9021%" y="463.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.02%)</title><rect x="1.6828%" y="453" width="0.0246%" height="15" fill="rgb(239,60,40)" fg:x="274" fg:w="4"/><text x="1.9328%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="1.7565%" y="437" width="0.0123%" height="15" fill="rgb(206,27,48)" fg:x="286" fg:w="2"/><text x="2.0065%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="1.7688%" y="437" width="0.0307%" height="15" fill="rgb(225,35,8)" fg:x="288" fg:w="5"/><text x="2.0188%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="1.7995%" y="437" width="0.0307%" height="15" fill="rgb(250,213,24)" fg:x="293" fg:w="5"/><text x="2.0495%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="1.8302%" y="437" width="0.0246%" height="15" fill="rgb(247,123,22)" fg:x="298" fg:w="4"/><text x="2.0802%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.03%)</title><rect x="1.8548%" y="437" width="0.0307%" height="15" fill="rgb(231,138,38)" fg:x="302" fg:w="5"/><text x="2.1048%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="1.8855%" y="437" width="0.0307%" height="15" fill="rgb(231,145,46)" fg:x="307" fg:w="5"/><text x="2.1355%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="1.9531%" y="421" width="0.0246%" height="15" fill="rgb(251,118,11)" fg:x="318" fg:w="4"/><text x="2.2031%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="1.9776%" y="421" width="0.0307%" height="15" fill="rgb(217,147,25)" fg:x="322" fg:w="5"/><text x="2.2276%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="2.0084%" y="421" width="0.0307%" height="15" fill="rgb(247,81,37)" fg:x="327" fg:w="5"/><text x="2.2584%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="2.0391%" y="421" width="0.0123%" height="15" fill="rgb(209,12,38)" fg:x="332" fg:w="2"/><text x="2.2891%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="2.0513%" y="421" width="0.0123%" height="15" fill="rgb(227,1,9)" fg:x="334" fg:w="2"/><text x="2.3013%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.02%)</title><rect x="2.0636%" y="421" width="0.0246%" height="15" fill="rgb(248,47,43)" fg:x="336" fg:w="4"/><text x="2.3136%" y="431.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="2.0882%" y="421" width="0.0123%" height="15" fill="rgb(221,10,30)" fg:x="340" fg:w="2"/><text x="2.3382%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="2.1312%" y="405" width="0.0123%" height="15" fill="rgb(210,229,1)" fg:x="347" fg:w="2"/><text x="2.3812%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="2.1435%" y="405" width="0.0123%" height="15" fill="rgb(222,148,37)" fg:x="349" fg:w="2"/><text x="2.3935%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="2.1558%" y="405" width="0.0307%" height="15" fill="rgb(234,67,33)" fg:x="351" fg:w="5"/><text x="2.4058%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="2.1865%" y="405" width="0.0307%" height="15" fill="rgb(247,98,35)" fg:x="356" fg:w="5"/><text x="2.4365%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.02%)</title><rect x="2.2172%" y="405" width="0.0246%" height="15" fill="rgb(247,138,52)" fg:x="361" fg:w="4"/><text x="2.4672%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="2.2417%" y="405" width="0.0123%" height="15" fill="rgb(213,79,30)" fg:x="365" fg:w="2"/><text x="2.4917%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="2.2909%" y="389" width="0.0123%" height="15" fill="rgb(246,177,23)" fg:x="373" fg:w="2"/><text x="2.5409%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="2.3032%" y="389" width="0.0246%" height="15" fill="rgb(230,62,27)" fg:x="375" fg:w="4"/><text x="2.5532%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.04%)</title><rect x="2.3277%" y="389" width="0.0430%" height="15" fill="rgb(216,154,8)" fg:x="379" fg:w="7"/><text x="2.5777%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.04%)</title><rect x="2.3707%" y="389" width="0.0430%" height="15" fill="rgb(244,35,45)" fg:x="386" fg:w="7"/><text x="2.6207%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="2.4137%" y="389" width="0.0184%" height="15" fill="rgb(251,115,12)" fg:x="393" fg:w="3"/><text x="2.6637%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="2.4321%" y="389" width="0.0123%" height="15" fill="rgb(240,54,50)" fg:x="396" fg:w="2"/><text x="2.6821%" y="399.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="2.4506%" y="389" width="0.0123%" height="15" fill="rgb(233,84,52)" fg:x="399" fg:w="2"/><text x="2.7006%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="2.4997%" y="373" width="0.0246%" height="15" fill="rgb(207,117,47)" fg:x="407" fg:w="4"/><text x="2.7497%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="2.5427%" y="373" width="0.0184%" height="15" fill="rgb(249,43,39)" fg:x="414" fg:w="3"/><text x="2.7927%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="2.6164%" y="357" width="0.0246%" height="15" fill="rgb(209,38,44)" fg:x="426" fg:w="4"/><text x="2.8664%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="2.6410%" y="357" width="0.0246%" height="15" fill="rgb(236,212,23)" fg:x="430" fg:w="4"/><text x="2.8910%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="2.6655%" y="357" width="0.0123%" height="15" fill="rgb(242,79,21)" fg:x="434" fg:w="2"/><text x="2.9155%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="2.6778%" y="357" width="0.0184%" height="15" fill="rgb(211,96,35)" fg:x="436" fg:w="3"/><text x="2.9278%" y="367.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="2.7085%" y="357" width="0.0123%" height="15" fill="rgb(253,215,40)" fg:x="441" fg:w="2"/><text x="2.9585%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="2.7269%" y="341" width="0.0184%" height="15" fill="rgb(211,81,21)" fg:x="444" fg:w="3"/><text x="2.9769%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="2.7454%" y="341" width="0.0123%" height="15" fill="rgb(208,190,38)" fg:x="447" fg:w="2"/><text x="2.9954%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="2.8006%" y="325" width="0.0123%" height="15" fill="rgb(235,213,38)" fg:x="456" fg:w="2"/><text x="3.0506%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="2.8252%" y="309" width="0.0123%" height="15" fill="rgb(237,122,38)" fg:x="460" fg:w="2"/><text x="3.0752%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="2.9849%" y="213" width="0.0123%" height="15" fill="rgb(244,218,35)" fg:x="486" fg:w="2"/><text x="3.2349%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3 samples, 0.02%)</title><rect x="3.0525%" y="85" width="0.0184%" height="15" fill="rgb(240,68,47)" fg:x="497" fg:w="3"/><text x="3.3025%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (2 samples, 0.01%)</title><rect x="3.0586%" y="69" width="0.0123%" height="15" fill="rgb(210,16,53)" fg:x="498" fg:w="2"/><text x="3.3086%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="3.0586%" y="53" width="0.0123%" height="15" fill="rgb(235,124,12)" fg:x="498" fg:w="2"/><text x="3.3086%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="3.0770%" y="53" width="0.0123%" height="15" fill="rgb(224,169,11)" fg:x="501" fg:w="2"/><text x="3.3270%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.0770%" y="37" width="0.0123%" height="15" fill="rgb(250,166,2)" fg:x="501" fg:w="2"/><text x="3.3270%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="3.0893%" y="53" width="0.0123%" height="15" fill="rgb(242,216,29)" fg:x="503" fg:w="2"/><text x="3.3393%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (9 samples, 0.06%)</title><rect x="3.0525%" y="101" width="0.0553%" height="15" fill="rgb(230,116,27)" fg:x="497" fg:w="9"/><text x="3.3025%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.04%)</title><rect x="3.0709%" y="85" width="0.0369%" height="15" fill="rgb(228,99,48)" fg:x="500" fg:w="6"/><text x="3.3209%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (5 samples, 0.03%)</title><rect x="3.0770%" y="69" width="0.0307%" height="15" fill="rgb(253,11,6)" fg:x="501" fg:w="5"/><text x="3.3270%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="3.1077%" y="85" width="0.0123%" height="15" fill="rgb(247,143,39)" fg:x="506" fg:w="2"/><text x="3.3577%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (19 samples, 0.12%)</title><rect x="3.0463%" y="117" width="0.1167%" height="15" fill="rgb(236,97,10)" fg:x="496" fg:w="19"/><text x="3.2963%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (9 samples, 0.06%)</title><rect x="3.1077%" y="101" width="0.0553%" height="15" fill="rgb(233,208,19)" fg:x="506" fg:w="9"/><text x="3.3577%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (4 samples, 0.02%)</title><rect x="3.1384%" y="85" width="0.0246%" height="15" fill="rgb(216,164,2)" fg:x="511" fg:w="4"/><text x="3.3884%" y="95.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="3.1507%" y="69" width="0.0123%" height="15" fill="rgb(220,129,5)" fg:x="513" fg:w="2"/><text x="3.4007%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="3.1630%" y="101" width="0.0123%" height="15" fill="rgb(242,17,10)" fg:x="515" fg:w="2"/><text x="3.4130%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="3.1876%" y="85" width="0.0184%" height="15" fill="rgb(242,107,0)" fg:x="519" fg:w="3"/><text x="3.4376%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (29 samples, 0.18%)</title><rect x="3.0463%" y="133" width="0.1781%" height="15" fill="rgb(251,28,31)" fg:x="496" fg:w="29"/><text x="3.2963%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (10 samples, 0.06%)</title><rect x="3.1630%" y="117" width="0.0614%" height="15" fill="rgb(233,223,10)" fg:x="515" fg:w="10"/><text x="3.4130%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (6 samples, 0.04%)</title><rect x="3.1876%" y="101" width="0.0369%" height="15" fill="rgb(215,21,27)" fg:x="519" fg:w="6"/><text x="3.4376%" y="111.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="3.2121%" y="85" width="0.0123%" height="15" fill="rgb(232,23,21)" fg:x="523" fg:w="2"/><text x="3.4621%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="3.2244%" y="117" width="0.0184%" height="15" fill="rgb(244,5,23)" fg:x="525" fg:w="3"/><text x="3.4744%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="3.2674%" y="101" width="0.0123%" height="15" fill="rgb(226,81,46)" fg:x="532" fg:w="2"/><text x="3.5174%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (40 samples, 0.25%)</title><rect x="3.0463%" y="149" width="0.2457%" height="15" fill="rgb(247,70,30)" fg:x="496" fg:w="40"/><text x="3.2963%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (11 samples, 0.07%)</title><rect x="3.2244%" y="133" width="0.0676%" height="15" fill="rgb(212,68,19)" fg:x="525" fg:w="11"/><text x="3.4744%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (6 samples, 0.04%)</title><rect x="3.2551%" y="117" width="0.0369%" height="15" fill="rgb(240,187,13)" fg:x="530" fg:w="6"/><text x="3.5051%" y="127.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="3.2797%" y="101" width="0.0123%" height="15" fill="rgb(223,113,26)" fg:x="534" fg:w="2"/><text x="3.5297%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.02%)</title><rect x="3.2920%" y="133" width="0.0184%" height="15" fill="rgb(206,192,2)" fg:x="536" fg:w="3"/><text x="3.5420%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="3.2981%" y="117" width="0.0123%" height="15" fill="rgb(241,108,4)" fg:x="537" fg:w="2"/><text x="3.5481%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="3.2981%" y="101" width="0.0123%" height="15" fill="rgb(247,173,49)" fg:x="537" fg:w="2"/><text x="3.5481%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="3.3104%" y="133" width="0.0246%" height="15" fill="rgb(224,114,35)" fg:x="539" fg:w="4"/><text x="3.5604%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="3.3350%" y="133" width="0.0123%" height="15" fill="rgb(245,159,27)" fg:x="543" fg:w="2"/><text x="3.5850%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="3.3902%" y="85" width="0.0123%" height="15" fill="rgb(245,172,44)" fg:x="552" fg:w="2"/><text x="3.6402%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="3.3841%" y="117" width="0.0246%" height="15" fill="rgb(236,23,11)" fg:x="551" fg:w="4"/><text x="3.6341%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="3.3902%" y="101" width="0.0184%" height="15" fill="rgb(205,117,38)" fg:x="552" fg:w="3"/><text x="3.6402%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.04%)</title><rect x="3.4087%" y="117" width="0.0430%" height="15" fill="rgb(237,72,25)" fg:x="555" fg:w="7"/><text x="3.6587%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="3.4394%" y="101" width="0.0123%" height="15" fill="rgb(244,70,9)" fg:x="560" fg:w="2"/><text x="3.6894%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="3.4517%" y="117" width="0.0246%" height="15" fill="rgb(217,125,39)" fg:x="562" fg:w="4"/><text x="3.7017%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (88 samples, 0.54%)</title><rect x="3.0279%" y="165" width="0.5405%" height="15" fill="rgb(235,36,10)" fg:x="493" fg:w="88"/><text x="3.2779%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (45 samples, 0.28%)</title><rect x="3.2920%" y="149" width="0.2764%" height="15" fill="rgb(251,123,47)" fg:x="536" fg:w="45"/><text x="3.5420%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (35 samples, 0.21%)</title><rect x="3.3534%" y="133" width="0.2150%" height="15" fill="rgb(221,13,13)" fg:x="546" fg:w="35"/><text x="3.6034%" y="143.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (14 samples, 0.09%)</title><rect x="3.4824%" y="117" width="0.0860%" height="15" fill="rgb(238,131,9)" fg:x="567" fg:w="14"/><text x="3.7324%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="3.5806%" y="149" width="0.0123%" height="15" fill="rgb(211,50,8)" fg:x="583" fg:w="2"/><text x="3.8306%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="3.5929%" y="149" width="0.0184%" height="15" fill="rgb(245,182,24)" fg:x="585" fg:w="3"/><text x="3.8429%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="3.5991%" y="133" width="0.0123%" height="15" fill="rgb(242,14,37)" fg:x="586" fg:w="2"/><text x="3.8491%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.04%)</title><rect x="3.6728%" y="101" width="0.0430%" height="15" fill="rgb(246,228,12)" fg:x="598" fg:w="7"/><text x="3.9228%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="3.7035%" y="85" width="0.0123%" height="15" fill="rgb(213,55,15)" fg:x="603" fg:w="2"/><text x="3.9535%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.07%)</title><rect x="3.6482%" y="133" width="0.0737%" height="15" fill="rgb(209,9,3)" fg:x="594" fg:w="12"/><text x="3.8982%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.05%)</title><rect x="3.6728%" y="117" width="0.0491%" height="15" fill="rgb(230,59,30)" fg:x="598" fg:w="8"/><text x="3.9228%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="3.7219%" y="133" width="0.0123%" height="15" fill="rgb(209,121,21)" fg:x="606" fg:w="2"/><text x="3.9719%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="3.7342%" y="133" width="0.0307%" height="15" fill="rgb(220,109,13)" fg:x="608" fg:w="5"/><text x="3.9842%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="3.7526%" y="117" width="0.0123%" height="15" fill="rgb(232,18,1)" fg:x="611" fg:w="2"/><text x="4.0026%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (132 samples, 0.81%)</title><rect x="3.0095%" y="181" width="0.8107%" height="15" fill="rgb(215,41,42)" fg:x="490" fg:w="132"/><text x="3.2595%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (41 samples, 0.25%)</title><rect x="3.5684%" y="165" width="0.2518%" height="15" fill="rgb(224,123,36)" fg:x="581" fg:w="41"/><text x="3.8184%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (31 samples, 0.19%)</title><rect x="3.6298%" y="149" width="0.1904%" height="15" fill="rgb(240,125,3)" fg:x="591" fg:w="31"/><text x="3.8798%" y="159.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (9 samples, 0.06%)</title><rect x="3.7649%" y="133" width="0.0553%" height="15" fill="rgb(205,98,50)" fg:x="613" fg:w="9"/><text x="4.0149%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="3.8325%" y="165" width="0.0123%" height="15" fill="rgb(205,185,37)" fg:x="624" fg:w="2"/><text x="4.0825%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="3.8447%" y="165" width="0.0123%" height="15" fill="rgb(238,207,15)" fg:x="626" fg:w="2"/><text x="4.0947%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="3.8570%" y="165" width="0.0184%" height="15" fill="rgb(213,199,42)" fg:x="628" fg:w="3"/><text x="4.1070%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="3.8632%" y="149" width="0.0123%" height="15" fill="rgb(235,201,11)" fg:x="629" fg:w="2"/><text x="4.1132%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="3.8754%" y="165" width="0.0123%" height="15" fill="rgb(207,46,11)" fg:x="631" fg:w="2"/><text x="4.1254%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="3.9430%" y="133" width="0.0123%" height="15" fill="rgb(241,35,35)" fg:x="642" fg:w="2"/><text x="4.1930%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="3.9676%" y="117" width="0.0246%" height="15" fill="rgb(243,32,47)" fg:x="646" fg:w="4"/><text x="4.2176%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="3.9737%" y="101" width="0.0184%" height="15" fill="rgb(247,202,23)" fg:x="647" fg:w="3"/><text x="4.2237%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.07%)</title><rect x="3.9307%" y="149" width="0.0676%" height="15" fill="rgb(219,102,11)" fg:x="640" fg:w="11"/><text x="4.1807%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="3.9553%" y="133" width="0.0430%" height="15" fill="rgb(243,110,44)" fg:x="644" fg:w="7"/><text x="4.2053%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="3.9983%" y="149" width="0.0123%" height="15" fill="rgb(222,74,54)" fg:x="651" fg:w="2"/><text x="4.2483%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.06%)</title><rect x="4.0106%" y="149" width="0.0614%" height="15" fill="rgb(216,99,12)" fg:x="653" fg:w="10"/><text x="4.2606%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.04%)</title><rect x="4.0290%" y="133" width="0.0430%" height="15" fill="rgb(226,22,26)" fg:x="656" fg:w="7"/><text x="4.2790%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="4.0720%" y="149" width="0.0184%" height="15" fill="rgb(217,163,10)" fg:x="663" fg:w="3"/><text x="4.3220%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (196 samples, 1.20%)</title><rect x="3.0095%" y="197" width="1.2038%" height="15" fill="rgb(213,25,53)" fg:x="490" fg:w="196"/><text x="3.2595%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (64 samples, 0.39%)</title><rect x="3.8202%" y="181" width="0.3931%" height="15" fill="rgb(252,105,26)" fg:x="622" fg:w="64"/><text x="4.0702%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (52 samples, 0.32%)</title><rect x="3.8939%" y="165" width="0.3194%" height="15" fill="rgb(220,39,43)" fg:x="634" fg:w="52"/><text x="4.1439%" y="175.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (19 samples, 0.12%)</title><rect x="4.0965%" y="149" width="0.1167%" height="15" fill="rgb(229,68,48)" fg:x="667" fg:w="19"/><text x="4.3465%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="4.2501%" y="149" width="0.0246%" height="15" fill="rgb(252,8,32)" fg:x="692" fg:w="4"/><text x="4.5001%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.04%)</title><rect x="4.2378%" y="181" width="0.0430%" height="15" fill="rgb(223,20,43)" fg:x="690" fg:w="7"/><text x="4.4878%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.04%)</title><rect x="4.2440%" y="165" width="0.0369%" height="15" fill="rgb(229,81,49)" fg:x="691" fg:w="6"/><text x="4.4940%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.04%)</title><rect x="4.2808%" y="181" width="0.0430%" height="15" fill="rgb(236,28,36)" fg:x="697" fg:w="7"/><text x="4.5308%" y="191.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="4.3545%" y="181" width="0.0184%" height="15" fill="rgb(249,185,26)" fg:x="709" fg:w="3"/><text x="4.6045%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="4.4098%" y="149" width="0.0123%" height="15" fill="rgb(249,174,33)" fg:x="718" fg:w="2"/><text x="4.6598%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.09%)</title><rect x="4.3852%" y="165" width="0.0860%" height="15" fill="rgb(233,201,37)" fg:x="714" fg:w="14"/><text x="4.6352%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.05%)</title><rect x="4.4221%" y="149" width="0.0491%" height="15" fill="rgb(221,78,26)" fg:x="720" fg:w="8"/><text x="4.6721%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="4.4221%" y="133" width="0.0491%" height="15" fill="rgb(250,127,30)" fg:x="720" fg:w="8"/><text x="4.6721%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="4.4589%" y="117" width="0.0123%" height="15" fill="rgb(230,49,44)" fg:x="726" fg:w="2"/><text x="4.7089%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="4.4773%" y="165" width="0.0737%" height="15" fill="rgb(229,67,23)" fg:x="729" fg:w="12"/><text x="4.7273%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="4.5142%" y="149" width="0.0369%" height="15" fill="rgb(249,83,47)" fg:x="735" fg:w="6"/><text x="4.7642%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="4.5510%" y="165" width="0.0307%" height="15" fill="rgb(215,43,3)" fg:x="741" fg:w="5"/><text x="4.8010%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (277 samples, 1.70%)</title><rect x="2.9972%" y="213" width="1.7013%" height="15" fill="rgb(238,154,13)" fg:x="488" fg:w="277"/><text x="3.2472%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (79 samples, 0.49%)</title><rect x="4.2132%" y="197" width="0.4852%" height="15" fill="rgb(219,56,2)" fg:x="686" fg:w="79"/><text x="4.4632%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (53 samples, 0.33%)</title><rect x="4.3729%" y="181" width="0.3255%" height="15" fill="rgb(233,0,4)" fg:x="712" fg:w="53"/><text x="4.6229%" y="191.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (19 samples, 0.12%)</title><rect x="4.5817%" y="165" width="0.1167%" height="15" fill="rgb(235,30,7)" fg:x="746" fg:w="19"/><text x="4.8317%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (5 samples, 0.03%)</title><rect x="4.6984%" y="213" width="0.0307%" height="15" fill="rgb(250,79,13)" fg:x="765" fg:w="5"/><text x="4.9484%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.06%)</title><rect x="4.7353%" y="197" width="0.0614%" height="15" fill="rgb(211,146,34)" fg:x="771" fg:w="10"/><text x="4.9853%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.06%)</title><rect x="4.7414%" y="181" width="0.0553%" height="15" fill="rgb(228,22,38)" fg:x="772" fg:w="9"/><text x="4.9914%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.04%)</title><rect x="4.7537%" y="165" width="0.0430%" height="15" fill="rgb(235,168,5)" fg:x="774" fg:w="7"/><text x="5.0037%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="4.7844%" y="149" width="0.0123%" height="15" fill="rgb(221,155,16)" fg:x="779" fg:w="2"/><text x="5.0344%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="4.8028%" y="197" width="0.0184%" height="15" fill="rgb(215,215,53)" fg:x="782" fg:w="3"/><text x="5.0528%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="4.8090%" y="181" width="0.0123%" height="15" fill="rgb(223,4,10)" fg:x="783" fg:w="2"/><text x="5.0590%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="4.8213%" y="197" width="0.0123%" height="15" fill="rgb(234,103,6)" fg:x="785" fg:w="2"/><text x="5.0713%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="4.8336%" y="197" width="0.0246%" height="15" fill="rgb(227,97,0)" fg:x="787" fg:w="4"/><text x="5.0836%" y="207.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="4.8704%" y="197" width="0.0123%" height="15" fill="rgb(234,150,53)" fg:x="793" fg:w="2"/><text x="5.1204%" y="207.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="4.8827%" y="197" width="0.0123%" height="15" fill="rgb(228,201,54)" fg:x="795" fg:w="2"/><text x="5.1327%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="4.9625%" y="149" width="0.0491%" height="15" fill="rgb(222,22,37)" fg:x="808" fg:w="8"/><text x="5.2125%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.10%)</title><rect x="4.9257%" y="181" width="0.1044%" height="15" fill="rgb(237,53,32)" fg:x="802" fg:w="17"/><text x="5.1757%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.09%)</title><rect x="4.9441%" y="165" width="0.0860%" height="15" fill="rgb(233,25,53)" fg:x="805" fg:w="14"/><text x="5.1941%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="5.0117%" y="149" width="0.0184%" height="15" fill="rgb(210,40,34)" fg:x="816" fg:w="3"/><text x="5.2617%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="5.0301%" y="181" width="0.0184%" height="15" fill="rgb(241,220,44)" fg:x="819" fg:w="3"/><text x="5.2801%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="5.0485%" y="181" width="0.0307%" height="15" fill="rgb(235,28,35)" fg:x="822" fg:w="5"/><text x="5.2985%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (376 samples, 2.31%)</title><rect x="2.9787%" y="229" width="2.3093%" height="15" fill="rgb(210,56,17)" fg:x="485" fg:w="376"/><text x="3.2287%" y="239.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (90 samples, 0.55%)</title><rect x="4.7353%" y="213" width="0.5528%" height="15" fill="rgb(224,130,29)" fg:x="771" fg:w="90"/><text x="4.9853%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (64 samples, 0.39%)</title><rect x="4.8950%" y="197" width="0.3931%" height="15" fill="rgb(235,212,8)" fg:x="797" fg:w="64"/><text x="5.1450%" y="207.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (33 samples, 0.20%)</title><rect x="5.0854%" y="181" width="0.2027%" height="15" fill="rgb(223,33,50)" fg:x="828" fg:w="33"/><text x="5.3354%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (2 samples, 0.01%)</title><rect x="5.2880%" y="229" width="0.0123%" height="15" fill="rgb(219,149,13)" fg:x="861" fg:w="2"/><text x="5.5380%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="5.3065%" y="181" width="0.0123%" height="15" fill="rgb(250,156,29)" fg:x="864" fg:w="2"/><text x="5.5565%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.02%)</title><rect x="5.3065%" y="213" width="0.0184%" height="15" fill="rgb(216,193,19)" fg:x="864" fg:w="3"/><text x="5.5565%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="5.3065%" y="197" width="0.0184%" height="15" fill="rgb(216,135,14)" fg:x="864" fg:w="3"/><text x="5.5565%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="5.3249%" y="213" width="0.0184%" height="15" fill="rgb(241,47,5)" fg:x="867" fg:w="3"/><text x="5.5749%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="5.3433%" y="213" width="0.0246%" height="15" fill="rgb(233,42,35)" fg:x="870" fg:w="4"/><text x="5.5933%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.02%)</title><rect x="5.3679%" y="213" width="0.0246%" height="15" fill="rgb(231,13,6)" fg:x="874" fg:w="4"/><text x="5.6179%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="5.3925%" y="213" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="878" fg:w="2"/><text x="5.6425%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="5.4907%" y="165" width="0.0553%" height="15" fill="rgb(254,173,49)" fg:x="894" fg:w="9"/><text x="5.7407%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.10%)</title><rect x="5.4539%" y="197" width="0.0983%" height="15" fill="rgb(221,1,38)" fg:x="888" fg:w="16"/><text x="5.7039%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.08%)</title><rect x="5.4723%" y="181" width="0.0798%" height="15" fill="rgb(206,124,46)" fg:x="891" fg:w="13"/><text x="5.7223%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="5.5521%" y="197" width="0.0123%" height="15" fill="rgb(249,21,11)" fg:x="904" fg:w="2"/><text x="5.8021%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.06%)</title><rect x="5.5644%" y="197" width="0.0553%" height="15" fill="rgb(222,201,40)" fg:x="906" fg:w="9"/><text x="5.8144%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="5.5951%" y="181" width="0.0246%" height="15" fill="rgb(235,61,29)" fg:x="911" fg:w="4"/><text x="5.8451%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="5.6197%" y="197" width="0.0246%" height="15" fill="rgb(219,207,3)" fg:x="915" fg:w="4"/><text x="5.8697%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (469 samples, 2.88%)</title><rect x="2.9542%" y="245" width="2.8805%" height="15" fill="rgb(222,56,46)" fg:x="481" fg:w="469"/><text x="3.2042%" y="255.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (86 samples, 0.53%)</title><rect x="5.3065%" y="229" width="0.5282%" height="15" fill="rgb(239,76,54)" fg:x="864" fg:w="86"/><text x="5.5565%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (67 samples, 0.41%)</title><rect x="5.4232%" y="213" width="0.4115%" height="15" fill="rgb(231,124,27)" fg:x="883" fg:w="67"/><text x="5.6732%" y="223.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (31 samples, 0.19%)</title><rect x="5.6443%" y="197" width="0.1904%" height="15" fill="rgb(249,195,6)" fg:x="919" fg:w="31"/><text x="5.8943%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="5.8777%" y="229" width="0.0246%" height="15" fill="rgb(237,174,47)" fg:x="957" fg:w="4"/><text x="6.1277%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="5.8899%" y="213" width="0.0123%" height="15" fill="rgb(206,201,31)" fg:x="959" fg:w="2"/><text x="6.1399%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="5.8899%" y="197" width="0.0123%" height="15" fill="rgb(231,57,52)" fg:x="959" fg:w="2"/><text x="6.1399%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="5.9022%" y="229" width="0.0184%" height="15" fill="rgb(248,177,22)" fg:x="961" fg:w="3"/><text x="6.1522%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="5.9268%" y="229" width="0.0369%" height="15" fill="rgb(215,211,37)" fg:x="965" fg:w="6"/><text x="6.1768%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="5.9636%" y="229" width="0.0123%" height="15" fill="rgb(241,128,51)" fg:x="971" fg:w="2"/><text x="6.2136%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="5.9759%" y="229" width="0.0184%" height="15" fill="rgb(227,165,31)" fg:x="973" fg:w="3"/><text x="6.2259%" y="239.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="6.0066%" y="229" width="0.0123%" height="15" fill="rgb(228,167,24)" fg:x="978" fg:w="2"/><text x="6.2566%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="6.1172%" y="181" width="0.0553%" height="15" fill="rgb(228,143,12)" fg:x="996" fg:w="9"/><text x="6.3672%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.11%)</title><rect x="6.0681%" y="213" width="0.1106%" height="15" fill="rgb(249,149,8)" fg:x="988" fg:w="18"/><text x="6.3181%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.08%)</title><rect x="6.0988%" y="197" width="0.0798%" height="15" fill="rgb(243,35,44)" fg:x="993" fg:w="13"/><text x="6.3488%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="6.1786%" y="213" width="0.0123%" height="15" fill="rgb(246,89,9)" fg:x="1006" fg:w="2"/><text x="6.4286%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.06%)</title><rect x="6.1909%" y="213" width="0.0614%" height="15" fill="rgb(233,213,13)" fg:x="1008" fg:w="10"/><text x="6.4409%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="6.2155%" y="197" width="0.0369%" height="15" fill="rgb(233,141,41)" fg:x="1012" fg:w="6"/><text x="6.4655%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="6.2523%" y="213" width="0.0307%" height="15" fill="rgb(239,167,4)" fg:x="1018" fg:w="5"/><text x="6.5023%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (573 samples, 3.52%)</title><rect x="2.9419%" y="261" width="3.5192%" height="15" fill="rgb(209,217,16)" fg:x="479" fg:w="573"/><text x="3.1919%" y="271.50">sud..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (102 samples, 0.63%)</title><rect x="5.8347%" y="245" width="0.6265%" height="15" fill="rgb(219,88,35)" fg:x="950" fg:w="102"/><text x="6.0847%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (72 samples, 0.44%)</title><rect x="6.0189%" y="229" width="0.4422%" height="15" fill="rgb(220,193,23)" fg:x="980" fg:w="72"/><text x="6.2689%" y="239.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (29 samples, 0.18%)</title><rect x="6.2830%" y="213" width="0.1781%" height="15" fill="rgb(230,90,52)" fg:x="1023" fg:w="29"/><text x="6.5330%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.02%)</title><rect x="6.4611%" y="261" width="0.0184%" height="15" fill="rgb(252,106,19)" fg:x="1052" fg:w="3"/><text x="6.7111%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="6.4795%" y="261" width="0.0123%" height="15" fill="rgb(206,74,20)" fg:x="1055" fg:w="2"/><text x="6.7295%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.05%)</title><rect x="6.4918%" y="245" width="0.0491%" height="15" fill="rgb(230,138,44)" fg:x="1057" fg:w="8"/><text x="6.7418%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="6.4980%" y="229" width="0.0430%" height="15" fill="rgb(235,182,43)" fg:x="1058" fg:w="7"/><text x="6.7480%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.04%)</title><rect x="6.5041%" y="213" width="0.0369%" height="15" fill="rgb(242,16,51)" fg:x="1059" fg:w="6"/><text x="6.7541%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="6.5410%" y="245" width="0.0246%" height="15" fill="rgb(248,9,4)" fg:x="1065" fg:w="4"/><text x="6.7910%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="6.5655%" y="245" width="0.0246%" height="15" fill="rgb(210,31,22)" fg:x="1069" fg:w="4"/><text x="6.8155%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.02%)</title><rect x="6.5717%" y="229" width="0.0184%" height="15" fill="rgb(239,54,39)" fg:x="1070" fg:w="3"/><text x="6.8217%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="6.5901%" y="245" width="0.0123%" height="15" fill="rgb(230,99,41)" fg:x="1073" fg:w="2"/><text x="6.8401%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.02%)</title><rect x="6.6085%" y="245" width="0.0184%" height="15" fill="rgb(253,106,12)" fg:x="1076" fg:w="3"/><text x="6.8585%" y="255.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="6.6270%" y="245" width="0.0184%" height="15" fill="rgb(213,46,41)" fg:x="1079" fg:w="3"/><text x="6.8770%" y="255.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (5 samples, 0.03%)</title><rect x="6.6515%" y="245" width="0.0307%" height="15" fill="rgb(215,133,35)" fg:x="1083" fg:w="5"/><text x="6.9015%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.10%)</title><rect x="6.7314%" y="229" width="0.0983%" height="15" fill="rgb(213,28,5)" fg:x="1096" fg:w="16"/><text x="6.9814%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.05%)</title><rect x="6.7805%" y="213" width="0.0491%" height="15" fill="rgb(215,77,49)" fg:x="1104" fg:w="8"/><text x="7.0305%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.04%)</title><rect x="6.7866%" y="197" width="0.0430%" height="15" fill="rgb(248,100,22)" fg:x="1105" fg:w="7"/><text x="7.0366%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.12%)</title><rect x="6.8358%" y="229" width="0.1167%" height="15" fill="rgb(208,67,9)" fg:x="1113" fg:w="19"/><text x="7.0858%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.06%)</title><rect x="6.8910%" y="213" width="0.0614%" height="15" fill="rgb(219,133,21)" fg:x="1122" fg:w="10"/><text x="7.1410%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.04%)</title><rect x="6.9586%" y="229" width="0.0369%" height="15" fill="rgb(246,46,29)" fg:x="1133" fg:w="6"/><text x="7.2086%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="6.9955%" y="229" width="0.0123%" height="15" fill="rgb(246,185,52)" fg:x="1139" fg:w="2"/><text x="7.2455%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (706 samples, 4.34%)</title><rect x="2.8989%" y="277" width="4.3361%" height="15" fill="rgb(252,136,11)" fg:x="472" fg:w="706"/><text x="3.1489%" y="287.50">sudok..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (121 samples, 0.74%)</title><rect x="6.4918%" y="261" width="0.7432%" height="15" fill="rgb(219,138,53)" fg:x="1057" fg:w="121"/><text x="6.7418%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (90 samples, 0.55%)</title><rect x="6.6822%" y="245" width="0.5528%" height="15" fill="rgb(211,51,23)" fg:x="1088" fg:w="90"/><text x="6.9322%" y="255.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (37 samples, 0.23%)</title><rect x="7.0077%" y="229" width="0.2272%" height="15" fill="rgb(247,221,28)" fg:x="1141" fg:w="37"/><text x="7.2577%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.02%)</title><rect x="7.2350%" y="277" width="0.0184%" height="15" fill="rgb(251,222,45)" fg:x="1178" fg:w="3"/><text x="7.4850%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="7.2596%" y="261" width="0.0307%" height="15" fill="rgb(217,162,53)" fg:x="1182" fg:w="5"/><text x="7.5096%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.03%)</title><rect x="7.2596%" y="245" width="0.0307%" height="15" fill="rgb(229,93,14)" fg:x="1182" fg:w="5"/><text x="7.5096%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="7.2596%" y="229" width="0.0307%" height="15" fill="rgb(209,67,49)" fg:x="1182" fg:w="5"/><text x="7.5096%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="7.3025%" y="261" width="0.0369%" height="15" fill="rgb(213,87,29)" fg:x="1189" fg:w="6"/><text x="7.5525%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="7.3271%" y="245" width="0.0123%" height="15" fill="rgb(205,151,52)" fg:x="1193" fg:w="2"/><text x="7.5771%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="7.3455%" y="261" width="0.0246%" height="15" fill="rgb(253,215,39)" fg:x="1196" fg:w="4"/><text x="7.5955%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="7.3701%" y="261" width="0.0123%" height="15" fill="rgb(221,220,41)" fg:x="1200" fg:w="2"/><text x="7.6201%" y="271.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="7.3824%" y="261" width="0.0123%" height="15" fill="rgb(218,133,21)" fg:x="1202" fg:w="2"/><text x="7.6324%" y="271.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (4 samples, 0.02%)</title><rect x="7.3947%" y="261" width="0.0246%" height="15" fill="rgb(221,193,43)" fg:x="1204" fg:w="4"/><text x="7.6447%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="7.5544%" y="213" width="0.0491%" height="15" fill="rgb(240,128,52)" fg:x="1230" fg:w="8"/><text x="7.8044%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.12%)</title><rect x="7.4991%" y="245" width="0.1167%" height="15" fill="rgb(253,114,12)" fg:x="1221" fg:w="19"/><text x="7.7491%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.07%)</title><rect x="7.5421%" y="229" width="0.0737%" height="15" fill="rgb(215,223,47)" fg:x="1228" fg:w="12"/><text x="7.7921%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="7.6035%" y="213" width="0.0123%" height="15" fill="rgb(248,225,23)" fg:x="1238" fg:w="2"/><text x="7.8535%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.09%)</title><rect x="7.6158%" y="245" width="0.0860%" height="15" fill="rgb(250,108,0)" fg:x="1240" fg:w="14"/><text x="7.8658%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.02%)</title><rect x="7.6833%" y="229" width="0.0184%" height="15" fill="rgb(228,208,7)" fg:x="1251" fg:w="3"/><text x="7.9333%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.04%)</title><rect x="7.7018%" y="245" width="0.0369%" height="15" fill="rgb(244,45,10)" fg:x="1254" fg:w="6"/><text x="7.9518%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="7.7386%" y="245" width="0.0246%" height="15" fill="rgb(207,125,25)" fg:x="1260" fg:w="4"/><text x="7.9886%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (831 samples, 5.10%)</title><rect x="2.8743%" y="293" width="5.1038%" height="15" fill="rgb(210,195,18)" fg:x="468" fg:w="831"/><text x="3.1243%" y="303.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (117 samples, 0.72%)</title><rect x="7.2596%" y="277" width="0.7186%" height="15" fill="rgb(249,80,12)" fg:x="1182" fg:w="117"/><text x="7.5096%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (91 samples, 0.56%)</title><rect x="7.4192%" y="261" width="0.5589%" height="15" fill="rgb(221,65,9)" fg:x="1208" fg:w="91"/><text x="7.6692%" y="271.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (35 samples, 0.21%)</title><rect x="7.7632%" y="245" width="0.2150%" height="15" fill="rgb(235,49,36)" fg:x="1264" fg:w="35"/><text x="8.0132%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.02%)</title><rect x="7.9781%" y="293" width="0.0184%" height="15" fill="rgb(225,32,20)" fg:x="1299" fg:w="3"/><text x="8.2281%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="8.0027%" y="277" width="0.0307%" height="15" fill="rgb(215,141,46)" fg:x="1303" fg:w="5"/><text x="8.2527%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="8.0150%" y="261" width="0.0184%" height="15" fill="rgb(250,160,47)" fg:x="1305" fg:w="3"/><text x="8.2650%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="8.0150%" y="245" width="0.0184%" height="15" fill="rgb(216,222,40)" fg:x="1305" fg:w="3"/><text x="8.2650%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="8.0211%" y="229" width="0.0123%" height="15" fill="rgb(234,217,39)" fg:x="1306" fg:w="2"/><text x="8.2711%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="8.0396%" y="277" width="0.0184%" height="15" fill="rgb(207,178,40)" fg:x="1309" fg:w="3"/><text x="8.2896%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="8.0580%" y="277" width="0.0184%" height="15" fill="rgb(221,136,13)" fg:x="1312" fg:w="3"/><text x="8.3080%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="8.0764%" y="277" width="0.0184%" height="15" fill="rgb(249,199,10)" fg:x="1315" fg:w="3"/><text x="8.3264%" y="287.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="8.1010%" y="277" width="0.0184%" height="15" fill="rgb(249,222,13)" fg:x="1319" fg:w="3"/><text x="8.3510%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.09%)</title><rect x="8.2177%" y="261" width="0.0921%" height="15" fill="rgb(244,185,38)" fg:x="1338" fg:w="15"/><text x="8.4677%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.07%)</title><rect x="8.2422%" y="245" width="0.0676%" height="15" fill="rgb(236,202,9)" fg:x="1342" fg:w="11"/><text x="8.4922%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="8.2545%" y="229" width="0.0553%" height="15" fill="rgb(250,229,37)" fg:x="1344" fg:w="9"/><text x="8.5045%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="8.2975%" y="213" width="0.0123%" height="15" fill="rgb(206,174,23)" fg:x="1351" fg:w="2"/><text x="8.5475%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.13%)</title><rect x="8.3098%" y="261" width="0.1290%" height="15" fill="rgb(211,33,43)" fg:x="1353" fg:w="21"/><text x="8.5598%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.06%)</title><rect x="8.3835%" y="245" width="0.0553%" height="15" fill="rgb(245,58,50)" fg:x="1365" fg:w="9"/><text x="8.6335%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.06%)</title><rect x="8.4388%" y="261" width="0.0553%" height="15" fill="rgb(244,68,36)" fg:x="1374" fg:w="9"/><text x="8.6888%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (961 samples, 5.90%)</title><rect x="2.8498%" y="309" width="5.9022%" height="15" fill="rgb(232,229,15)" fg:x="464" fg:w="961"/><text x="3.0998%" y="319.50">sudoku-s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (122 samples, 0.75%)</title><rect x="8.0027%" y="293" width="0.7493%" height="15" fill="rgb(254,30,23)" fg:x="1303" fg:w="122"/><text x="8.2527%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (101 samples, 0.62%)</title><rect x="8.1317%" y="277" width="0.6203%" height="15" fill="rgb(235,160,14)" fg:x="1324" fg:w="101"/><text x="8.3817%" y="287.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (42 samples, 0.26%)</title><rect x="8.4940%" y="261" width="0.2580%" height="15" fill="rgb(212,155,44)" fg:x="1383" fg:w="42"/><text x="8.7440%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (8 samples, 0.05%)</title><rect x="8.7520%" y="309" width="0.0491%" height="15" fill="rgb(226,2,50)" fg:x="1425" fg:w="8"/><text x="9.0020%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (6 samples, 0.04%)</title><rect x="8.8011%" y="309" width="0.0369%" height="15" fill="rgb(234,177,6)" fg:x="1433" fg:w="6"/><text x="9.0511%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.07%)</title><rect x="8.8380%" y="293" width="0.0676%" height="15" fill="rgb(217,24,9)" fg:x="1439" fg:w="11"/><text x="9.0880%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="8.8625%" y="277" width="0.0430%" height="15" fill="rgb(220,13,46)" fg:x="1443" fg:w="7"/><text x="9.1125%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="8.8748%" y="261" width="0.0307%" height="15" fill="rgb(239,221,27)" fg:x="1445" fg:w="5"/><text x="9.1248%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.04%)</title><rect x="8.9055%" y="293" width="0.0430%" height="15" fill="rgb(222,198,25)" fg:x="1450" fg:w="7"/><text x="9.1555%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.06%)</title><rect x="8.9485%" y="293" width="0.0553%" height="15" fill="rgb(211,99,13)" fg:x="1457" fg:w="9"/><text x="9.1985%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.02%)</title><rect x="8.9854%" y="277" width="0.0184%" height="15" fill="rgb(232,111,31)" fg:x="1463" fg:w="3"/><text x="9.2354%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="9.0038%" y="293" width="0.0184%" height="15" fill="rgb(245,82,37)" fg:x="1466" fg:w="3"/><text x="9.2538%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="9.0222%" y="293" width="0.0246%" height="15" fill="rgb(227,149,46)" fg:x="1469" fg:w="4"/><text x="9.2722%" y="303.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="9.0529%" y="293" width="0.0123%" height="15" fill="rgb(218,36,50)" fg:x="1474" fg:w="2"/><text x="9.3029%" y="303.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (5 samples, 0.03%)</title><rect x="9.0775%" y="293" width="0.0307%" height="15" fill="rgb(226,80,48)" fg:x="1478" fg:w="5"/><text x="9.3275%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.07%)</title><rect x="9.2618%" y="245" width="0.0737%" height="15" fill="rgb(238,224,15)" fg:x="1508" fg:w="12"/><text x="9.5118%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="9.3109%" y="229" width="0.0246%" height="15" fill="rgb(241,136,10)" fg:x="1516" fg:w="4"/><text x="9.5609%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.16%)</title><rect x="9.2065%" y="277" width="0.1597%" height="15" fill="rgb(208,32,45)" fg:x="1499" fg:w="26"/><text x="9.4565%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.11%)</title><rect x="9.2556%" y="261" width="0.1106%" height="15" fill="rgb(207,135,9)" fg:x="1507" fg:w="18"/><text x="9.5056%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="9.3355%" y="245" width="0.0307%" height="15" fill="rgb(206,86,44)" fg:x="1520" fg:w="5"/><text x="9.5855%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="9.3662%" y="277" width="0.0123%" height="15" fill="rgb(245,177,15)" fg:x="1525" fg:w="2"/><text x="9.6162%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.12%)</title><rect x="9.3785%" y="277" width="0.1228%" height="15" fill="rgb(206,64,50)" fg:x="1527" fg:w="20"/><text x="9.6285%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.05%)</title><rect x="9.4522%" y="261" width="0.0491%" height="15" fill="rgb(234,36,40)" fg:x="1539" fg:w="8"/><text x="9.7022%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="9.5013%" y="277" width="0.0123%" height="15" fill="rgb(213,64,8)" fg:x="1547" fg:w="2"/><text x="9.7513%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.05%)</title><rect x="9.5136%" y="277" width="0.0491%" height="15" fill="rgb(210,75,36)" fg:x="1549" fg:w="8"/><text x="9.7636%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="9.5627%" y="277" width="0.0123%" height="15" fill="rgb(229,88,21)" fg:x="1557" fg:w="2"/><text x="9.8127%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,146 samples, 7.04%)</title><rect x="2.8191%" y="325" width="7.0384%" height="15" fill="rgb(252,204,47)" fg:x="459" fg:w="1146"/><text x="3.0691%" y="335.50">sudoku-so..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (166 samples, 1.02%)</title><rect x="8.8380%" y="309" width="1.0195%" height="15" fill="rgb(208,77,27)" fg:x="1439" fg:w="166"/><text x="9.0880%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (122 samples, 0.75%)</title><rect x="9.1082%" y="293" width="0.7493%" height="15" fill="rgb(221,76,26)" fg:x="1483" fg:w="122"/><text x="9.3582%" y="303.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (46 samples, 0.28%)</title><rect x="9.5750%" y="277" width="0.2825%" height="15" fill="rgb(225,139,18)" fg:x="1559" fg:w="46"/><text x="9.8250%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (5 samples, 0.03%)</title><rect x="9.8575%" y="325" width="0.0307%" height="15" fill="rgb(230,137,11)" fg:x="1605" fg:w="5"/><text x="10.1075%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.07%)</title><rect x="9.8944%" y="309" width="0.0737%" height="15" fill="rgb(212,28,1)" fg:x="1611" fg:w="12"/><text x="10.1444%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.06%)</title><rect x="9.9128%" y="293" width="0.0553%" height="15" fill="rgb(248,164,17)" fg:x="1614" fg:w="9"/><text x="10.1628%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="9.9189%" y="277" width="0.0491%" height="15" fill="rgb(222,171,42)" fg:x="1615" fg:w="8"/><text x="10.1689%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="9.9558%" y="261" width="0.0123%" height="15" fill="rgb(243,84,45)" fg:x="1621" fg:w="2"/><text x="10.2058%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="9.9681%" y="309" width="0.0123%" height="15" fill="rgb(252,49,23)" fg:x="1623" fg:w="2"/><text x="10.2181%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="9.9803%" y="309" width="0.0123%" height="15" fill="rgb(215,19,7)" fg:x="1625" fg:w="2"/><text x="10.2303%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.07%)</title><rect x="9.9926%" y="309" width="0.0676%" height="15" fill="rgb(238,81,41)" fg:x="1627" fg:w="11"/><text x="10.2426%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="10.0479%" y="293" width="0.0123%" height="15" fill="rgb(210,199,37)" fg:x="1636" fg:w="2"/><text x="10.2979%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="10.0602%" y="309" width="0.0123%" height="15" fill="rgb(244,192,49)" fg:x="1638" fg:w="2"/><text x="10.3102%" y="319.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="10.0786%" y="309" width="0.0123%" height="15" fill="rgb(226,211,11)" fg:x="1641" fg:w="2"/><text x="10.3286%" y="319.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="10.0970%" y="309" width="0.0184%" height="15" fill="rgb(236,162,54)" fg:x="1644" fg:w="3"/><text x="10.3470%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="10.3550%" y="277" width="0.0246%" height="15" fill="rgb(220,229,9)" fg:x="1686" fg:w="4"/><text x="10.6050%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.28%)</title><rect x="10.2567%" y="293" width="0.2764%" height="15" fill="rgb(250,87,22)" fg:x="1670" fg:w="45"/><text x="10.5067%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.15%)</title><rect x="10.3796%" y="277" width="0.1535%" height="15" fill="rgb(239,43,17)" fg:x="1690" fg:w="25"/><text x="10.6296%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.13%)</title><rect x="10.4041%" y="261" width="0.1290%" height="15" fill="rgb(231,177,25)" fg:x="1694" fg:w="21"/><text x="10.6541%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="10.5208%" y="245" width="0.0123%" height="15" fill="rgb(219,179,1)" fg:x="1713" fg:w="2"/><text x="10.7708%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="10.5331%" y="293" width="0.0123%" height="15" fill="rgb(238,219,53)" fg:x="1715" fg:w="2"/><text x="10.7831%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.15%)</title><rect x="10.5454%" y="293" width="0.1535%" height="15" fill="rgb(232,167,36)" fg:x="1717" fg:w="25"/><text x="10.7954%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="10.6744%" y="277" width="0.0246%" height="15" fill="rgb(244,19,51)" fg:x="1738" fg:w="4"/><text x="10.9244%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.10%)</title><rect x="10.6989%" y="293" width="0.1044%" height="15" fill="rgb(224,6,22)" fg:x="1742" fg:w="17"/><text x="10.9489%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="10.8095%" y="293" width="0.0246%" height="15" fill="rgb(224,145,5)" fg:x="1760" fg:w="4"/><text x="11.0595%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,379 samples, 8.47%)</title><rect x="2.7761%" y="341" width="8.4695%" height="15" fill="rgb(234,130,49)" fg:x="452" fg:w="1379"/><text x="3.0261%" y="351.50">sudoku-solve..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (220 samples, 1.35%)</title><rect x="9.8944%" y="325" width="1.3512%" height="15" fill="rgb(254,6,2)" fg:x="1611" fg:w="220"/><text x="10.1444%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (184 samples, 1.13%)</title><rect x="10.1155%" y="309" width="1.1301%" height="15" fill="rgb(208,96,46)" fg:x="1647" fg:w="184"/><text x="10.3655%" y="319.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (67 samples, 0.41%)</title><rect x="10.8340%" y="293" width="0.4115%" height="15" fill="rgb(239,3,39)" fg:x="1764" fg:w="67"/><text x="11.0840%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (9 samples, 0.06%)</title><rect x="11.2455%" y="341" width="0.0553%" height="15" fill="rgb(233,210,1)" fg:x="1831" fg:w="9"/><text x="11.4955%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="11.3008%" y="341" width="0.0123%" height="15" fill="rgb(244,137,37)" fg:x="1840" fg:w="2"/><text x="11.5508%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="11.3561%" y="309" width="0.0184%" height="15" fill="rgb(240,136,2)" fg:x="1849" fg:w="3"/><text x="11.6061%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.12%)</title><rect x="11.3131%" y="325" width="0.1228%" height="15" fill="rgb(239,18,37)" fg:x="1842" fg:w="20"/><text x="11.5631%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.06%)</title><rect x="11.3745%" y="309" width="0.0614%" height="15" fill="rgb(218,185,22)" fg:x="1852" fg:w="10"/><text x="11.6245%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="11.3807%" y="293" width="0.0553%" height="15" fill="rgb(225,218,4)" fg:x="1853" fg:w="9"/><text x="11.6307%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="11.4175%" y="277" width="0.0184%" height="15" fill="rgb(230,182,32)" fg:x="1859" fg:w="3"/><text x="11.6675%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="11.4359%" y="325" width="0.0246%" height="15" fill="rgb(242,56,43)" fg:x="1862" fg:w="4"/><text x="11.6859%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="11.4605%" y="325" width="0.0123%" height="15" fill="rgb(233,99,24)" fg:x="1866" fg:w="2"/><text x="11.7105%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.08%)</title><rect x="11.4728%" y="325" width="0.0798%" height="15" fill="rgb(234,209,42)" fg:x="1868" fg:w="13"/><text x="11.7228%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="11.5281%" y="309" width="0.0246%" height="15" fill="rgb(227,7,12)" fg:x="1877" fg:w="4"/><text x="11.7781%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.04%)</title><rect x="11.5526%" y="325" width="0.0369%" height="15" fill="rgb(245,203,43)" fg:x="1881" fg:w="6"/><text x="11.8026%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.04%)</title><rect x="11.5895%" y="325" width="0.0430%" height="15" fill="rgb(238,205,33)" fg:x="1887" fg:w="7"/><text x="11.8395%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="11.6325%" y="325" width="0.0123%" height="15" fill="rgb(231,56,7)" fg:x="1894" fg:w="2"/><text x="11.8825%" y="335.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (7 samples, 0.04%)</title><rect x="11.6448%" y="325" width="0.0430%" height="15" fill="rgb(244,186,29)" fg:x="1896" fg:w="7"/><text x="11.8948%" y="335.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (7 samples, 0.04%)</title><rect x="11.6878%" y="325" width="0.0430%" height="15" fill="rgb(234,111,31)" fg:x="1903" fg:w="7"/><text x="11.9378%" y="335.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (11 samples, 0.07%)</title><rect x="11.7307%" y="325" width="0.0676%" height="15" fill="rgb(241,149,10)" fg:x="1910" fg:w="11"/><text x="11.9807%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="12.1177%" y="293" width="0.0307%" height="15" fill="rgb(249,206,44)" fg:x="1973" fg:w="5"/><text x="12.3677%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.17%)</title><rect x="12.2098%" y="277" width="0.1720%" height="15" fill="rgb(251,153,30)" fg:x="1988" fg:w="28"/><text x="12.4598%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="12.3633%" y="261" width="0.0184%" height="15" fill="rgb(239,152,38)" fg:x="2013" fg:w="3"/><text x="12.6133%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.40%)</title><rect x="12.0010%" y="309" width="0.3992%" height="15" fill="rgb(249,139,47)" fg:x="1954" fg:w="65"/><text x="12.2510%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.25%)</title><rect x="12.1484%" y="293" width="0.2518%" height="15" fill="rgb(244,64,35)" fg:x="1978" fg:w="41"/><text x="12.3984%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="12.3818%" y="277" width="0.0184%" height="15" fill="rgb(216,46,15)" fg:x="2016" fg:w="3"/><text x="12.6318%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.04%)</title><rect x="12.4002%" y="309" width="0.0369%" height="15" fill="rgb(250,74,19)" fg:x="2019" fg:w="6"/><text x="12.6502%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.20%)</title><rect x="12.4370%" y="309" width="0.1965%" height="15" fill="rgb(249,42,33)" fg:x="2025" fg:w="32"/><text x="12.6870%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.11%)</title><rect x="12.5230%" y="293" width="0.1106%" height="15" fill="rgb(242,149,17)" fg:x="2039" fg:w="18"/><text x="12.7730%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.10%)</title><rect x="12.6397%" y="309" width="0.0983%" height="15" fill="rgb(244,29,21)" fg:x="2058" fg:w="16"/><text x="12.8897%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="12.7380%" y="309" width="0.0246%" height="15" fill="rgb(220,130,37)" fg:x="2074" fg:w="4"/><text x="12.9880%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,743 samples, 10.71%)</title><rect x="2.7208%" y="357" width="10.7051%" height="15" fill="rgb(211,67,2)" fg:x="443" fg:w="1743"/><text x="2.9708%" y="367.50">sudoku-solver`su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (344 samples, 2.11%)</title><rect x="11.3131%" y="341" width="2.1128%" height="15" fill="rgb(235,68,52)" fg:x="1842" fg:w="344"/><text x="11.5631%" y="351.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (265 samples, 1.63%)</title><rect x="11.7983%" y="325" width="1.6276%" height="15" fill="rgb(246,142,3)" fg:x="1921" fg:w="265"/><text x="12.0483%" y="335.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (108 samples, 0.66%)</title><rect x="12.7626%" y="309" width="0.6633%" height="15" fill="rgb(241,25,7)" fg:x="2078" fg:w="108"/><text x="13.0126%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (18 samples, 0.11%)</title><rect x="13.4259%" y="357" width="0.1106%" height="15" fill="rgb(242,119,39)" fg:x="2186" fg:w="18"/><text x="13.6759%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.07%)</title><rect x="13.6593%" y="309" width="0.0737%" height="15" fill="rgb(241,98,45)" fg:x="2224" fg:w="12"/><text x="13.9093%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.21%)</title><rect x="13.5426%" y="341" width="0.2088%" height="15" fill="rgb(254,28,30)" fg:x="2205" fg:w="34"/><text x="13.7926%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.13%)</title><rect x="13.6224%" y="325" width="0.1290%" height="15" fill="rgb(241,142,54)" fg:x="2218" fg:w="21"/><text x="13.8724%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="13.7330%" y="309" width="0.0184%" height="15" fill="rgb(222,85,15)" fg:x="2236" fg:w="3"/><text x="13.9830%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.08%)</title><rect x="13.7514%" y="341" width="0.0798%" height="15" fill="rgb(210,85,47)" fg:x="2239" fg:w="13"/><text x="14.0014%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="13.8312%" y="341" width="0.0307%" height="15" fill="rgb(224,206,25)" fg:x="2252" fg:w="5"/><text x="14.0812%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.21%)</title><rect x="13.8619%" y="341" width="0.2088%" height="15" fill="rgb(243,201,19)" fg:x="2257" fg:w="34"/><text x="14.1119%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.04%)</title><rect x="14.0278%" y="325" width="0.0430%" height="15" fill="rgb(236,59,4)" fg:x="2284" fg:w="7"/><text x="14.2778%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.06%)</title><rect x="14.0708%" y="341" width="0.0553%" height="15" fill="rgb(254,179,45)" fg:x="2291" fg:w="9"/><text x="14.3208%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.08%)</title><rect x="14.1260%" y="341" width="0.0798%" height="15" fill="rgb(226,14,10)" fg:x="2300" fg:w="13"/><text x="14.3760%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.02%)</title><rect x="14.2059%" y="341" width="0.0184%" height="15" fill="rgb(244,27,41)" fg:x="2313" fg:w="3"/><text x="14.4559%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (10 samples, 0.06%)</title><rect x="14.2243%" y="341" width="0.0614%" height="15" fill="rgb(235,35,32)" fg:x="2316" fg:w="10"/><text x="14.4743%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="14.2857%" y="341" width="0.0307%" height="15" fill="rgb(218,68,31)" fg:x="2326" fg:w="5"/><text x="14.5357%" y="351.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="14.3164%" y="341" width="0.0123%" height="15" fill="rgb(207,120,37)" fg:x="2331" fg:w="2"/><text x="14.5664%" y="351.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (11 samples, 0.07%)</title><rect x="14.3287%" y="341" width="0.0676%" height="15" fill="rgb(227,98,0)" fg:x="2333" fg:w="11"/><text x="14.5787%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="14.9183%" y="309" width="0.0553%" height="15" fill="rgb(207,7,3)" fg:x="2429" fg:w="9"/><text x="15.1683%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (54 samples, 0.33%)</title><rect x="15.0596%" y="293" width="0.3317%" height="15" fill="rgb(206,98,19)" fg:x="2452" fg:w="54"/><text x="15.3096%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.13%)</title><rect x="15.2623%" y="277" width="0.1290%" height="15" fill="rgb(217,5,26)" fg:x="2485" fg:w="21"/><text x="15.5123%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (109 samples, 0.67%)</title><rect x="14.7463%" y="325" width="0.6695%" height="15" fill="rgb(235,190,38)" fg:x="2401" fg:w="109"/><text x="14.9963%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (72 samples, 0.44%)</title><rect x="14.9736%" y="309" width="0.4422%" height="15" fill="rgb(247,86,24)" fg:x="2438" fg:w="72"/><text x="15.2236%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="15.3912%" y="293" width="0.0246%" height="15" fill="rgb(205,101,16)" fg:x="2506" fg:w="4"/><text x="15.6412%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.06%)</title><rect x="15.4158%" y="325" width="0.0614%" height="15" fill="rgb(246,168,33)" fg:x="2510" fg:w="10"/><text x="15.6658%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (91 samples, 0.56%)</title><rect x="15.4772%" y="325" width="0.5589%" height="15" fill="rgb(231,114,1)" fg:x="2520" fg:w="91"/><text x="15.7272%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (41 samples, 0.25%)</title><rect x="15.7843%" y="309" width="0.2518%" height="15" fill="rgb(207,184,53)" fg:x="2570" fg:w="41"/><text x="16.0343%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="16.0361%" y="325" width="0.0123%" height="15" fill="rgb(224,95,51)" fg:x="2611" fg:w="2"/><text x="16.2861%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (19 samples, 0.12%)</title><rect x="16.0484%" y="325" width="0.1167%" height="15" fill="rgb(212,188,45)" fg:x="2613" fg:w="19"/><text x="16.2984%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.05%)</title><rect x="16.1651%" y="325" width="0.0491%" height="15" fill="rgb(223,154,38)" fg:x="2632" fg:w="8"/><text x="16.4151%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,425 samples, 14.89%)</title><rect x="2.5734%" y="373" width="14.8937%" height="15" fill="rgb(251,22,52)" fg:x="419" fg:w="2425"/><text x="2.8234%" y="383.50">sudoku-solver`sudoku_so..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (639 samples, 3.92%)</title><rect x="13.5426%" y="357" width="3.9246%" height="15" fill="rgb(229,209,22)" fg:x="2205" fg:w="639"/><text x="13.7926%" y="367.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (500 samples, 3.07%)</title><rect x="14.3963%" y="341" width="3.0709%" height="15" fill="rgb(234,138,34)" fg:x="2344" fg:w="500"/><text x="14.6463%" y="351.50">sud..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (204 samples, 1.25%)</title><rect x="16.2142%" y="325" width="1.2529%" height="15" fill="rgb(212,95,11)" fg:x="2640" fg:w="204"/><text x="16.4642%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (34 samples, 0.21%)</title><rect x="17.4671%" y="373" width="0.2088%" height="15" fill="rgb(240,179,47)" fg:x="2844" fg:w="34"/><text x="17.7171%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (15 samples, 0.09%)</title><rect x="17.6760%" y="373" width="0.0921%" height="15" fill="rgb(240,163,11)" fg:x="2878" fg:w="15"/><text x="17.9260%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.12%)</title><rect x="17.9523%" y="325" width="0.1167%" height="15" fill="rgb(236,37,12)" fg:x="2923" fg:w="19"/><text x="18.2023%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.04%)</title><rect x="18.0260%" y="309" width="0.0430%" height="15" fill="rgb(232,164,16)" fg:x="2935" fg:w="7"/><text x="18.2760%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.33%)</title><rect x="17.7681%" y="357" width="0.3255%" height="15" fill="rgb(244,205,15)" fg:x="2893" fg:w="53"/><text x="18.0181%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.21%)</title><rect x="17.8786%" y="341" width="0.2150%" height="15" fill="rgb(223,117,47)" fg:x="2911" fg:w="35"/><text x="18.1286%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="18.0690%" y="325" width="0.0246%" height="15" fill="rgb(244,107,35)" fg:x="2942" fg:w="4"/><text x="18.3190%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.08%)</title><rect x="18.0936%" y="357" width="0.0798%" height="15" fill="rgb(205,140,8)" fg:x="2946" fg:w="13"/><text x="18.3436%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.21%)</title><rect x="18.1734%" y="357" width="0.2088%" height="15" fill="rgb(228,84,46)" fg:x="2959" fg:w="34"/><text x="18.4234%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.05%)</title><rect x="18.3331%" y="341" width="0.0491%" height="15" fill="rgb(254,188,9)" fg:x="2985" fg:w="8"/><text x="18.5831%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.07%)</title><rect x="18.3823%" y="357" width="0.0737%" height="15" fill="rgb(206,112,54)" fg:x="2993" fg:w="12"/><text x="18.6323%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.07%)</title><rect x="18.4560%" y="357" width="0.0737%" height="15" fill="rgb(216,84,49)" fg:x="3005" fg:w="12"/><text x="18.7060%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="18.5297%" y="357" width="0.0307%" height="15" fill="rgb(214,194,35)" fg:x="3017" fg:w="5"/><text x="18.7797%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (18 samples, 0.11%)</title><rect x="18.5604%" y="357" width="0.1106%" height="15" fill="rgb(249,28,3)" fg:x="3022" fg:w="18"/><text x="18.8104%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (8 samples, 0.05%)</title><rect x="18.6709%" y="357" width="0.0491%" height="15" fill="rgb(222,56,52)" fg:x="3040" fg:w="8"/><text x="18.9209%" y="367.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.02%)</title><rect x="18.7201%" y="357" width="0.0184%" height="15" fill="rgb(245,217,50)" fg:x="3048" fg:w="3"/><text x="18.9701%" y="367.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (19 samples, 0.12%)</title><rect x="18.7446%" y="357" width="0.1167%" height="15" fill="rgb(213,201,24)" fg:x="3052" fg:w="19"/><text x="18.9946%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="19.7212%" y="325" width="0.0491%" height="15" fill="rgb(248,116,28)" fg:x="3211" fg:w="8"/><text x="19.9712%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (79 samples, 0.49%)</title><rect x="19.8870%" y="309" width="0.4852%" height="15" fill="rgb(219,72,43)" fg:x="3238" fg:w="79"/><text x="20.1370%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.12%)</title><rect x="20.2555%" y="293" width="0.1167%" height="15" fill="rgb(209,138,14)" fg:x="3298" fg:w="19"/><text x="20.5055%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (159 samples, 0.98%)</title><rect x="19.4264%" y="341" width="0.9765%" height="15" fill="rgb(222,18,33)" fg:x="3163" fg:w="159"/><text x="19.6764%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (103 samples, 0.63%)</title><rect x="19.7703%" y="325" width="0.6326%" height="15" fill="rgb(213,199,7)" fg:x="3219" fg:w="103"/><text x="20.0203%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="20.3722%" y="309" width="0.0307%" height="15" fill="rgb(250,110,10)" fg:x="3317" fg:w="5"/><text x="20.6222%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.07%)</title><rect x="20.4029%" y="341" width="0.0676%" height="15" fill="rgb(248,123,6)" fg:x="3322" fg:w="11"/><text x="20.6529%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (121 samples, 0.74%)</title><rect x="20.4705%" y="341" width="0.7432%" height="15" fill="rgb(206,91,31)" fg:x="3333" fg:w="121"/><text x="20.7205%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (52 samples, 0.32%)</title><rect x="20.8942%" y="325" width="0.3194%" height="15" fill="rgb(211,154,13)" fg:x="3402" fg:w="52"/><text x="21.1442%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.04%)</title><rect x="21.2136%" y="341" width="0.0430%" height="15" fill="rgb(225,148,7)" fg:x="3454" fg:w="7"/><text x="21.4636%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.17%)</title><rect x="21.2566%" y="341" width="0.1720%" height="15" fill="rgb(220,160,43)" fg:x="3461" fg:w="28"/><text x="21.5066%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.04%)</title><rect x="21.4286%" y="341" width="0.0369%" height="15" fill="rgb(213,52,39)" fg:x="3489" fg:w="6"/><text x="21.6786%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3,369 samples, 20.69%)</title><rect x="2.4628%" y="389" width="20.6916%" height="15" fill="rgb(243,137,7)" fg:x="401" fg:w="3369"/><text x="2.7128%" y="399.50">sudoku-solver`sudoku_solver::back..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (877 samples, 5.39%)</title><rect x="17.7681%" y="373" width="5.3863%" height="15" fill="rgb(230,79,13)" fg:x="2893" fg:w="877"/><text x="18.0181%" y="383.50">sudoku-..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (699 samples, 4.29%)</title><rect x="18.8613%" y="357" width="4.2931%" height="15" fill="rgb(247,105,23)" fg:x="3071" fg:w="699"/><text x="19.1113%" y="367.50">sudok..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (275 samples, 1.69%)</title><rect x="21.4654%" y="341" width="1.6890%" height="15" fill="rgb(223,179,41)" fg:x="3495" fg:w="275"/><text x="21.7154%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (42 samples, 0.26%)</title><rect x="23.1544%" y="389" width="0.2580%" height="15" fill="rgb(218,9,34)" fg:x="3770" fg:w="42"/><text x="23.4044%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (15 samples, 0.09%)</title><rect x="23.4124%" y="389" width="0.0921%" height="15" fill="rgb(222,106,8)" fg:x="3812" fg:w="15"/><text x="23.6624%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="23.6396%" y="357" width="0.0553%" height="15" fill="rgb(211,220,0)" fg:x="3849" fg:w="9"/><text x="23.8896%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (35 samples, 0.21%)</title><rect x="23.7563%" y="341" width="0.2150%" height="15" fill="rgb(229,52,16)" fg:x="3868" fg:w="35"/><text x="24.0063%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.07%)</title><rect x="23.8976%" y="325" width="0.0737%" height="15" fill="rgb(212,155,18)" fg:x="3891" fg:w="12"/><text x="24.1476%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.49%)</title><rect x="23.5045%" y="373" width="0.4852%" height="15" fill="rgb(242,21,14)" fg:x="3827" fg:w="79"/><text x="23.7545%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.29%)</title><rect x="23.6949%" y="357" width="0.2948%" height="15" fill="rgb(222,19,48)" fg:x="3858" fg:w="48"/><text x="23.9449%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="23.9713%" y="341" width="0.0184%" height="15" fill="rgb(232,45,27)" fg:x="3903" fg:w="3"/><text x="24.2213%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.08%)</title><rect x="23.9897%" y="373" width="0.0798%" height="15" fill="rgb(249,103,42)" fg:x="3906" fg:w="13"/><text x="24.2397%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (69 samples, 0.42%)</title><rect x="24.0695%" y="373" width="0.4238%" height="15" fill="rgb(246,81,33)" fg:x="3919" fg:w="69"/><text x="24.3195%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.13%)</title><rect x="24.3643%" y="357" width="0.1290%" height="15" fill="rgb(252,33,42)" fg:x="3967" fg:w="21"/><text x="24.6143%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.07%)</title><rect x="24.4933%" y="373" width="0.0737%" height="15" fill="rgb(209,212,41)" fg:x="3988" fg:w="12"/><text x="24.7433%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (26 samples, 0.16%)</title><rect x="24.5670%" y="373" width="0.1597%" height="15" fill="rgb(207,154,6)" fg:x="4000" fg:w="26"/><text x="24.8170%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="24.7267%" y="373" width="0.0123%" height="15" fill="rgb(223,64,47)" fg:x="4026" fg:w="2"/><text x="24.9767%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (21 samples, 0.13%)</title><rect x="24.7390%" y="373" width="0.1290%" height="15" fill="rgb(211,161,38)" fg:x="4028" fg:w="21"/><text x="24.9890%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (7 samples, 0.04%)</title><rect x="24.8680%" y="373" width="0.0430%" height="15" fill="rgb(219,138,40)" fg:x="4049" fg:w="7"/><text x="25.1180%" y="383.50"></text></g><g><title>sudoku-solver`__rdl_alloc (12 samples, 0.07%)</title><rect x="24.9109%" y="373" width="0.0737%" height="15" fill="rgb(241,228,46)" fg:x="4056" fg:w="12"/><text x="25.1609%" y="383.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (29 samples, 0.18%)</title><rect x="24.9846%" y="373" width="0.1781%" height="15" fill="rgb(223,209,38)" fg:x="4068" fg:w="29"/><text x="25.2346%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.08%)</title><rect x="26.3113%" y="341" width="0.0798%" height="15" fill="rgb(236,164,45)" fg:x="4284" fg:w="13"/><text x="26.5613%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (112 samples, 0.69%)</title><rect x="26.5139%" y="325" width="0.6879%" height="15" fill="rgb(231,15,5)" fg:x="4317" fg:w="112"/><text x="26.7639%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.14%)</title><rect x="27.0606%" y="309" width="0.1413%" height="15" fill="rgb(252,35,15)" fg:x="4406" fg:w="23"/><text x="27.3106%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (214 samples, 1.31%)</title><rect x="25.9673%" y="357" width="1.3143%" height="15" fill="rgb(248,181,18)" fg:x="4228" fg:w="214"/><text x="26.2173%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (145 samples, 0.89%)</title><rect x="26.3911%" y="341" width="0.8906%" height="15" fill="rgb(233,39,42)" fg:x="4297" fg:w="145"/><text x="26.6411%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.08%)</title><rect x="27.2018%" y="325" width="0.0798%" height="15" fill="rgb(238,110,33)" fg:x="4429" fg:w="13"/><text x="27.4518%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.09%)</title><rect x="27.2817%" y="357" width="0.0860%" height="15" fill="rgb(233,195,10)" fg:x="4442" fg:w="14"/><text x="27.5317%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (117 samples, 0.72%)</title><rect x="27.3676%" y="357" width="0.7186%" height="15" fill="rgb(254,105,3)" fg:x="4456" fg:w="117"/><text x="27.6176%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (40 samples, 0.25%)</title><rect x="27.8406%" y="341" width="0.2457%" height="15" fill="rgb(221,225,9)" fg:x="4533" fg:w="40"/><text x="28.0906%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.05%)</title><rect x="28.0862%" y="357" width="0.0491%" height="15" fill="rgb(224,227,45)" fg:x="4573" fg:w="8"/><text x="28.3362%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (35 samples, 0.21%)</title><rect x="28.1354%" y="357" width="0.2150%" height="15" fill="rgb(229,198,43)" fg:x="4581" fg:w="35"/><text x="28.3854%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="28.3503%" y="357" width="0.0123%" height="15" fill="rgb(206,209,35)" fg:x="4616" fg:w="2"/><text x="28.6003%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (16 samples, 0.10%)</title><rect x="28.3626%" y="357" width="0.0983%" height="15" fill="rgb(245,195,53)" fg:x="4618" fg:w="16"/><text x="28.6126%" y="367.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4,646 samples, 28.53%)</title><rect x="2.2602%" y="405" width="28.5346%" height="15" fill="rgb(240,92,26)" fg:x="368" fg:w="4646"/><text x="2.5102%" y="415.50">sudoku-solver`sudoku_solver::backtraking::back..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,187 samples, 7.29%)</title><rect x="23.5045%" y="389" width="7.2903%" height="15" fill="rgb(207,40,23)" fg:x="3827" fg:w="1187"/><text x="23.7545%" y="399.50">sudoku-sol..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (917 samples, 5.63%)</title><rect x="25.1628%" y="373" width="5.6320%" height="15" fill="rgb(223,111,35)" fg:x="4097" fg:w="917"/><text x="25.4128%" y="383.50">sudoku-..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (380 samples, 2.33%)</title><rect x="28.4609%" y="357" width="2.3339%" height="15" fill="rgb(229,147,28)" fg:x="4634" fg:w="380"/><text x="28.7109%" y="367.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (40 samples, 0.25%)</title><rect x="30.7947%" y="405" width="0.2457%" height="15" fill="rgb(211,29,28)" fg:x="5014" fg:w="40"/><text x="31.0447%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (20 samples, 0.12%)</title><rect x="31.0404%" y="405" width="0.1228%" height="15" fill="rgb(228,72,33)" fg:x="5054" fg:w="20"/><text x="31.2904%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.17%)</title><rect x="31.3414%" y="357" width="0.1658%" height="15" fill="rgb(205,214,31)" fg:x="5103" fg:w="27"/><text x="31.5914%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.04%)</title><rect x="31.4703%" y="341" width="0.0369%" height="15" fill="rgb(224,111,15)" fg:x="5124" fg:w="6"/><text x="31.7203%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (65 samples, 0.40%)</title><rect x="31.1632%" y="389" width="0.3992%" height="15" fill="rgb(253,21,26)" fg:x="5074" fg:w="65"/><text x="31.4132%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.25%)</title><rect x="31.3106%" y="373" width="0.2518%" height="15" fill="rgb(245,139,43)" fg:x="5098" fg:w="41"/><text x="31.5606%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.06%)</title><rect x="31.5072%" y="357" width="0.0553%" height="15" fill="rgb(252,170,7)" fg:x="5130" fg:w="9"/><text x="31.7572%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.09%)</title><rect x="31.5625%" y="389" width="0.0860%" height="15" fill="rgb(231,118,14)" fg:x="5139" fg:w="14"/><text x="31.8125%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="31.6484%" y="389" width="0.0123%" height="15" fill="rgb(238,83,0)" fg:x="5153" fg:w="2"/><text x="31.8984%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (49 samples, 0.30%)</title><rect x="31.6607%" y="389" width="0.3009%" height="15" fill="rgb(221,39,39)" fg:x="5155" fg:w="49"/><text x="31.9107%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.08%)</title><rect x="31.8818%" y="373" width="0.0798%" height="15" fill="rgb(222,119,46)" fg:x="5191" fg:w="13"/><text x="32.1318%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.07%)</title><rect x="31.9617%" y="389" width="0.0737%" height="15" fill="rgb(222,165,49)" fg:x="5204" fg:w="12"/><text x="32.2117%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (19 samples, 0.12%)</title><rect x="32.0354%" y="389" width="0.1167%" height="15" fill="rgb(219,113,52)" fg:x="5216" fg:w="19"/><text x="32.2854%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="32.1582%" y="389" width="0.0307%" height="15" fill="rgb(214,7,15)" fg:x="5236" fg:w="5"/><text x="32.4082%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (11 samples, 0.07%)</title><rect x="32.1889%" y="389" width="0.0676%" height="15" fill="rgb(235,32,4)" fg:x="5241" fg:w="11"/><text x="32.4389%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="32.2565%" y="389" width="0.0307%" height="15" fill="rgb(238,90,54)" fg:x="5252" fg:w="5"/><text x="32.5065%" y="399.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="32.2872%" y="389" width="0.0123%" height="15" fill="rgb(213,208,19)" fg:x="5257" fg:w="2"/><text x="32.5372%" y="399.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (12 samples, 0.07%)</title><rect x="32.2995%" y="389" width="0.0737%" height="15" fill="rgb(233,156,4)" fg:x="5259" fg:w="12"/><text x="32.5495%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.09%)</title><rect x="33.1409%" y="357" width="0.0860%" height="15" fill="rgb(207,194,5)" fg:x="5396" fg:w="14"/><text x="33.3909%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (101 samples, 0.62%)</title><rect x="33.3620%" y="341" width="0.6203%" height="15" fill="rgb(206,111,30)" fg:x="5432" fg:w="101"/><text x="33.6120%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.17%)</title><rect x="33.8103%" y="325" width="0.1720%" height="15" fill="rgb(243,70,54)" fg:x="5505" fg:w="28"/><text x="34.0603%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (185 samples, 1.14%)</title><rect x="32.9075%" y="373" width="1.1362%" height="15" fill="rgb(242,28,8)" fg:x="5358" fg:w="185"/><text x="33.1575%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (133 samples, 0.82%)</title><rect x="33.2269%" y="357" width="0.8169%" height="15" fill="rgb(219,106,18)" fg:x="5410" fg:w="133"/><text x="33.4769%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.06%)</title><rect x="33.9823%" y="341" width="0.0614%" height="15" fill="rgb(244,222,10)" fg:x="5533" fg:w="10"/><text x="34.2323%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.08%)</title><rect x="34.0437%" y="373" width="0.0798%" height="15" fill="rgb(236,179,52)" fg:x="5543" fg:w="13"/><text x="34.2937%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (108 samples, 0.66%)</title><rect x="34.1236%" y="373" width="0.6633%" height="15" fill="rgb(213,23,39)" fg:x="5556" fg:w="108"/><text x="34.3736%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (45 samples, 0.28%)</title><rect x="34.5105%" y="357" width="0.2764%" height="15" fill="rgb(238,48,10)" fg:x="5619" fg:w="45"/><text x="34.7605%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.04%)</title><rect x="34.7869%" y="373" width="0.0369%" height="15" fill="rgb(251,196,23)" fg:x="5664" fg:w="6"/><text x="35.0369%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (39 samples, 0.24%)</title><rect x="34.8237%" y="373" width="0.2395%" height="15" fill="rgb(250,152,24)" fg:x="5670" fg:w="39"/><text x="35.0737%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (19 samples, 0.12%)</title><rect x="35.0694%" y="373" width="0.1167%" height="15" fill="rgb(209,150,17)" fg:x="5710" fg:w="19"/><text x="35.3194%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (5,702 samples, 35.02%)</title><rect x="2.1005%" y="421" width="35.0203%" height="15" fill="rgb(234,202,34)" fg:x="342" fg:w="5702"/><text x="2.3505%" y="431.50">sudoku-solver`sudoku_solver::backtraking::backtraking_rec..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (970 samples, 5.96%)</title><rect x="31.1632%" y="405" width="5.9575%" height="15" fill="rgb(253,148,53)" fg:x="5074" fg:w="970"/><text x="31.4132%" y="415.50">sudoku-s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (773 samples, 4.75%)</title><rect x="32.3732%" y="389" width="4.7476%" height="15" fill="rgb(218,129,16)" fg:x="5271" fg:w="773"/><text x="32.6232%" y="399.50">sudoku..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (315 samples, 1.93%)</title><rect x="35.1861%" y="373" width="1.9347%" height="15" fill="rgb(216,85,19)" fg:x="5729" fg:w="315"/><text x="35.4361%" y="383.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (44 samples, 0.27%)</title><rect x="37.1207%" y="421" width="0.2702%" height="15" fill="rgb(235,228,7)" fg:x="6044" fg:w="44"/><text x="37.3707%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (13 samples, 0.08%)</title><rect x="37.3910%" y="421" width="0.0798%" height="15" fill="rgb(245,175,0)" fg:x="6088" fg:w="13"/><text x="37.6410%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="37.5814%" y="389" width="0.0184%" height="15" fill="rgb(208,168,36)" fg:x="6119" fg:w="3"/><text x="37.8314%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.15%)</title><rect x="37.6428%" y="373" width="0.1535%" height="15" fill="rgb(246,171,24)" fg:x="6129" fg:w="25"/><text x="37.8928%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.04%)</title><rect x="37.7533%" y="357" width="0.0430%" height="15" fill="rgb(215,142,24)" fg:x="6147" fg:w="7"/><text x="38.0033%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.34%)</title><rect x="37.4708%" y="405" width="0.3378%" height="15" fill="rgb(250,187,7)" fg:x="6101" fg:w="55"/><text x="37.7208%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.21%)</title><rect x="37.5998%" y="389" width="0.2088%" height="15" fill="rgb(228,66,33)" fg:x="6122" fg:w="34"/><text x="37.8498%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="37.7963%" y="373" width="0.0123%" height="15" fill="rgb(234,215,21)" fg:x="6154" fg:w="2"/><text x="38.0463%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.07%)</title><rect x="37.8086%" y="405" width="0.0737%" height="15" fill="rgb(222,191,20)" fg:x="6156" fg:w="12"/><text x="38.0586%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="37.8823%" y="405" width="0.0307%" height="15" fill="rgb(245,79,54)" fg:x="6168" fg:w="5"/><text x="38.1323%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (47 samples, 0.29%)</title><rect x="37.9130%" y="405" width="0.2887%" height="15" fill="rgb(240,10,37)" fg:x="6173" fg:w="47"/><text x="38.1630%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.09%)</title><rect x="38.1096%" y="389" width="0.0921%" height="15" fill="rgb(214,192,32)" fg:x="6205" fg:w="15"/><text x="38.3596%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (14 samples, 0.09%)</title><rect x="38.2017%" y="405" width="0.0860%" height="15" fill="rgb(209,36,54)" fg:x="6220" fg:w="14"/><text x="38.4517%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (26 samples, 0.16%)</title><rect x="38.2877%" y="405" width="0.1597%" height="15" fill="rgb(220,10,11)" fg:x="6234" fg:w="26"/><text x="38.5377%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="38.4474%" y="405" width="0.0184%" height="15" fill="rgb(221,106,17)" fg:x="6260" fg:w="3"/><text x="38.6974%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="38.4658%" y="405" width="0.0123%" height="15" fill="rgb(251,142,44)" fg:x="6263" fg:w="2"/><text x="38.7158%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (13 samples, 0.08%)</title><rect x="38.4781%" y="405" width="0.0798%" height="15" fill="rgb(238,13,15)" fg:x="6265" fg:w="13"/><text x="38.7281%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (10 samples, 0.06%)</title><rect x="38.5579%" y="405" width="0.0614%" height="15" fill="rgb(208,107,27)" fg:x="6278" fg:w="10"/><text x="38.8079%" y="415.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.03%)</title><rect x="38.6193%" y="405" width="0.0307%" height="15" fill="rgb(205,136,37)" fg:x="6288" fg:w="5"/><text x="38.8693%" y="415.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (19 samples, 0.12%)</title><rect x="38.6500%" y="405" width="0.1167%" height="15" fill="rgb(250,205,27)" fg:x="6293" fg:w="19"/><text x="38.9000%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.08%)</title><rect x="39.7064%" y="373" width="0.0798%" height="15" fill="rgb(210,80,43)" fg:x="6465" fg:w="13"/><text x="39.9564%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (85 samples, 0.52%)</title><rect x="39.9582%" y="357" width="0.5220%" height="15" fill="rgb(247,160,36)" fg:x="6506" fg:w="85"/><text x="40.2082%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (25 samples, 0.15%)</title><rect x="40.3267%" y="341" width="0.1535%" height="15" fill="rgb(234,13,49)" fg:x="6566" fg:w="25"/><text x="40.5767%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (192 samples, 1.18%)</title><rect x="39.3932%" y="389" width="1.1792%" height="15" fill="rgb(234,122,0)" fg:x="6414" fg:w="192"/><text x="39.6432%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (128 samples, 0.79%)</title><rect x="39.7863%" y="373" width="0.7861%" height="15" fill="rgb(207,146,38)" fg:x="6478" fg:w="128"/><text x="40.0363%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.09%)</title><rect x="40.4803%" y="357" width="0.0921%" height="15" fill="rgb(207,177,25)" fg:x="6591" fg:w="15"/><text x="40.7303%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.09%)</title><rect x="40.5724%" y="389" width="0.0860%" height="15" fill="rgb(211,178,42)" fg:x="6606" fg:w="14"/><text x="40.8224%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (47 samples, 0.29%)</title><rect x="41.2849%" y="373" width="0.2887%" height="15" fill="rgb(230,69,54)" fg:x="6722" fg:w="47"/><text x="41.5349%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (150 samples, 0.92%)</title><rect x="40.6584%" y="389" width="0.9213%" height="15" fill="rgb(214,135,41)" fg:x="6620" fg:w="150"/><text x="40.9084%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="41.5797%" y="389" width="0.0184%" height="15" fill="rgb(237,67,25)" fg:x="6770" fg:w="3"/><text x="41.8297%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (37 samples, 0.23%)</title><rect x="41.5981%" y="389" width="0.2272%" height="15" fill="rgb(222,189,50)" fg:x="6773" fg:w="37"/><text x="41.8481%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="41.8315%" y="389" width="0.0307%" height="15" fill="rgb(245,148,34)" fg:x="6811" fg:w="5"/><text x="42.0815%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (6,869 samples, 42.19%)</title><rect x="1.9162%" y="437" width="42.1877%" height="15" fill="rgb(222,29,6)" fg:x="312" fg:w="6869"/><text x="2.1662%" y="447.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,080 samples, 6.63%)</title><rect x="37.4708%" y="421" width="6.6331%" height="15" fill="rgb(221,189,43)" fg:x="6101" fg:w="1080"/><text x="37.7208%" y="431.50">sudoku-so..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (869 samples, 5.34%)</title><rect x="38.7667%" y="405" width="5.3372%" height="15" fill="rgb(207,36,27)" fg:x="6312" fg:w="869"/><text x="39.0167%" y="415.50">sudoku-..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (365 samples, 2.24%)</title><rect x="41.8622%" y="389" width="2.2417%" height="15" fill="rgb(217,90,24)" fg:x="6816" fg:w="365"/><text x="42.1122%" y="399.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (30 samples, 0.18%)</title><rect x="44.1039%" y="437" width="0.1843%" height="15" fill="rgb(224,66,35)" fg:x="7181" fg:w="30"/><text x="44.3539%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (13 samples, 0.08%)</title><rect x="44.2882%" y="437" width="0.0798%" height="15" fill="rgb(221,13,50)" fg:x="7211" fg:w="13"/><text x="44.5382%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="44.4847%" y="405" width="0.0123%" height="15" fill="rgb(236,68,49)" fg:x="7243" fg:w="2"/><text x="44.7347%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.19%)</title><rect x="44.5277%" y="389" width="0.1904%" height="15" fill="rgb(229,146,28)" fg:x="7250" fg:w="31"/><text x="44.7777%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.05%)</title><rect x="44.6690%" y="373" width="0.0491%" height="15" fill="rgb(225,31,38)" fg:x="7273" fg:w="8"/><text x="44.9190%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (61 samples, 0.37%)</title><rect x="44.3680%" y="421" width="0.3746%" height="15" fill="rgb(250,208,3)" fg:x="7224" fg:w="61"/><text x="44.6180%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (40 samples, 0.25%)</title><rect x="44.4970%" y="405" width="0.2457%" height="15" fill="rgb(246,54,23)" fg:x="7245" fg:w="40"/><text x="44.7470%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="44.7181%" y="389" width="0.0246%" height="15" fill="rgb(243,76,11)" fg:x="7281" fg:w="4"/><text x="44.9681%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (16 samples, 0.10%)</title><rect x="44.7427%" y="421" width="0.0983%" height="15" fill="rgb(245,21,50)" fg:x="7285" fg:w="16"/><text x="44.9927%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="44.8409%" y="421" width="0.0184%" height="15" fill="rgb(228,9,43)" fg:x="7301" fg:w="3"/><text x="45.0909%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (66 samples, 0.41%)</title><rect x="44.8594%" y="421" width="0.4054%" height="15" fill="rgb(208,100,47)" fg:x="7304" fg:w="66"/><text x="45.1094%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (22 samples, 0.14%)</title><rect x="45.1296%" y="405" width="0.1351%" height="15" fill="rgb(232,26,8)" fg:x="7348" fg:w="22"/><text x="45.3796%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (22 samples, 0.14%)</title><rect x="45.2647%" y="421" width="0.1351%" height="15" fill="rgb(216,166,38)" fg:x="7370" fg:w="22"/><text x="45.5147%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.10%)</title><rect x="45.3998%" y="421" width="0.1044%" height="15" fill="rgb(251,202,51)" fg:x="7392" fg:w="17"/><text x="45.6498%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="45.5042%" y="421" width="0.0123%" height="15" fill="rgb(254,216,34)" fg:x="7409" fg:w="2"/><text x="45.7542%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.06%)</title><rect x="45.5227%" y="421" width="0.0553%" height="15" fill="rgb(251,32,27)" fg:x="7412" fg:w="9"/><text x="45.7727%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.04%)</title><rect x="45.5779%" y="421" width="0.0369%" height="15" fill="rgb(208,127,28)" fg:x="7421" fg:w="6"/><text x="45.8279%" y="431.50"></text></g><g><title>sudoku-solver`__rdl_alloc (15 samples, 0.09%)</title><rect x="45.6148%" y="421" width="0.0921%" height="15" fill="rgb(224,137,22)" fg:x="7427" fg:w="15"/><text x="45.8648%" y="431.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (18 samples, 0.11%)</title><rect x="45.7069%" y="421" width="0.1106%" height="15" fill="rgb(254,70,32)" fg:x="7442" fg:w="18"/><text x="45.9569%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="46.7756%" y="389" width="0.0491%" height="15" fill="rgb(229,75,37)" fg:x="7616" fg:w="8"/><text x="47.0256%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (74 samples, 0.45%)</title><rect x="47.0028%" y="373" width="0.4545%" height="15" fill="rgb(252,64,23)" fg:x="7653" fg:w="74"/><text x="47.2528%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.09%)</title><rect x="47.3652%" y="357" width="0.0921%" height="15" fill="rgb(232,162,48)" fg:x="7712" fg:w="15"/><text x="47.6152%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (172 samples, 1.06%)</title><rect x="46.4685%" y="405" width="1.0564%" height="15" fill="rgb(246,160,12)" fg:x="7566" fg:w="172"/><text x="46.7185%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (114 samples, 0.70%)</title><rect x="46.8247%" y="389" width="0.7002%" height="15" fill="rgb(247,166,0)" fg:x="7624" fg:w="114"/><text x="47.0747%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.07%)</title><rect x="47.4573%" y="373" width="0.0676%" height="15" fill="rgb(249,219,21)" fg:x="7727" fg:w="11"/><text x="47.7073%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.07%)</title><rect x="47.5249%" y="405" width="0.0676%" height="15" fill="rgb(205,209,3)" fg:x="7738" fg:w="11"/><text x="47.7749%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (138 samples, 0.85%)</title><rect x="47.5924%" y="405" width="0.8476%" height="15" fill="rgb(243,44,1)" fg:x="7749" fg:w="138"/><text x="47.8424%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (54 samples, 0.33%)</title><rect x="48.1083%" y="389" width="0.3317%" height="15" fill="rgb(206,159,16)" fg:x="7833" fg:w="54"/><text x="48.3583%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.04%)</title><rect x="48.4400%" y="405" width="0.0369%" height="15" fill="rgb(244,77,30)" fg:x="7887" fg:w="6"/><text x="48.6900%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (46 samples, 0.28%)</title><rect x="48.4768%" y="405" width="0.2825%" height="15" fill="rgb(218,69,12)" fg:x="7893" fg:w="46"/><text x="48.7268%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="48.7594%" y="405" width="0.0430%" height="15" fill="rgb(212,87,7)" fg:x="7939" fg:w="7"/><text x="49.0094%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (15 samples, 0.09%)</title><rect x="48.8024%" y="405" width="0.0921%" height="15" fill="rgb(245,114,25)" fg:x="7946" fg:w="15"/><text x="49.0524%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (7,984 samples, 49.04%)</title><rect x="1.7074%" y="453" width="49.0357%" height="15" fill="rgb(210,61,42)" fg:x="278" fg:w="7984"/><text x="1.9574%" y="463.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,038 samples, 6.38%)</title><rect x="44.3680%" y="437" width="6.3751%" height="15" fill="rgb(211,52,33)" fg:x="7224" fg:w="1038"/><text x="44.6180%" y="447.50">sudoku-s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (802 samples, 4.93%)</title><rect x="45.8175%" y="421" width="4.9257%" height="15" fill="rgb(234,58,33)" fg:x="7460" fg:w="802"/><text x="46.0675%" y="431.50">sudoku..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (301 samples, 1.85%)</title><rect x="48.8945%" y="405" width="1.8487%" height="15" fill="rgb(220,115,36)" fg:x="7961" fg:w="301"/><text x="49.1445%" y="415.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (49 samples, 0.30%)</title><rect x="50.7432%" y="453" width="0.3009%" height="15" fill="rgb(243,153,54)" fg:x="8262" fg:w="49"/><text x="50.9932%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (17 samples, 0.10%)</title><rect x="51.0441%" y="453" width="0.1044%" height="15" fill="rgb(251,47,18)" fg:x="8311" fg:w="17"/><text x="51.2941%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="51.2468%" y="421" width="0.0184%" height="15" fill="rgb(242,102,42)" fg:x="8344" fg:w="3"/><text x="51.4968%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (38 samples, 0.23%)</title><rect x="51.3696%" y="405" width="0.2334%" height="15" fill="rgb(234,31,38)" fg:x="8364" fg:w="38"/><text x="51.6196%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.07%)</title><rect x="51.5354%" y="389" width="0.0676%" height="15" fill="rgb(221,117,51)" fg:x="8391" fg:w="11"/><text x="51.7854%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (78 samples, 0.48%)</title><rect x="51.1485%" y="437" width="0.4791%" height="15" fill="rgb(212,20,18)" fg:x="8328" fg:w="78"/><text x="51.3985%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (59 samples, 0.36%)</title><rect x="51.2652%" y="421" width="0.3624%" height="15" fill="rgb(245,133,36)" fg:x="8347" fg:w="59"/><text x="51.5152%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="51.6030%" y="405" width="0.0246%" height="15" fill="rgb(212,6,19)" fg:x="8402" fg:w="4"/><text x="51.8530%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (17 samples, 0.10%)</title><rect x="51.6276%" y="437" width="0.1044%" height="15" fill="rgb(218,1,36)" fg:x="8406" fg:w="17"/><text x="51.8776%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="51.7320%" y="437" width="0.0123%" height="15" fill="rgb(246,84,54)" fg:x="8423" fg:w="2"/><text x="51.9820%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (74 samples, 0.45%)</title><rect x="51.7443%" y="437" width="0.4545%" height="15" fill="rgb(242,110,6)" fg:x="8425" fg:w="74"/><text x="51.9943%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (20 samples, 0.12%)</title><rect x="52.0759%" y="421" width="0.1228%" height="15" fill="rgb(214,47,5)" fg:x="8479" fg:w="20"/><text x="52.3259%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (23 samples, 0.14%)</title><rect x="52.1987%" y="437" width="0.1413%" height="15" fill="rgb(218,159,25)" fg:x="8499" fg:w="23"/><text x="52.4487%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (20 samples, 0.12%)</title><rect x="52.3400%" y="437" width="0.1228%" height="15" fill="rgb(215,211,28)" fg:x="8522" fg:w="20"/><text x="52.5900%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="52.4690%" y="437" width="0.0246%" height="15" fill="rgb(238,59,32)" fg:x="8543" fg:w="4"/><text x="52.7190%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (19 samples, 0.12%)</title><rect x="52.4936%" y="437" width="0.1167%" height="15" fill="rgb(226,82,3)" fg:x="8547" fg:w="19"/><text x="52.7436%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="52.6102%" y="437" width="0.0307%" height="15" fill="rgb(240,164,32)" fg:x="8566" fg:w="5"/><text x="52.8602%" y="447.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.02%)</title><rect x="52.6410%" y="437" width="0.0246%" height="15" fill="rgb(232,46,7)" fg:x="8571" fg:w="4"/><text x="52.8910%" y="447.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (27 samples, 0.17%)</title><rect x="52.6655%" y="437" width="0.1658%" height="15" fill="rgb(229,129,53)" fg:x="8575" fg:w="27"/><text x="52.9155%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.06%)</title><rect x="53.8693%" y="405" width="0.0614%" height="15" fill="rgb(234,188,29)" fg:x="8771" fg:w="10"/><text x="54.1193%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (105 samples, 0.64%)</title><rect x="54.1088%" y="389" width="0.6449%" height="15" fill="rgb(246,141,4)" fg:x="8810" fg:w="105"/><text x="54.3588%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.10%)</title><rect x="54.6493%" y="373" width="0.1044%" height="15" fill="rgb(229,23,39)" fg:x="8898" fg:w="17"/><text x="54.8993%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (212 samples, 1.30%)</title><rect x="53.5008%" y="421" width="1.3021%" height="15" fill="rgb(206,12,3)" fg:x="8711" fg:w="212"/><text x="53.7508%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (142 samples, 0.87%)</title><rect x="53.9307%" y="405" width="0.8721%" height="15" fill="rgb(252,226,20)" fg:x="8781" fg:w="142"/><text x="54.1807%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.05%)</title><rect x="54.7537%" y="389" width="0.0491%" height="15" fill="rgb(216,123,35)" fg:x="8915" fg:w="8"/><text x="55.0037%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.12%)</title><rect x="54.8028%" y="421" width="0.1167%" height="15" fill="rgb(212,68,40)" fg:x="8923" fg:w="19"/><text x="55.0528%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (60 samples, 0.37%)</title><rect x="55.6320%" y="405" width="0.3685%" height="15" fill="rgb(254,125,32)" fg:x="9058" fg:w="60"/><text x="55.8820%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (177 samples, 1.09%)</title><rect x="54.9195%" y="421" width="1.0871%" height="15" fill="rgb(253,97,22)" fg:x="8942" fg:w="177"/><text x="55.1695%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.02%)</title><rect x="56.0066%" y="421" width="0.0246%" height="15" fill="rgb(241,101,14)" fg:x="9119" fg:w="4"/><text x="56.2566%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (50 samples, 0.31%)</title><rect x="56.0312%" y="421" width="0.3071%" height="15" fill="rgb(238,103,29)" fg:x="9123" fg:w="50"/><text x="56.2812%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="56.3383%" y="421" width="0.0184%" height="15" fill="rgb(233,195,47)" fg:x="9173" fg:w="3"/><text x="56.5883%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (12 samples, 0.07%)</title><rect x="56.3567%" y="421" width="0.0737%" height="15" fill="rgb(246,218,30)" fg:x="9176" fg:w="12"/><text x="56.6067%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (9,312 samples, 57.19%)</title><rect x="1.5047%" y="469" width="57.1920%" height="15" fill="rgb(219,145,47)" fg:x="245" fg:w="9312"/><text x="1.7547%" y="479.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,229 samples, 7.55%)</title><rect x="51.1485%" y="453" width="7.5482%" height="15" fill="rgb(243,12,26)" fg:x="8328" fg:w="1229"/><text x="51.3985%" y="463.50">sudoku-sol..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (955 samples, 5.87%)</title><rect x="52.8313%" y="437" width="5.8654%" height="15" fill="rgb(214,87,16)" fg:x="8602" fg:w="955"/><text x="53.0813%" y="447.50">sudoku-..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (369 samples, 2.27%)</title><rect x="56.4304%" y="421" width="2.2663%" height="15" fill="rgb(208,99,42)" fg:x="9188" fg:w="369"/><text x="56.6804%" y="431.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (62 samples, 0.38%)</title><rect x="58.6967%" y="469" width="0.3808%" height="15" fill="rgb(253,99,2)" fg:x="9557" fg:w="62"/><text x="58.9467%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (18 samples, 0.11%)</title><rect x="59.0775%" y="469" width="0.1106%" height="15" fill="rgb(220,168,23)" fg:x="9619" fg:w="18"/><text x="59.3275%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.04%)</title><rect x="59.3477%" y="437" width="0.0369%" height="15" fill="rgb(242,38,24)" fg:x="9663" fg:w="6"/><text x="59.5977%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.18%)</title><rect x="59.4337%" y="421" width="0.1843%" height="15" fill="rgb(225,182,9)" fg:x="9677" fg:w="30"/><text x="59.6837%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.04%)</title><rect x="59.5750%" y="405" width="0.0430%" height="15" fill="rgb(243,178,37)" fg:x="9700" fg:w="7"/><text x="59.8250%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.47%)</title><rect x="59.1881%" y="453" width="0.4668%" height="15" fill="rgb(232,139,19)" fg:x="9637" fg:w="76"/><text x="59.4381%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.27%)</title><rect x="59.3846%" y="437" width="0.2702%" height="15" fill="rgb(225,201,24)" fg:x="9669" fg:w="44"/><text x="59.6346%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.04%)</title><rect x="59.6180%" y="421" width="0.0369%" height="15" fill="rgb(221,47,46)" fg:x="9707" fg:w="6"/><text x="59.8680%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (18 samples, 0.11%)</title><rect x="59.6548%" y="453" width="0.1106%" height="15" fill="rgb(249,23,13)" fg:x="9713" fg:w="18"/><text x="59.9048%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="59.7654%" y="453" width="0.0307%" height="15" fill="rgb(219,9,5)" fg:x="9731" fg:w="5"/><text x="60.0154%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (28 samples, 0.17%)</title><rect x="60.1830%" y="437" width="0.1720%" height="15" fill="rgb(254,171,16)" fg:x="9799" fg:w="28"/><text x="60.4330%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (92 samples, 0.57%)</title><rect x="59.7961%" y="453" width="0.5650%" height="15" fill="rgb(230,171,20)" fg:x="9736" fg:w="92"/><text x="60.0461%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (20 samples, 0.12%)</title><rect x="60.3611%" y="453" width="0.1228%" height="15" fill="rgb(210,71,41)" fg:x="9828" fg:w="20"/><text x="60.6111%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (30 samples, 0.18%)</title><rect x="60.4840%" y="453" width="0.1843%" height="15" fill="rgb(206,173,20)" fg:x="9848" fg:w="30"/><text x="60.7340%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="60.6682%" y="453" width="0.0123%" height="15" fill="rgb(233,88,34)" fg:x="9878" fg:w="2"/><text x="60.9182%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="60.6805%" y="453" width="0.0307%" height="15" fill="rgb(223,209,46)" fg:x="9880" fg:w="5"/><text x="60.9305%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (21 samples, 0.13%)</title><rect x="60.7112%" y="453" width="0.1290%" height="15" fill="rgb(250,43,18)" fg:x="9885" fg:w="21"/><text x="60.9612%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (11 samples, 0.07%)</title><rect x="60.8402%" y="453" width="0.0676%" height="15" fill="rgb(208,13,10)" fg:x="9906" fg:w="11"/><text x="61.0902%" y="463.50"></text></g><g><title>sudoku-solver`__rdl_alloc (9 samples, 0.06%)</title><rect x="60.9078%" y="453" width="0.0553%" height="15" fill="rgb(212,200,36)" fg:x="9917" fg:w="9"/><text x="61.1578%" y="463.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (27 samples, 0.17%)</title><rect x="60.9630%" y="453" width="0.1658%" height="15" fill="rgb(225,90,30)" fg:x="9926" fg:w="27"/><text x="61.2130%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.09%)</title><rect x="62.4186%" y="421" width="0.0921%" height="15" fill="rgb(236,182,39)" fg:x="10163" fg:w="15"/><text x="62.6686%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (107 samples, 0.66%)</title><rect x="62.7748%" y="405" width="0.6572%" height="15" fill="rgb(212,144,35)" fg:x="10221" fg:w="107"/><text x="63.0248%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.13%)</title><rect x="63.3030%" y="389" width="0.1290%" height="15" fill="rgb(228,63,44)" fg:x="10307" fg:w="21"/><text x="63.5530%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (243 samples, 1.49%)</title><rect x="62.0501%" y="437" width="1.4924%" height="15" fill="rgb(228,109,6)" fg:x="10103" fg:w="243"/><text x="62.3001%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (168 samples, 1.03%)</title><rect x="62.5107%" y="421" width="1.0318%" height="15" fill="rgb(238,117,24)" fg:x="10178" fg:w="168"/><text x="62.7607%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (18 samples, 0.11%)</title><rect x="63.4320%" y="405" width="0.1106%" height="15" fill="rgb(242,26,26)" fg:x="10328" fg:w="18"/><text x="63.6820%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.09%)</title><rect x="63.5426%" y="437" width="0.0921%" height="15" fill="rgb(221,92,48)" fg:x="10346" fg:w="15"/><text x="63.7926%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (163 samples, 1.00%)</title><rect x="63.6347%" y="437" width="1.0011%" height="15" fill="rgb(209,209,32)" fg:x="10361" fg:w="163"/><text x="63.8847%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (62 samples, 0.38%)</title><rect x="64.2550%" y="421" width="0.3808%" height="15" fill="rgb(221,70,22)" fg:x="10462" fg:w="62"/><text x="64.5050%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (14 samples, 0.09%)</title><rect x="64.6358%" y="437" width="0.0860%" height="15" fill="rgb(248,145,5)" fg:x="10524" fg:w="14"/><text x="64.8858%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (49 samples, 0.30%)</title><rect x="64.7218%" y="437" width="0.3009%" height="15" fill="rgb(226,116,26)" fg:x="10538" fg:w="49"/><text x="64.9718%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.04%)</title><rect x="65.0227%" y="437" width="0.0369%" height="15" fill="rgb(244,5,17)" fg:x="10587" fg:w="6"/><text x="65.2727%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (20 samples, 0.12%)</title><rect x="65.0596%" y="437" width="0.1228%" height="15" fill="rgb(252,159,33)" fg:x="10593" fg:w="20"/><text x="65.3096%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (10,883 samples, 66.84%)</title><rect x="1.2099%" y="485" width="66.8407%" height="15" fill="rgb(206,71,0)" fg:x="197" fg:w="10883"/><text x="1.4599%" y="495.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,443 samples, 8.86%)</title><rect x="59.1881%" y="469" width="8.8625%" height="15" fill="rgb(233,118,54)" fg:x="9637" fg:w="1443"/><text x="59.4381%" y="479.50">sudoku-solver..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (1,127 samples, 6.92%)</title><rect x="61.1289%" y="453" width="6.9218%" height="15" fill="rgb(234,83,48)" fg:x="9953" fg:w="1127"/><text x="61.3789%" y="463.50">sudoku-so..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (467 samples, 2.87%)</title><rect x="65.1824%" y="437" width="2.8682%" height="15" fill="rgb(228,3,54)" fg:x="10613" fg:w="467"/><text x="65.4324%" y="447.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (46 samples, 0.28%)</title><rect x="68.0506%" y="485" width="0.2825%" height="15" fill="rgb(226,155,13)" fg:x="11080" fg:w="46"/><text x="68.3006%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (11 samples, 0.07%)</title><rect x="68.3331%" y="485" width="0.0676%" height="15" fill="rgb(241,28,37)" fg:x="11126" fg:w="11"/><text x="68.5831%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="68.6034%" y="453" width="0.0184%" height="15" fill="rgb(233,93,10)" fg:x="11170" fg:w="3"/><text x="68.8534%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (36 samples, 0.22%)</title><rect x="68.6771%" y="437" width="0.2211%" height="15" fill="rgb(225,113,19)" fg:x="11182" fg:w="36"/><text x="68.9271%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.05%)</title><rect x="68.8490%" y="421" width="0.0491%" height="15" fill="rgb(241,2,18)" fg:x="11210" fg:w="8"/><text x="69.0990%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.51%)</title><rect x="68.4007%" y="469" width="0.5098%" height="15" fill="rgb(228,207,21)" fg:x="11137" fg:w="83"/><text x="68.6507%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.29%)</title><rect x="68.6218%" y="453" width="0.2887%" height="15" fill="rgb(213,211,35)" fg:x="11173" fg:w="47"/><text x="68.8718%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="68.8982%" y="437" width="0.0123%" height="15" fill="rgb(209,83,10)" fg:x="11218" fg:w="2"/><text x="69.1482%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (21 samples, 0.13%)</title><rect x="68.9105%" y="469" width="0.1290%" height="15" fill="rgb(209,164,1)" fg:x="11220" fg:w="21"/><text x="69.1605%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="69.0394%" y="469" width="0.0123%" height="15" fill="rgb(213,184,43)" fg:x="11241" fg:w="2"/><text x="69.2894%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (84 samples, 0.52%)</title><rect x="69.0517%" y="469" width="0.5159%" height="15" fill="rgb(231,61,34)" fg:x="11243" fg:w="84"/><text x="69.3017%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (24 samples, 0.15%)</title><rect x="69.4202%" y="453" width="0.1474%" height="15" fill="rgb(235,75,3)" fg:x="11303" fg:w="24"/><text x="69.6702%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.11%)</title><rect x="69.5676%" y="469" width="0.1106%" height="15" fill="rgb(220,106,47)" fg:x="11327" fg:w="18"/><text x="69.8176%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (21 samples, 0.13%)</title><rect x="69.6782%" y="469" width="0.1290%" height="15" fill="rgb(210,196,33)" fg:x="11345" fg:w="21"/><text x="69.9282%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.04%)</title><rect x="69.8071%" y="469" width="0.0369%" height="15" fill="rgb(229,154,42)" fg:x="11366" fg:w="6"/><text x="70.0571%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.06%)</title><rect x="69.8440%" y="469" width="0.0553%" height="15" fill="rgb(228,114,26)" fg:x="11372" fg:w="9"/><text x="70.0940%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.04%)</title><rect x="69.8993%" y="469" width="0.0369%" height="15" fill="rgb(208,144,1)" fg:x="11381" fg:w="6"/><text x="70.1493%" y="479.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.02%)</title><rect x="69.9361%" y="469" width="0.0184%" height="15" fill="rgb(239,112,37)" fg:x="11387" fg:w="3"/><text x="70.1861%" y="479.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (23 samples, 0.14%)</title><rect x="69.9607%" y="469" width="0.1413%" height="15" fill="rgb(210,96,50)" fg:x="11391" fg:w="23"/><text x="70.2107%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.09%)</title><rect x="71.0908%" y="437" width="0.0860%" height="15" fill="rgb(222,178,2)" fg:x="11575" fg:w="14"/><text x="71.3408%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (94 samples, 0.58%)</title><rect x="71.3180%" y="421" width="0.5773%" height="15" fill="rgb(226,74,18)" fg:x="11612" fg:w="94"/><text x="71.5680%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.12%)</title><rect x="71.7787%" y="405" width="0.1167%" height="15" fill="rgb(225,67,54)" fg:x="11687" fg:w="19"/><text x="72.0287%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (197 samples, 1.21%)</title><rect x="70.7468%" y="453" width="1.2099%" height="15" fill="rgb(251,92,32)" fg:x="11519" fg:w="197"/><text x="70.9968%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (127 samples, 0.78%)</title><rect x="71.1768%" y="437" width="0.7800%" height="15" fill="rgb(228,149,22)" fg:x="11589" fg:w="127"/><text x="71.4268%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.06%)</title><rect x="71.8953%" y="421" width="0.0614%" height="15" fill="rgb(243,54,13)" fg:x="11706" fg:w="10"/><text x="72.1453%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.04%)</title><rect x="71.9568%" y="453" width="0.0430%" height="15" fill="rgb(243,180,28)" fg:x="11716" fg:w="7"/><text x="72.2068%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (156 samples, 0.96%)</title><rect x="71.9998%" y="453" width="0.9581%" height="15" fill="rgb(208,167,24)" fg:x="11723" fg:w="156"/><text x="72.2498%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (58 samples, 0.36%)</title><rect x="72.6016%" y="437" width="0.3562%" height="15" fill="rgb(245,73,45)" fg:x="11821" fg:w="58"/><text x="72.8516%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.05%)</title><rect x="72.9579%" y="453" width="0.0491%" height="15" fill="rgb(237,203,48)" fg:x="11879" fg:w="8"/><text x="73.2079%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (55 samples, 0.34%)</title><rect x="73.0070%" y="453" width="0.3378%" height="15" fill="rgb(211,197,16)" fg:x="11887" fg:w="55"/><text x="73.2570%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="73.3448%" y="453" width="0.0184%" height="15" fill="rgb(243,99,51)" fg:x="11942" fg:w="3"/><text x="73.5948%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.05%)</title><rect x="73.3632%" y="453" width="0.0491%" height="15" fill="rgb(215,123,29)" fg:x="11945" fg:w="8"/><text x="73.6132%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (12,169 samples, 74.74%)</title><rect x="1.0134%" y="501" width="74.7390%" height="15" fill="rgb(239,186,37)" fg:x="165" fg:w="12169"/><text x="1.2634%" y="511.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,197 samples, 7.35%)</title><rect x="68.4007%" y="485" width="7.3517%" height="15" fill="rgb(252,136,39)" fg:x="11137" fg:w="1197"/><text x="68.6507%" y="495.50">sudoku-sol..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (920 samples, 5.65%)</title><rect x="70.1020%" y="469" width="5.6504%" height="15" fill="rgb(223,213,32)" fg:x="11414" fg:w="920"/><text x="70.3520%" y="479.50">sudoku-..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (381 samples, 2.34%)</title><rect x="73.4124%" y="453" width="2.3400%" height="15" fill="rgb(233,115,5)" fg:x="11953" fg:w="381"/><text x="73.6624%" y="463.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (35 samples, 0.21%)</title><rect x="75.7524%" y="501" width="0.2150%" height="15" fill="rgb(207,226,44)" fg:x="12334" fg:w="35"/><text x="76.0024%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (13 samples, 0.08%)</title><rect x="75.9673%" y="501" width="0.0798%" height="15" fill="rgb(208,126,0)" fg:x="12369" fg:w="13"/><text x="76.2173%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="76.1516%" y="469" width="0.0184%" height="15" fill="rgb(244,66,21)" fg:x="12399" fg:w="3"/><text x="76.4016%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.25%)</title><rect x="76.0472%" y="485" width="0.2457%" height="15" fill="rgb(222,97,12)" fg:x="12382" fg:w="40"/><text x="76.2972%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.12%)</title><rect x="76.1700%" y="469" width="0.1228%" height="15" fill="rgb(219,213,19)" fg:x="12402" fg:w="20"/><text x="76.4200%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.11%)</title><rect x="76.1823%" y="453" width="0.1106%" height="15" fill="rgb(252,169,30)" fg:x="12404" fg:w="18"/><text x="76.4323%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.04%)</title><rect x="76.2498%" y="437" width="0.0430%" height="15" fill="rgb(206,32,51)" fg:x="12415" fg:w="7"/><text x="76.4998%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (16 samples, 0.10%)</title><rect x="76.2928%" y="485" width="0.0983%" height="15" fill="rgb(250,172,42)" fg:x="12422" fg:w="16"/><text x="76.5428%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="76.3911%" y="485" width="0.0123%" height="15" fill="rgb(209,34,43)" fg:x="12438" fg:w="2"/><text x="76.6411%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (49 samples, 0.30%)</title><rect x="76.4034%" y="485" width="0.3009%" height="15" fill="rgb(223,11,35)" fg:x="12440" fg:w="49"/><text x="76.6534%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.06%)</title><rect x="76.6491%" y="469" width="0.0553%" height="15" fill="rgb(251,219,26)" fg:x="12480" fg:w="9"/><text x="76.8991%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.06%)</title><rect x="76.7043%" y="485" width="0.0553%" height="15" fill="rgb(231,119,3)" fg:x="12489" fg:w="9"/><text x="76.9543%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.07%)</title><rect x="76.7596%" y="485" width="0.0676%" height="15" fill="rgb(216,97,11)" fg:x="12498" fg:w="11"/><text x="77.0096%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="76.8272%" y="485" width="0.0123%" height="15" fill="rgb(223,59,9)" fg:x="12509" fg:w="2"/><text x="77.0772%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (12 samples, 0.07%)</title><rect x="76.8456%" y="485" width="0.0737%" height="15" fill="rgb(233,93,31)" fg:x="12512" fg:w="12"/><text x="77.0956%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (8 samples, 0.05%)</title><rect x="76.9193%" y="485" width="0.0491%" height="15" fill="rgb(239,81,33)" fg:x="12524" fg:w="8"/><text x="77.1693%" y="495.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.02%)</title><rect x="76.9684%" y="485" width="0.0246%" height="15" fill="rgb(213,120,34)" fg:x="12532" fg:w="4"/><text x="77.2184%" y="495.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (16 samples, 0.10%)</title><rect x="76.9930%" y="485" width="0.0983%" height="15" fill="rgb(243,49,53)" fg:x="12536" fg:w="16"/><text x="77.2430%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.04%)</title><rect x="77.7116%" y="453" width="0.0369%" height="15" fill="rgb(247,216,33)" fg:x="12653" fg:w="6"/><text x="77.9616%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (66 samples, 0.41%)</title><rect x="77.8897%" y="437" width="0.4054%" height="15" fill="rgb(226,26,14)" fg:x="12682" fg:w="66"/><text x="78.1397%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.07%)</title><rect x="78.2275%" y="421" width="0.0676%" height="15" fill="rgb(215,49,53)" fg:x="12737" fg:w="11"/><text x="78.4775%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (131 samples, 0.80%)</title><rect x="77.5519%" y="469" width="0.8046%" height="15" fill="rgb(245,162,40)" fg:x="12627" fg:w="131"/><text x="77.8019%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 0.61%)</title><rect x="77.7484%" y="453" width="0.6080%" height="15" fill="rgb(229,68,17)" fg:x="12659" fg:w="99"/><text x="77.9984%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.06%)</title><rect x="78.2950%" y="437" width="0.0614%" height="15" fill="rgb(213,182,10)" fg:x="12748" fg:w="10"/><text x="78.5450%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.06%)</title><rect x="78.3565%" y="469" width="0.0553%" height="15" fill="rgb(245,125,30)" fg:x="12758" fg:w="9"/><text x="78.6065%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (109 samples, 0.67%)</title><rect x="78.4117%" y="469" width="0.6695%" height="15" fill="rgb(232,202,2)" fg:x="12767" fg:w="109"/><text x="78.6617%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (42 samples, 0.26%)</title><rect x="78.8232%" y="453" width="0.2580%" height="15" fill="rgb(237,140,51)" fg:x="12834" fg:w="42"/><text x="79.0732%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="79.0812%" y="469" width="0.0307%" height="15" fill="rgb(236,157,25)" fg:x="12876" fg:w="5"/><text x="79.3312%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (33 samples, 0.20%)</title><rect x="79.1119%" y="469" width="0.2027%" height="15" fill="rgb(219,209,0)" fg:x="12881" fg:w="33"/><text x="79.3619%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="79.3146%" y="469" width="0.0123%" height="15" fill="rgb(240,116,54)" fg:x="12914" fg:w="2"/><text x="79.5646%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.04%)</title><rect x="79.3269%" y="469" width="0.0430%" height="15" fill="rgb(216,10,36)" fg:x="12916" fg:w="7"/><text x="79.5769%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (13,044 samples, 80.11%)</title><rect x="0.8598%" y="517" width="80.1130%" height="15" fill="rgb(222,72,44)" fg:x="140" fg:w="13044"/><text x="1.1098%" y="527.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (802 samples, 4.93%)</title><rect x="76.0472%" y="501" width="4.9257%" height="15" fill="rgb(232,159,9)" fg:x="12382" fg:w="802"/><text x="76.2972%" y="511.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (632 samples, 3.88%)</title><rect x="77.0913%" y="485" width="3.8816%" height="15" fill="rgb(210,39,32)" fg:x="12552" fg:w="632"/><text x="77.3413%" y="495.50">sudo..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (261 samples, 1.60%)</title><rect x="79.3699%" y="469" width="1.6030%" height="15" fill="rgb(216,194,45)" fg:x="12923" fg:w="261"/><text x="79.6199%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (24 samples, 0.15%)</title><rect x="80.9729%" y="517" width="0.1474%" height="15" fill="rgb(218,18,35)" fg:x="13184" fg:w="24"/><text x="81.2229%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (5 samples, 0.03%)</title><rect x="81.1203%" y="517" width="0.0307%" height="15" fill="rgb(207,83,51)" fg:x="13208" fg:w="5"/><text x="81.3703%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.09%)</title><rect x="81.2124%" y="469" width="0.0860%" height="15" fill="rgb(225,63,43)" fg:x="13223" fg:w="14"/><text x="81.4624%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="81.2738%" y="453" width="0.0246%" height="15" fill="rgb(207,57,36)" fg:x="13233" fg:w="4"/><text x="81.5238%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.17%)</title><rect x="81.1510%" y="501" width="0.1658%" height="15" fill="rgb(216,99,33)" fg:x="13213" fg:w="27"/><text x="81.4010%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.12%)</title><rect x="81.2001%" y="485" width="0.1167%" height="15" fill="rgb(225,42,16)" fg:x="13221" fg:w="19"/><text x="81.4501%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="81.2984%" y="469" width="0.0184%" height="15" fill="rgb(220,201,45)" fg:x="13237" fg:w="3"/><text x="81.5484%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.04%)</title><rect x="81.3168%" y="501" width="0.0430%" height="15" fill="rgb(225,33,4)" fg:x="13240" fg:w="7"/><text x="81.5668%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="81.3598%" y="501" width="0.0184%" height="15" fill="rgb(224,33,50)" fg:x="13247" fg:w="3"/><text x="81.6098%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.17%)</title><rect x="81.3782%" y="501" width="0.1720%" height="15" fill="rgb(246,198,51)" fg:x="13250" fg:w="28"/><text x="81.6282%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="81.5133%" y="485" width="0.0369%" height="15" fill="rgb(205,22,4)" fg:x="13272" fg:w="6"/><text x="81.7633%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.07%)</title><rect x="81.5502%" y="501" width="0.0737%" height="15" fill="rgb(206,3,8)" fg:x="13278" fg:w="12"/><text x="81.8002%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.06%)</title><rect x="81.6239%" y="501" width="0.0553%" height="15" fill="rgb(251,23,15)" fg:x="13290" fg:w="9"/><text x="81.8739%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="81.6792%" y="501" width="0.0123%" height="15" fill="rgb(252,88,28)" fg:x="13299" fg:w="2"/><text x="81.9292%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.06%)</title><rect x="81.6914%" y="501" width="0.0553%" height="15" fill="rgb(212,127,14)" fg:x="13301" fg:w="9"/><text x="81.9414%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.02%)</title><rect x="81.7467%" y="501" width="0.0246%" height="15" fill="rgb(247,145,37)" fg:x="13310" fg:w="4"/><text x="81.9967%" y="511.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.02%)</title><rect x="81.7713%" y="501" width="0.0246%" height="15" fill="rgb(209,117,53)" fg:x="13314" fg:w="4"/><text x="82.0213%" y="511.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (12 samples, 0.07%)</title><rect x="81.7958%" y="501" width="0.0737%" height="15" fill="rgb(212,90,42)" fg:x="13318" fg:w="12"/><text x="82.0458%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="82.3793%" y="469" width="0.0246%" height="15" fill="rgb(218,164,37)" fg:x="13413" fg:w="4"/><text x="82.6293%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (53 samples, 0.33%)</title><rect x="82.4592%" y="453" width="0.3255%" height="15" fill="rgb(246,65,34)" fg:x="13426" fg:w="53"/><text x="82.7092%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.06%)</title><rect x="82.7233%" y="437" width="0.0614%" height="15" fill="rgb(231,100,33)" fg:x="13469" fg:w="10"/><text x="82.9733%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (88 samples, 0.54%)</title><rect x="82.2688%" y="485" width="0.5405%" height="15" fill="rgb(228,126,14)" fg:x="13395" fg:w="88"/><text x="82.5188%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.41%)</title><rect x="82.4039%" y="469" width="0.4054%" height="15" fill="rgb(215,173,21)" fg:x="13417" fg:w="66"/><text x="82.6539%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="82.7847%" y="453" width="0.0246%" height="15" fill="rgb(210,6,40)" fg:x="13479" fg:w="4"/><text x="83.0347%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.04%)</title><rect x="82.8092%" y="485" width="0.0430%" height="15" fill="rgb(212,48,18)" fg:x="13483" fg:w="7"/><text x="83.0592%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (91 samples, 0.56%)</title><rect x="82.8522%" y="485" width="0.5589%" height="15" fill="rgb(230,214,11)" fg:x="13490" fg:w="91"/><text x="83.1022%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (45 samples, 0.28%)</title><rect x="83.1348%" y="469" width="0.2764%" height="15" fill="rgb(254,105,39)" fg:x="13536" fg:w="45"/><text x="83.3848%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.05%)</title><rect x="83.4111%" y="485" width="0.0491%" height="15" fill="rgb(245,158,5)" fg:x="13581" fg:w="8"/><text x="83.6611%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.17%)</title><rect x="83.4603%" y="485" width="0.1658%" height="15" fill="rgb(249,208,11)" fg:x="13589" fg:w="27"/><text x="83.7103%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="83.6261%" y="485" width="0.0123%" height="15" fill="rgb(210,39,28)" fg:x="13616" fg:w="2"/><text x="83.8761%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="83.6384%" y="485" width="0.0307%" height="15" fill="rgb(211,56,53)" fg:x="13618" fg:w="5"/><text x="83.8884%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (13,703 samples, 84.16%)</title><rect x="0.7186%" y="533" width="84.1604%" height="15" fill="rgb(226,201,30)" fg:x="117" fg:w="13703"/><text x="0.9686%" y="543.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (607 samples, 3.73%)</title><rect x="81.1510%" y="517" width="3.7280%" height="15" fill="rgb(239,101,34)" fg:x="13213" fg:w="607"/><text x="81.4010%" y="527.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (490 samples, 3.01%)</title><rect x="81.8695%" y="501" width="3.0095%" height="15" fill="rgb(226,209,5)" fg:x="13330" fg:w="490"/><text x="82.1195%" y="511.50">sud..</text></g><g><title>sudoku-solver`core::slice::sort::recurse (197 samples, 1.21%)</title><rect x="83.6691%" y="485" width="1.2099%" height="15" fill="rgb(250,105,47)" fg:x="13623" fg:w="197"/><text x="83.9191%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (18 samples, 0.11%)</title><rect x="84.8790%" y="533" width="0.1106%" height="15" fill="rgb(230,72,3)" fg:x="13820" fg:w="18"/><text x="85.1290%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (6 samples, 0.04%)</title><rect x="84.9896%" y="533" width="0.0369%" height="15" fill="rgb(232,218,39)" fg:x="13838" fg:w="6"/><text x="85.2396%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.04%)</title><rect x="85.0878%" y="485" width="0.0430%" height="15" fill="rgb(248,166,6)" fg:x="13854" fg:w="7"/><text x="85.3378%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="85.1124%" y="469" width="0.0184%" height="15" fill="rgb(247,89,20)" fg:x="13858" fg:w="3"/><text x="85.3624%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.14%)</title><rect x="85.0264%" y="517" width="0.1351%" height="15" fill="rgb(248,130,54)" fg:x="13844" fg:w="22"/><text x="85.2764%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.09%)</title><rect x="85.0755%" y="501" width="0.0860%" height="15" fill="rgb(234,196,4)" fg:x="13852" fg:w="14"/><text x="85.3255%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="85.1308%" y="485" width="0.0307%" height="15" fill="rgb(250,143,31)" fg:x="13861" fg:w="5"/><text x="85.3808%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="85.1615%" y="517" width="0.0184%" height="15" fill="rgb(211,110,34)" fg:x="13866" fg:w="3"/><text x="85.4115%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="85.1800%" y="517" width="0.0184%" height="15" fill="rgb(215,124,48)" fg:x="13869" fg:w="3"/><text x="85.4300%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.12%)</title><rect x="85.1984%" y="517" width="0.1167%" height="15" fill="rgb(216,46,13)" fg:x="13872" fg:w="19"/><text x="85.4484%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="85.2782%" y="501" width="0.0369%" height="15" fill="rgb(205,184,25)" fg:x="13885" fg:w="6"/><text x="85.5282%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.02%)</title><rect x="85.3151%" y="517" width="0.0246%" height="15" fill="rgb(228,1,10)" fg:x="13891" fg:w="4"/><text x="85.5651%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.06%)</title><rect x="85.3396%" y="517" width="0.0553%" height="15" fill="rgb(213,116,27)" fg:x="13895" fg:w="9"/><text x="85.5896%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.02%)</title><rect x="85.4011%" y="517" width="0.0184%" height="15" fill="rgb(241,95,50)" fg:x="13905" fg:w="3"/><text x="85.6511%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.03%)</title><rect x="85.4195%" y="517" width="0.0307%" height="15" fill="rgb(238,48,32)" fg:x="13908" fg:w="5"/><text x="85.6695%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (9 samples, 0.06%)</title><rect x="85.4502%" y="517" width="0.0553%" height="15" fill="rgb(235,113,49)" fg:x="13913" fg:w="9"/><text x="85.7002%" y="527.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.03%)</title><rect x="85.5055%" y="517" width="0.0307%" height="15" fill="rgb(205,127,43)" fg:x="13922" fg:w="5"/><text x="85.7555%" y="527.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (7 samples, 0.04%)</title><rect x="85.5362%" y="517" width="0.0430%" height="15" fill="rgb(250,162,2)" fg:x="13927" fg:w="7"/><text x="85.7862%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.04%)</title><rect x="85.8617%" y="485" width="0.0369%" height="15" fill="rgb(220,13,41)" fg:x="13980" fg:w="6"/><text x="86.1117%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.19%)</title><rect x="85.9538%" y="469" width="0.1904%" height="15" fill="rgb(249,221,25)" fg:x="13995" fg:w="31"/><text x="86.2038%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.06%)</title><rect x="86.0828%" y="453" width="0.0614%" height="15" fill="rgb(215,208,19)" fg:x="14016" fg:w="10"/><text x="86.3328%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.41%)</title><rect x="85.7634%" y="501" width="0.4054%" height="15" fill="rgb(236,175,2)" fg:x="13964" fg:w="66"/><text x="86.0134%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (44 samples, 0.27%)</title><rect x="85.8985%" y="485" width="0.2702%" height="15" fill="rgb(241,52,2)" fg:x="13986" fg:w="44"/><text x="86.1485%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="86.1442%" y="469" width="0.0246%" height="15" fill="rgb(248,140,14)" fg:x="14026" fg:w="4"/><text x="86.3942%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.04%)</title><rect x="86.1688%" y="501" width="0.0430%" height="15" fill="rgb(253,22,42)" fg:x="14030" fg:w="7"/><text x="86.4188%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (46 samples, 0.28%)</title><rect x="86.2118%" y="501" width="0.2825%" height="15" fill="rgb(234,61,47)" fg:x="14037" fg:w="46"/><text x="86.4618%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (25 samples, 0.15%)</title><rect x="86.3407%" y="485" width="0.1535%" height="15" fill="rgb(208,226,15)" fg:x="14058" fg:w="25"/><text x="86.5907%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.05%)</title><rect x="86.5004%" y="501" width="0.0491%" height="15" fill="rgb(217,221,4)" fg:x="14084" fg:w="8"/><text x="86.7504%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="86.5496%" y="501" width="0.0307%" height="15" fill="rgb(212,174,34)" fg:x="14092" fg:w="5"/><text x="86.7996%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,104 samples, 86.62%)</title><rect x="0.6756%" y="549" width="86.6233%" height="15" fill="rgb(253,83,4)" fg:x="110" fg:w="14104"/><text x="0.9256%" y="559.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (370 samples, 2.27%)</title><rect x="85.0264%" y="533" width="2.2724%" height="15" fill="rgb(250,195,49)" fg:x="13844" fg:w="370"/><text x="85.2764%" y="543.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (280 samples, 1.72%)</title><rect x="85.5792%" y="517" width="1.7197%" height="15" fill="rgb(241,192,25)" fg:x="13934" fg:w="280"/><text x="85.8292%" y="527.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (117 samples, 0.72%)</title><rect x="86.5803%" y="501" width="0.7186%" height="15" fill="rgb(208,124,10)" fg:x="14097" fg:w="117"/><text x="86.8303%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (9 samples, 0.06%)</title><rect x="87.2989%" y="549" width="0.0553%" height="15" fill="rgb(222,33,0)" fg:x="14214" fg:w="9"/><text x="87.5489%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="87.4094%" y="501" width="0.0553%" height="15" fill="rgb(234,209,28)" fg:x="14232" fg:w="9"/><text x="87.6594%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="87.4340%" y="485" width="0.0307%" height="15" fill="rgb(224,11,23)" fg:x="14236" fg:w="5"/><text x="87.6840%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.12%)</title><rect x="87.3603%" y="533" width="0.1167%" height="15" fill="rgb(232,99,1)" fg:x="14224" fg:w="19"/><text x="87.6103%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.09%)</title><rect x="87.3910%" y="517" width="0.0860%" height="15" fill="rgb(237,95,45)" fg:x="14229" fg:w="14"/><text x="87.6410%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="87.4647%" y="501" width="0.0123%" height="15" fill="rgb(208,109,11)" fg:x="14241" fg:w="2"/><text x="87.7147%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="87.4770%" y="533" width="0.0123%" height="15" fill="rgb(216,190,48)" fg:x="14243" fg:w="2"/><text x="87.7270%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.07%)</title><rect x="87.4954%" y="533" width="0.0676%" height="15" fill="rgb(251,171,36)" fg:x="14246" fg:w="11"/><text x="87.7454%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="87.5384%" y="517" width="0.0246%" height="15" fill="rgb(230,62,22)" fg:x="14253" fg:w="4"/><text x="87.7884%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="87.5630%" y="533" width="0.0184%" height="15" fill="rgb(225,114,35)" fg:x="14257" fg:w="3"/><text x="87.8130%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.04%)</title><rect x="87.5814%" y="533" width="0.0369%" height="15" fill="rgb(215,118,42)" fg:x="14260" fg:w="6"/><text x="87.8314%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="87.6182%" y="533" width="0.0123%" height="15" fill="rgb(243,119,21)" fg:x="14266" fg:w="2"/><text x="87.8682%" y="543.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="87.6367%" y="533" width="0.0123%" height="15" fill="rgb(252,177,53)" fg:x="14269" fg:w="2"/><text x="87.8867%" y="543.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (6 samples, 0.04%)</title><rect x="87.6551%" y="533" width="0.0369%" height="15" fill="rgb(237,209,29)" fg:x="14272" fg:w="6"/><text x="87.9051%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="87.9007%" y="501" width="0.0246%" height="15" fill="rgb(212,65,23)" fg:x="14312" fg:w="4"/><text x="88.1507%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.14%)</title><rect x="88.0113%" y="485" width="0.1351%" height="15" fill="rgb(230,222,46)" fg:x="14330" fg:w="22"/><text x="88.2613%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.04%)</title><rect x="88.1096%" y="469" width="0.0369%" height="15" fill="rgb(215,135,32)" fg:x="14346" fg:w="6"/><text x="88.3596%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.33%)</title><rect x="87.8393%" y="517" width="0.3255%" height="15" fill="rgb(246,101,22)" fg:x="14302" fg:w="53"/><text x="88.0893%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.24%)</title><rect x="87.9253%" y="501" width="0.2395%" height="15" fill="rgb(206,107,13)" fg:x="14316" fg:w="39"/><text x="88.1753%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="88.1464%" y="485" width="0.0184%" height="15" fill="rgb(250,100,44)" fg:x="14352" fg:w="3"/><text x="88.3964%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="88.1648%" y="517" width="0.0123%" height="15" fill="rgb(231,147,38)" fg:x="14355" fg:w="2"/><text x="88.4148%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.22%)</title><rect x="88.1771%" y="517" width="0.2211%" height="15" fill="rgb(229,8,40)" fg:x="14357" fg:w="36"/><text x="88.4271%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.07%)</title><rect x="88.3245%" y="501" width="0.0737%" height="15" fill="rgb(221,135,30)" fg:x="14381" fg:w="12"/><text x="88.5745%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.09%)</title><rect x="88.4044%" y="517" width="0.0921%" height="15" fill="rgb(249,193,18)" fg:x="14394" fg:w="15"/><text x="88.6544%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.02%)</title><rect x="88.4965%" y="517" width="0.0246%" height="15" fill="rgb(209,133,39)" fg:x="14409" fg:w="4"/><text x="88.7465%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,401 samples, 88.45%)</title><rect x="0.5896%" y="565" width="88.4474%" height="15" fill="rgb(232,100,14)" fg:x="96" fg:w="14401"/><text x="0.8396%" y="575.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (273 samples, 1.68%)</title><rect x="87.3603%" y="549" width="1.6767%" height="15" fill="rgb(224,185,1)" fg:x="14224" fg:w="273"/><text x="87.6103%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (219 samples, 1.35%)</title><rect x="87.6919%" y="533" width="1.3450%" height="15" fill="rgb(223,139,8)" fg:x="14278" fg:w="219"/><text x="87.9419%" y="543.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (84 samples, 0.52%)</title><rect x="88.5211%" y="517" width="0.5159%" height="15" fill="rgb(232,213,38)" fg:x="14413" fg:w="84"/><text x="88.7711%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (10 samples, 0.06%)</title><rect x="89.0370%" y="565" width="0.0614%" height="15" fill="rgb(207,94,22)" fg:x="14497" fg:w="10"/><text x="89.2870%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.09%)</title><rect x="89.1045%" y="549" width="0.0860%" height="15" fill="rgb(219,183,54)" fg:x="14508" fg:w="14"/><text x="89.3545%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.06%)</title><rect x="89.1291%" y="533" width="0.0614%" height="15" fill="rgb(216,185,54)" fg:x="14512" fg:w="10"/><text x="89.3791%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="89.1414%" y="517" width="0.0491%" height="15" fill="rgb(254,217,39)" fg:x="14514" fg:w="8"/><text x="89.3914%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="89.1721%" y="501" width="0.0184%" height="15" fill="rgb(240,178,23)" fg:x="14519" fg:w="3"/><text x="89.4221%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="89.1905%" y="549" width="0.0123%" height="15" fill="rgb(218,11,47)" fg:x="14522" fg:w="2"/><text x="89.4405%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="89.2089%" y="549" width="0.0737%" height="15" fill="rgb(218,51,51)" fg:x="14525" fg:w="12"/><text x="89.4589%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.03%)</title><rect x="89.2519%" y="533" width="0.0307%" height="15" fill="rgb(238,126,27)" fg:x="14532" fg:w="5"/><text x="89.5019%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="89.2826%" y="549" width="0.0184%" height="15" fill="rgb(249,202,22)" fg:x="14537" fg:w="3"/><text x="89.5326%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="89.3011%" y="549" width="0.0184%" height="15" fill="rgb(254,195,49)" fg:x="14540" fg:w="3"/><text x="89.5511%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="89.3256%" y="549" width="0.0184%" height="15" fill="rgb(208,123,14)" fg:x="14544" fg:w="3"/><text x="89.5756%" y="559.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="89.3502%" y="549" width="0.0184%" height="15" fill="rgb(224,200,8)" fg:x="14548" fg:w="3"/><text x="89.6002%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="89.5774%" y="517" width="0.0123%" height="15" fill="rgb(217,61,36)" fg:x="14585" fg:w="2"/><text x="89.8274%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.10%)</title><rect x="89.6204%" y="501" width="0.0983%" height="15" fill="rgb(206,35,45)" fg:x="14592" fg:w="16"/><text x="89.8704%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="89.6880%" y="485" width="0.0307%" height="15" fill="rgb(217,65,33)" fg:x="14603" fg:w="5"/><text x="89.9380%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.22%)</title><rect x="89.5160%" y="533" width="0.2211%" height="15" fill="rgb(222,158,48)" fg:x="14575" fg:w="36"/><text x="89.7660%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.15%)</title><rect x="89.5897%" y="517" width="0.1474%" height="15" fill="rgb(254,2,54)" fg:x="14587" fg:w="24"/><text x="89.8397%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="89.7187%" y="501" width="0.0184%" height="15" fill="rgb(250,143,38)" fg:x="14608" fg:w="3"/><text x="89.9687%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.09%)</title><rect x="89.7433%" y="533" width="0.0921%" height="15" fill="rgb(248,25,0)" fg:x="14612" fg:w="15"/><text x="89.9933%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="89.7986%" y="517" width="0.0369%" height="15" fill="rgb(206,152,27)" fg:x="14621" fg:w="6"/><text x="90.0486%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="89.8354%" y="533" width="0.0123%" height="15" fill="rgb(240,77,30)" fg:x="14627" fg:w="2"/><text x="90.0854%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.07%)</title><rect x="89.8477%" y="533" width="0.0676%" height="15" fill="rgb(231,5,3)" fg:x="14629" fg:w="11"/><text x="90.0977%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.02%)</title><rect x="89.9152%" y="533" width="0.0184%" height="15" fill="rgb(207,226,32)" fg:x="14640" fg:w="3"/><text x="90.1652%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,623 samples, 89.81%)</title><rect x="0.5466%" y="581" width="89.8108%" height="15" fill="rgb(222,207,47)" fg:x="89" fg:w="14623"/><text x="0.7966%" y="591.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (204 samples, 1.25%)</title><rect x="89.1045%" y="565" width="1.2529%" height="15" fill="rgb(229,115,45)" fg:x="14508" fg:w="204"/><text x="89.3545%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (161 samples, 0.99%)</title><rect x="89.3686%" y="549" width="0.9888%" height="15" fill="rgb(224,191,6)" fg:x="14551" fg:w="161"/><text x="89.6186%" y="559.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (69 samples, 0.42%)</title><rect x="89.9337%" y="533" width="0.4238%" height="15" fill="rgb(230,227,24)" fg:x="14643" fg:w="69"/><text x="90.1837%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.04%)</title><rect x="90.3574%" y="581" width="0.0369%" height="15" fill="rgb(228,80,19)" fg:x="14712" fg:w="6"/><text x="90.6074%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="90.3943%" y="581" width="0.0123%" height="15" fill="rgb(247,229,0)" fg:x="14718" fg:w="2"/><text x="90.6443%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.06%)</title><rect x="90.4066%" y="565" width="0.0614%" height="15" fill="rgb(237,194,15)" fg:x="14720" fg:w="10"/><text x="90.6566%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.04%)</title><rect x="90.4312%" y="549" width="0.0369%" height="15" fill="rgb(219,203,20)" fg:x="14724" fg:w="6"/><text x="90.6812%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="90.4434%" y="533" width="0.0246%" height="15" fill="rgb(234,128,8)" fg:x="14726" fg:w="4"/><text x="90.6934%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="90.4557%" y="517" width="0.0123%" height="15" fill="rgb(248,202,8)" fg:x="14728" fg:w="2"/><text x="90.7057%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.04%)</title><rect x="90.4680%" y="565" width="0.0430%" height="15" fill="rgb(206,104,37)" fg:x="14730" fg:w="7"/><text x="90.7180%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="90.5110%" y="565" width="0.0123%" height="15" fill="rgb(223,8,27)" fg:x="14737" fg:w="2"/><text x="90.7610%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.07%)</title><rect x="90.5233%" y="565" width="0.0676%" height="15" fill="rgb(216,217,28)" fg:x="14739" fg:w="11"/><text x="90.7733%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.02%)</title><rect x="90.5724%" y="549" width="0.0184%" height="15" fill="rgb(249,199,1)" fg:x="14747" fg:w="3"/><text x="90.8224%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="90.5908%" y="565" width="0.0123%" height="15" fill="rgb(240,85,17)" fg:x="14750" fg:w="2"/><text x="90.8408%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="90.6031%" y="565" width="0.0123%" height="15" fill="rgb(206,108,45)" fg:x="14752" fg:w="2"/><text x="90.8531%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="90.6154%" y="565" width="0.0123%" height="15" fill="rgb(245,210,41)" fg:x="14754" fg:w="2"/><text x="90.8654%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="90.6338%" y="565" width="0.0123%" height="15" fill="rgb(206,13,37)" fg:x="14757" fg:w="2"/><text x="90.8838%" y="575.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (4 samples, 0.02%)</title><rect x="90.6584%" y="565" width="0.0246%" height="15" fill="rgb(250,61,18)" fg:x="14761" fg:w="4"/><text x="90.9084%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="90.8304%" y="533" width="0.0123%" height="15" fill="rgb(235,172,48)" fg:x="14789" fg:w="2"/><text x="91.0804%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.07%)</title><rect x="90.8549%" y="517" width="0.0737%" height="15" fill="rgb(249,201,17)" fg:x="14793" fg:w="12"/><text x="91.1049%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="90.8979%" y="501" width="0.0307%" height="15" fill="rgb(219,208,6)" fg:x="14800" fg:w="5"/><text x="91.1479%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.17%)</title><rect x="90.7751%" y="549" width="0.1720%" height="15" fill="rgb(248,31,23)" fg:x="14780" fg:w="28"/><text x="91.0251%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.10%)</title><rect x="90.8426%" y="533" width="0.1044%" height="15" fill="rgb(245,15,42)" fg:x="14791" fg:w="17"/><text x="91.0926%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="90.9286%" y="517" width="0.0184%" height="15" fill="rgb(222,217,39)" fg:x="14805" fg:w="3"/><text x="91.1786%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.02%)</title><rect x="90.9471%" y="549" width="0.0246%" height="15" fill="rgb(210,219,27)" fg:x="14808" fg:w="4"/><text x="91.1971%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.14%)</title><rect x="90.9716%" y="549" width="0.1351%" height="15" fill="rgb(252,166,36)" fg:x="14812" fg:w="22"/><text x="91.2216%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.04%)</title><rect x="91.0638%" y="533" width="0.0430%" height="15" fill="rgb(245,132,34)" fg:x="14827" fg:w="7"/><text x="91.3138%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="91.1067%" y="549" width="0.0123%" height="15" fill="rgb(236,54,3)" fg:x="14834" fg:w="2"/><text x="91.3567%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.05%)</title><rect x="91.1190%" y="549" width="0.0491%" height="15" fill="rgb(241,173,43)" fg:x="14836" fg:w="8"/><text x="91.3690%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,806 samples, 90.93%)</title><rect x="0.5098%" y="597" width="90.9348%" height="15" fill="rgb(215,190,9)" fg:x="83" fg:w="14806"/><text x="0.7598%" y="607.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (169 samples, 1.04%)</title><rect x="90.4066%" y="581" width="1.0380%" height="15" fill="rgb(242,101,16)" fg:x="14720" fg:w="169"/><text x="90.6566%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (124 samples, 0.76%)</title><rect x="90.6830%" y="565" width="0.7616%" height="15" fill="rgb(223,190,21)" fg:x="14765" fg:w="124"/><text x="90.9330%" y="575.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (43 samples, 0.26%)</title><rect x="91.1804%" y="549" width="0.2641%" height="15" fill="rgb(215,228,25)" fg:x="14846" fg:w="43"/><text x="91.4304%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.04%)</title><rect x="91.4445%" y="597" width="0.0369%" height="15" fill="rgb(225,36,22)" fg:x="14889" fg:w="6"/><text x="91.6945%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="91.4814%" y="597" width="0.0123%" height="15" fill="rgb(251,106,46)" fg:x="14895" fg:w="2"/><text x="91.7314%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="91.5182%" y="549" width="0.0307%" height="15" fill="rgb(208,90,1)" fg:x="14901" fg:w="5"/><text x="91.7682%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.06%)</title><rect x="91.4937%" y="581" width="0.0614%" height="15" fill="rgb(243,10,4)" fg:x="14897" fg:w="10"/><text x="91.7437%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.04%)</title><rect x="91.5182%" y="565" width="0.0369%" height="15" fill="rgb(212,137,27)" fg:x="14901" fg:w="6"/><text x="91.7682%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.02%)</title><rect x="91.5551%" y="581" width="0.0246%" height="15" fill="rgb(231,220,49)" fg:x="14907" fg:w="4"/><text x="91.8051%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.05%)</title><rect x="91.5797%" y="581" width="0.0491%" height="15" fill="rgb(237,96,20)" fg:x="14911" fg:w="8"/><text x="91.8297%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="91.6288%" y="581" width="0.0123%" height="15" fill="rgb(239,229,30)" fg:x="14919" fg:w="2"/><text x="91.8788%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="91.6411%" y="581" width="0.0123%" height="15" fill="rgb(219,65,33)" fg:x="14921" fg:w="2"/><text x="91.8911%" y="591.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="91.6595%" y="581" width="0.0123%" height="15" fill="rgb(243,134,7)" fg:x="14924" fg:w="2"/><text x="91.9095%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="91.7332%" y="549" width="0.0123%" height="15" fill="rgb(216,177,54)" fg:x="14936" fg:w="2"/><text x="91.9832%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.14%)</title><rect x="91.7086%" y="565" width="0.1351%" height="15" fill="rgb(211,160,20)" fg:x="14932" fg:w="22"/><text x="91.9586%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.10%)</title><rect x="91.7455%" y="549" width="0.0983%" height="15" fill="rgb(239,85,39)" fg:x="14938" fg:w="16"/><text x="91.9955%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.09%)</title><rect x="91.7578%" y="533" width="0.0860%" height="15" fill="rgb(232,125,22)" fg:x="14940" fg:w="14"/><text x="92.0078%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="91.8253%" y="517" width="0.0184%" height="15" fill="rgb(244,57,34)" fg:x="14951" fg:w="3"/><text x="92.0753%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.10%)</title><rect x="91.8438%" y="565" width="0.0983%" height="15" fill="rgb(214,203,32)" fg:x="14954" fg:w="16"/><text x="92.0938%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.07%)</title><rect x="91.8745%" y="549" width="0.0676%" height="15" fill="rgb(207,58,43)" fg:x="14959" fg:w="11"/><text x="92.1245%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="91.9420%" y="565" width="0.0123%" height="15" fill="rgb(215,193,15)" fg:x="14970" fg:w="2"/><text x="92.1920%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,926 samples, 91.67%)</title><rect x="0.4852%" y="613" width="91.6718%" height="15" fill="rgb(232,15,44)" fg:x="79" fg:w="14926"/><text x="0.7352%" y="623.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (108 samples, 0.66%)</title><rect x="91.4937%" y="597" width="0.6633%" height="15" fill="rgb(212,3,48)" fg:x="14897" fg:w="108"/><text x="91.7437%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (79 samples, 0.49%)</title><rect x="91.6718%" y="581" width="0.4852%" height="15" fill="rgb(218,128,7)" fg:x="14926" fg:w="79"/><text x="91.9218%" y="591.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (32 samples, 0.20%)</title><rect x="91.9604%" y="565" width="0.1965%" height="15" fill="rgb(226,216,39)" fg:x="14973" fg:w="32"/><text x="92.2104%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="92.2000%" y="597" width="0.0246%" height="15" fill="rgb(243,47,51)" fg:x="15012" fg:w="4"/><text x="92.4500%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="92.2123%" y="581" width="0.0123%" height="15" fill="rgb(241,183,40)" fg:x="15014" fg:w="2"/><text x="92.4623%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="92.2123%" y="565" width="0.0123%" height="15" fill="rgb(231,217,32)" fg:x="15014" fg:w="2"/><text x="92.4623%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="92.2245%" y="597" width="0.0123%" height="15" fill="rgb(229,61,38)" fg:x="15016" fg:w="2"/><text x="92.4745%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.04%)</title><rect x="92.2368%" y="597" width="0.0430%" height="15" fill="rgb(225,210,5)" fg:x="15018" fg:w="7"/><text x="92.4868%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="92.2675%" y="581" width="0.0123%" height="15" fill="rgb(231,79,45)" fg:x="15023" fg:w="2"/><text x="92.5175%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="92.2860%" y="597" width="0.0184%" height="15" fill="rgb(224,100,7)" fg:x="15026" fg:w="3"/><text x="92.5360%" y="607.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="92.3105%" y="597" width="0.0123%" height="15" fill="rgb(241,198,18)" fg:x="15030" fg:w="2"/><text x="92.5605%" y="607.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="92.3290%" y="597" width="0.0123%" height="15" fill="rgb(252,97,53)" fg:x="15033" fg:w="2"/><text x="92.5790%" y="607.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="92.3412%" y="597" width="0.0123%" height="15" fill="rgb(220,88,7)" fg:x="15035" fg:w="2"/><text x="92.5912%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="92.4702%" y="549" width="0.0491%" height="15" fill="rgb(213,176,14)" fg:x="15056" fg:w="8"/><text x="92.7202%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="92.4948%" y="533" width="0.0246%" height="15" fill="rgb(246,73,7)" fg:x="15060" fg:w="4"/><text x="92.7448%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.10%)</title><rect x="92.4272%" y="581" width="0.0983%" height="15" fill="rgb(245,64,36)" fg:x="15049" fg:w="16"/><text x="92.6772%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.07%)</title><rect x="92.4579%" y="565" width="0.0676%" height="15" fill="rgb(245,80,10)" fg:x="15054" fg:w="11"/><text x="92.7079%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="92.5255%" y="581" width="0.0184%" height="15" fill="rgb(232,107,50)" fg:x="15065" fg:w="3"/><text x="92.7755%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.09%)</title><rect x="92.5439%" y="581" width="0.0860%" height="15" fill="rgb(253,3,0)" fg:x="15068" fg:w="14"/><text x="92.7939%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.04%)</title><rect x="92.5930%" y="565" width="0.0369%" height="15" fill="rgb(212,99,53)" fg:x="15076" fg:w="6"/><text x="92.8430%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,040 samples, 92.37%)</title><rect x="0.4483%" y="629" width="92.3719%" height="15" fill="rgb(249,111,54)" fg:x="73" fg:w="15040"/><text x="0.6983%" y="639.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (108 samples, 0.66%)</title><rect x="92.1570%" y="613" width="0.6633%" height="15" fill="rgb(249,55,30)" fg:x="15005" fg:w="108"/><text x="92.4070%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (76 samples, 0.47%)</title><rect x="92.3535%" y="597" width="0.4668%" height="15" fill="rgb(237,47,42)" fg:x="15037" fg:w="76"/><text x="92.6035%" y="607.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (28 samples, 0.17%)</title><rect x="92.6483%" y="581" width="0.1720%" height="15" fill="rgb(211,20,18)" fg:x="15085" fg:w="28"/><text x="92.8983%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.02%)</title><rect x="92.8203%" y="629" width="0.0184%" height="15" fill="rgb(231,203,46)" fg:x="15113" fg:w="3"/><text x="93.0703%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="92.8817%" y="581" width="0.0184%" height="15" fill="rgb(237,142,3)" fg:x="15123" fg:w="3"/><text x="93.1317%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.06%)</title><rect x="92.8449%" y="613" width="0.0614%" height="15" fill="rgb(241,107,1)" fg:x="15117" fg:w="10"/><text x="93.0949%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.04%)</title><rect x="92.8694%" y="597" width="0.0369%" height="15" fill="rgb(229,83,13)" fg:x="15121" fg:w="6"/><text x="93.1194%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="92.9063%" y="613" width="0.0123%" height="15" fill="rgb(241,91,40)" fg:x="15127" fg:w="2"/><text x="93.1563%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="92.9186%" y="613" width="0.0246%" height="15" fill="rgb(225,3,45)" fg:x="15129" fg:w="4"/><text x="93.1686%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="92.9431%" y="613" width="0.0123%" height="15" fill="rgb(244,223,14)" fg:x="15133" fg:w="2"/><text x="93.1931%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="92.9554%" y="613" width="0.0184%" height="15" fill="rgb(224,124,37)" fg:x="15135" fg:w="3"/><text x="93.2054%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.02%)</title><rect x="92.9800%" y="613" width="0.0184%" height="15" fill="rgb(251,171,30)" fg:x="15139" fg:w="3"/><text x="93.2300%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="92.9984%" y="613" width="0.0123%" height="15" fill="rgb(236,46,54)" fg:x="15142" fg:w="2"/><text x="93.2484%" y="623.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="93.0107%" y="613" width="0.0123%" height="15" fill="rgb(245,213,5)" fg:x="15144" fg:w="2"/><text x="93.2607%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="93.1151%" y="581" width="0.0123%" height="15" fill="rgb(230,144,27)" fg:x="15161" fg:w="2"/><text x="93.3651%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.10%)</title><rect x="93.0905%" y="597" width="0.0983%" height="15" fill="rgb(220,86,6)" fg:x="15157" fg:w="16"/><text x="93.3405%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.06%)</title><rect x="93.1274%" y="581" width="0.0614%" height="15" fill="rgb(240,20,13)" fg:x="15163" fg:w="10"/><text x="93.3774%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.05%)</title><rect x="93.1397%" y="565" width="0.0491%" height="15" fill="rgb(217,89,34)" fg:x="15165" fg:w="8"/><text x="93.3897%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="93.1765%" y="549" width="0.0123%" height="15" fill="rgb(229,13,5)" fg:x="15171" fg:w="2"/><text x="93.4265%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.03%)</title><rect x="93.1888%" y="597" width="0.0307%" height="15" fill="rgb(244,67,35)" fg:x="15173" fg:w="5"/><text x="93.4388%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.11%)</title><rect x="93.2195%" y="597" width="0.1106%" height="15" fill="rgb(221,40,2)" fg:x="15178" fg:w="18"/><text x="93.4695%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.03%)</title><rect x="93.2993%" y="581" width="0.0307%" height="15" fill="rgb(237,157,21)" fg:x="15191" fg:w="5"/><text x="93.5493%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="93.3362%" y="597" width="0.0184%" height="15" fill="rgb(222,94,11)" fg:x="15197" fg:w="3"/><text x="93.5862%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.03%)</title><rect x="93.3546%" y="597" width="0.0307%" height="15" fill="rgb(249,113,6)" fg:x="15200" fg:w="5"/><text x="93.6046%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,174 samples, 93.19%)</title><rect x="0.4115%" y="645" width="93.1949%" height="15" fill="rgb(238,137,36)" fg:x="67" fg:w="15174"/><text x="0.6615%" y="655.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (124 samples, 0.76%)</title><rect x="92.8449%" y="629" width="0.7616%" height="15" fill="rgb(210,102,26)" fg:x="15117" fg:w="124"/><text x="93.0949%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (95 samples, 0.58%)</title><rect x="93.0230%" y="613" width="0.5835%" height="15" fill="rgb(218,30,30)" fg:x="15146" fg:w="95"/><text x="93.2730%" y="623.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (36 samples, 0.22%)</title><rect x="93.3853%" y="597" width="0.2211%" height="15" fill="rgb(214,67,26)" fg:x="15205" fg:w="36"/><text x="93.6353%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.04%)</title><rect x="93.6064%" y="645" width="0.0369%" height="15" fill="rgb(251,9,53)" fg:x="15241" fg:w="6"/><text x="93.8564%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="93.6433%" y="645" width="0.0123%" height="15" fill="rgb(228,204,25)" fg:x="15247" fg:w="2"/><text x="93.8933%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="93.6556%" y="629" width="0.0307%" height="15" fill="rgb(207,153,8)" fg:x="15249" fg:w="5"/><text x="93.9056%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="93.6617%" y="613" width="0.0246%" height="15" fill="rgb(242,9,16)" fg:x="15250" fg:w="4"/><text x="93.9117%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="93.6617%" y="597" width="0.0246%" height="15" fill="rgb(217,211,10)" fg:x="15250" fg:w="4"/><text x="93.9117%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="93.6863%" y="629" width="0.0184%" height="15" fill="rgb(219,228,52)" fg:x="15254" fg:w="3"/><text x="93.9363%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.07%)</title><rect x="93.7047%" y="629" width="0.0676%" height="15" fill="rgb(231,92,29)" fg:x="15257" fg:w="11"/><text x="93.9547%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="93.7477%" y="613" width="0.0246%" height="15" fill="rgb(232,8,23)" fg:x="15264" fg:w="4"/><text x="93.9977%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.03%)</title><rect x="93.7723%" y="629" width="0.0307%" height="15" fill="rgb(216,211,34)" fg:x="15268" fg:w="5"/><text x="94.0223%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.04%)</title><rect x="93.8030%" y="629" width="0.0369%" height="15" fill="rgb(236,151,0)" fg:x="15273" fg:w="6"/><text x="94.0530%" y="639.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="93.8521%" y="629" width="0.0123%" height="15" fill="rgb(209,168,3)" fg:x="15281" fg:w="2"/><text x="94.1021%" y="639.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="93.8644%" y="629" width="0.0184%" height="15" fill="rgb(208,129,28)" fg:x="15283" fg:w="3"/><text x="94.1144%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="93.9995%" y="597" width="0.0307%" height="15" fill="rgb(229,78,22)" fg:x="15305" fg:w="5"/><text x="94.2495%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.15%)</title><rect x="93.9504%" y="613" width="0.1535%" height="15" fill="rgb(228,187,13)" fg:x="15297" fg:w="25"/><text x="94.2004%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.07%)</title><rect x="94.0302%" y="597" width="0.0737%" height="15" fill="rgb(240,119,24)" fg:x="15310" fg:w="12"/><text x="94.2802%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="94.0486%" y="581" width="0.0553%" height="15" fill="rgb(209,194,42)" fg:x="15313" fg:w="9"/><text x="94.2986%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.02%)</title><rect x="94.0794%" y="565" width="0.0246%" height="15" fill="rgb(247,200,46)" fg:x="15318" fg:w="4"/><text x="94.3294%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.12%)</title><rect x="94.1039%" y="613" width="0.1228%" height="15" fill="rgb(218,76,16)" fg:x="15322" fg:w="20"/><text x="94.3539%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.05%)</title><rect x="94.1776%" y="597" width="0.0491%" height="15" fill="rgb(225,21,48)" fg:x="15334" fg:w="8"/><text x="94.4276%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (2 samples, 0.01%)</title><rect x="94.2268%" y="613" width="0.0123%" height="15" fill="rgb(239,223,50)" fg:x="15342" fg:w="2"/><text x="94.4768%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="94.2390%" y="613" width="0.0184%" height="15" fill="rgb(244,45,21)" fg:x="15344" fg:w="3"/><text x="94.4890%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,328 samples, 94.14%)</title><rect x="0.3624%" y="661" width="94.1408%" height="15" fill="rgb(232,33,43)" fg:x="59" fg:w="15328"/><text x="0.6124%" y="671.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (138 samples, 0.85%)</title><rect x="93.6556%" y="645" width="0.8476%" height="15" fill="rgb(209,8,3)" fg:x="15249" fg:w="138"/><text x="93.9056%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (101 samples, 0.62%)</title><rect x="93.8828%" y="629" width="0.6203%" height="15" fill="rgb(214,25,53)" fg:x="15286" fg:w="101"/><text x="94.1328%" y="639.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (39 samples, 0.24%)</title><rect x="94.2636%" y="613" width="0.2395%" height="15" fill="rgb(254,186,54)" fg:x="15348" fg:w="39"/><text x="94.5136%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (5 samples, 0.03%)</title><rect x="94.5031%" y="661" width="0.0307%" height="15" fill="rgb(208,174,49)" fg:x="15387" fg:w="5"/><text x="94.7531%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.06%)</title><rect x="94.5707%" y="613" width="0.0553%" height="15" fill="rgb(233,191,51)" fg:x="15398" fg:w="9"/><text x="94.8207%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="94.6137%" y="597" width="0.0123%" height="15" fill="rgb(222,134,10)" fg:x="15405" fg:w="2"/><text x="94.8637%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.09%)</title><rect x="94.5400%" y="645" width="0.0921%" height="15" fill="rgb(230,226,20)" fg:x="15393" fg:w="15"/><text x="94.7900%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.07%)</title><rect x="94.5645%" y="629" width="0.0676%" height="15" fill="rgb(251,111,25)" fg:x="15397" fg:w="11"/><text x="94.8145%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="94.6321%" y="645" width="0.0123%" height="15" fill="rgb(224,40,46)" fg:x="15408" fg:w="2"/><text x="94.8821%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="94.6444%" y="645" width="0.0246%" height="15" fill="rgb(236,108,47)" fg:x="15410" fg:w="4"/><text x="94.8944%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="94.6567%" y="629" width="0.0123%" height="15" fill="rgb(234,93,0)" fg:x="15412" fg:w="2"/><text x="94.9067%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="94.6751%" y="645" width="0.0246%" height="15" fill="rgb(224,213,32)" fg:x="15415" fg:w="4"/><text x="94.9251%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.02%)</title><rect x="94.6997%" y="645" width="0.0246%" height="15" fill="rgb(251,11,48)" fg:x="15419" fg:w="4"/><text x="94.9497%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.03%)</title><rect x="94.7242%" y="645" width="0.0307%" height="15" fill="rgb(236,173,5)" fg:x="15423" fg:w="5"/><text x="94.9742%" y="655.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (4 samples, 0.02%)</title><rect x="94.7549%" y="645" width="0.0246%" height="15" fill="rgb(230,95,12)" fg:x="15428" fg:w="4"/><text x="95.0049%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="94.9331%" y="613" width="0.0307%" height="15" fill="rgb(232,209,1)" fg:x="15457" fg:w="5"/><text x="95.1831%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.07%)</title><rect x="94.9883%" y="597" width="0.0737%" height="15" fill="rgb(232,6,1)" fg:x="15466" fg:w="12"/><text x="95.2383%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="95.0497%" y="581" width="0.0123%" height="15" fill="rgb(210,224,50)" fg:x="15476" fg:w="2"/><text x="95.2997%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.17%)</title><rect x="94.9023%" y="629" width="0.1720%" height="15" fill="rgb(228,127,35)" fg:x="15452" fg:w="28"/><text x="95.1523%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.11%)</title><rect x="94.9638%" y="613" width="0.1106%" height="15" fill="rgb(245,102,45)" fg:x="15462" fg:w="18"/><text x="95.2138%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="95.0620%" y="597" width="0.0123%" height="15" fill="rgb(214,1,49)" fg:x="15478" fg:w="2"/><text x="95.3120%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.02%)</title><rect x="95.0743%" y="629" width="0.0184%" height="15" fill="rgb(226,163,40)" fg:x="15480" fg:w="3"/><text x="95.3243%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.07%)</title><rect x="95.1972%" y="613" width="0.0737%" height="15" fill="rgb(239,212,28)" fg:x="15500" fg:w="12"/><text x="95.4472%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.18%)</title><rect x="95.0927%" y="629" width="0.1843%" height="15" fill="rgb(220,20,13)" fg:x="15483" fg:w="30"/><text x="95.3427%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="95.2770%" y="629" width="0.0307%" height="15" fill="rgb(210,164,35)" fg:x="15513" fg:w="5"/><text x="95.5270%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="95.3077%" y="629" width="0.0123%" height="15" fill="rgb(248,109,41)" fg:x="15518" fg:w="2"/><text x="95.5577%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,521 samples, 95.33%)</title><rect x="0.3194%" y="677" width="95.3261%" height="15" fill="rgb(238,23,50)" fg:x="52" fg:w="15521"/><text x="0.5694%" y="687.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (180 samples, 1.11%)</title><rect x="94.5400%" y="661" width="1.1055%" height="15" fill="rgb(211,48,49)" fg:x="15393" fg:w="180"/><text x="94.7900%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (141 samples, 0.87%)</title><rect x="94.7795%" y="645" width="0.8660%" height="15" fill="rgb(223,36,21)" fg:x="15432" fg:w="141"/><text x="95.0295%" y="655.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (53 samples, 0.33%)</title><rect x="95.3200%" y="629" width="0.3255%" height="15" fill="rgb(207,123,46)" fg:x="15520" fg:w="53"/><text x="95.5700%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.05%)</title><rect x="95.7069%" y="661" width="0.0491%" height="15" fill="rgb(240,218,32)" fg:x="15583" fg:w="8"/><text x="95.9569%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.02%)</title><rect x="95.7315%" y="645" width="0.0246%" height="15" fill="rgb(252,5,43)" fg:x="15587" fg:w="4"/><text x="95.9815%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="95.7376%" y="629" width="0.0184%" height="15" fill="rgb(252,84,19)" fg:x="15588" fg:w="3"/><text x="95.9876%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.02%)</title><rect x="95.7560%" y="661" width="0.0184%" height="15" fill="rgb(243,152,39)" fg:x="15591" fg:w="3"/><text x="96.0060%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="95.7745%" y="661" width="0.0123%" height="15" fill="rgb(234,160,15)" fg:x="15594" fg:w="2"/><text x="96.0245%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="95.7868%" y="661" width="0.0737%" height="15" fill="rgb(237,34,20)" fg:x="15596" fg:w="12"/><text x="96.0368%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.03%)</title><rect x="95.8298%" y="645" width="0.0307%" height="15" fill="rgb(229,97,13)" fg:x="15603" fg:w="5"/><text x="96.0798%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.02%)</title><rect x="95.8605%" y="661" width="0.0246%" height="15" fill="rgb(234,71,50)" fg:x="15608" fg:w="4"/><text x="96.1105%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.02%)</title><rect x="95.8850%" y="661" width="0.0246%" height="15" fill="rgb(253,155,4)" fg:x="15612" fg:w="4"/><text x="96.1350%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (2 samples, 0.01%)</title><rect x="95.9157%" y="661" width="0.0123%" height="15" fill="rgb(222,185,37)" fg:x="15617" fg:w="2"/><text x="96.1657%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (2 samples, 0.01%)</title><rect x="95.9280%" y="661" width="0.0123%" height="15" fill="rgb(251,177,13)" fg:x="15619" fg:w="2"/><text x="96.1780%" y="671.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="95.9403%" y="661" width="0.0184%" height="15" fill="rgb(250,179,40)" fg:x="15621" fg:w="3"/><text x="96.1903%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="96.1430%" y="629" width="0.0123%" height="15" fill="rgb(242,44,2)" fg:x="15654" fg:w="2"/><text x="96.3930%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.07%)</title><rect x="96.1921%" y="613" width="0.0676%" height="15" fill="rgb(216,177,13)" fg:x="15662" fg:w="11"/><text x="96.4421%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="96.2412%" y="597" width="0.0184%" height="15" fill="rgb(216,106,43)" fg:x="15670" fg:w="3"/><text x="96.4912%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.20%)</title><rect x="96.0816%" y="645" width="0.1965%" height="15" fill="rgb(216,183,2)" fg:x="15644" fg:w="32"/><text x="96.3316%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.12%)</title><rect x="96.1553%" y="629" width="0.1228%" height="15" fill="rgb(249,75,3)" fg:x="15656" fg:w="20"/><text x="96.4053%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="96.2597%" y="613" width="0.0184%" height="15" fill="rgb(219,67,39)" fg:x="15673" fg:w="3"/><text x="96.5097%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="96.3579%" y="629" width="0.0246%" height="15" fill="rgb(253,228,2)" fg:x="15689" fg:w="4"/><text x="96.6079%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.10%)</title><rect x="96.2842%" y="645" width="0.1044%" height="15" fill="rgb(235,138,27)" fg:x="15677" fg:w="17"/><text x="96.5342%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.03%)</title><rect x="96.3948%" y="645" width="0.0307%" height="15" fill="rgb(236,97,51)" fg:x="15695" fg:w="5"/><text x="96.6448%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="96.4316%" y="645" width="0.0123%" height="15" fill="rgb(240,80,30)" fg:x="15701" fg:w="2"/><text x="96.6816%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,713 samples, 96.51%)</title><rect x="0.2825%" y="693" width="96.5053%" height="15" fill="rgb(230,178,19)" fg:x="46" fg:w="15713"/><text x="0.5325%" y="703.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (186 samples, 1.14%)</title><rect x="95.6455%" y="677" width="1.1424%" height="15" fill="rgb(210,190,27)" fg:x="15573" fg:w="186"/><text x="95.8955%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (135 samples, 0.83%)</title><rect x="95.9587%" y="661" width="0.8291%" height="15" fill="rgb(222,107,31)" fg:x="15624" fg:w="135"/><text x="96.2087%" y="671.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (56 samples, 0.34%)</title><rect x="96.4439%" y="645" width="0.3439%" height="15" fill="rgb(216,127,34)" fg:x="15703" fg:w="56"/><text x="96.6939%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (10 samples, 0.06%)</title><rect x="96.7879%" y="693" width="0.0614%" height="15" fill="rgb(234,116,52)" fg:x="15759" fg:w="10"/><text x="97.0379%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (4 samples, 0.02%)</title><rect x="96.8493%" y="693" width="0.0246%" height="15" fill="rgb(222,124,15)" fg:x="15769" fg:w="4"/><text x="97.0993%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="96.8861%" y="661" width="0.0123%" height="15" fill="rgb(231,179,28)" fg:x="15775" fg:w="2"/><text x="97.1361%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.04%)</title><rect x="96.8984%" y="645" width="0.0430%" height="15" fill="rgb(226,93,45)" fg:x="15777" fg:w="7"/><text x="97.1484%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.09%)</title><rect x="96.8738%" y="677" width="0.0860%" height="15" fill="rgb(215,8,51)" fg:x="15773" fg:w="14"/><text x="97.1238%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.06%)</title><rect x="96.8984%" y="661" width="0.0614%" height="15" fill="rgb(223,106,5)" fg:x="15777" fg:w="10"/><text x="97.1484%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.02%)</title><rect x="96.9414%" y="645" width="0.0184%" height="15" fill="rgb(250,191,5)" fg:x="15784" fg:w="3"/><text x="97.1914%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.03%)</title><rect x="96.9660%" y="677" width="0.0307%" height="15" fill="rgb(242,132,44)" fg:x="15788" fg:w="5"/><text x="97.2160%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="96.9967%" y="677" width="0.0184%" height="15" fill="rgb(251,152,29)" fg:x="15793" fg:w="3"/><text x="97.2467%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="97.0151%" y="677" width="0.0123%" height="15" fill="rgb(218,179,5)" fg:x="15796" fg:w="2"/><text x="97.2651%" y="687.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.02%)</title><rect x="97.0335%" y="677" width="0.0184%" height="15" fill="rgb(227,67,19)" fg:x="15799" fg:w="3"/><text x="97.2835%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.03%)</title><rect x="97.1871%" y="645" width="0.0307%" height="15" fill="rgb(233,119,31)" fg:x="15824" fg:w="5"/><text x="97.4371%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.06%)</title><rect x="97.2362%" y="629" width="0.0614%" height="15" fill="rgb(241,120,22)" fg:x="15832" fg:w="10"/><text x="97.4862%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.18%)</title><rect x="97.1318%" y="661" width="0.1781%" height="15" fill="rgb(224,102,30)" fg:x="15815" fg:w="29"/><text x="97.3818%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.09%)</title><rect x="97.2178%" y="645" width="0.0921%" height="15" fill="rgb(210,164,37)" fg:x="15829" fg:w="15"/><text x="97.4678%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="97.2976%" y="629" width="0.0123%" height="15" fill="rgb(226,191,16)" fg:x="15842" fg:w="2"/><text x="97.5476%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="97.3099%" y="661" width="0.0123%" height="15" fill="rgb(214,40,45)" fg:x="15844" fg:w="2"/><text x="97.5599%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="97.3222%" y="661" width="0.0737%" height="15" fill="rgb(244,29,26)" fg:x="15846" fg:w="12"/><text x="97.5722%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.02%)</title><rect x="97.3713%" y="645" width="0.0246%" height="15" fill="rgb(216,16,5)" fg:x="15854" fg:w="4"/><text x="97.6213%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.04%)</title><rect x="97.3959%" y="661" width="0.0430%" height="15" fill="rgb(249,76,35)" fg:x="15858" fg:w="7"/><text x="97.6459%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.02%)</title><rect x="97.4450%" y="661" width="0.0184%" height="15" fill="rgb(207,11,44)" fg:x="15866" fg:w="3"/><text x="97.6950%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,872 samples, 97.48%)</title><rect x="0.2395%" y="709" width="97.4819%" height="15" fill="rgb(228,190,49)" fg:x="39" fg:w="15872"/><text x="0.4895%" y="719.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (138 samples, 0.85%)</title><rect x="96.8738%" y="693" width="0.8476%" height="15" fill="rgb(214,173,12)" fg:x="15773" fg:w="138"/><text x="97.1238%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (109 samples, 0.67%)</title><rect x="97.0520%" y="677" width="0.6695%" height="15" fill="rgb(218,26,35)" fg:x="15802" fg:w="109"/><text x="97.3020%" y="687.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (42 samples, 0.26%)</title><rect x="97.4635%" y="661" width="0.2580%" height="15" fill="rgb(220,200,19)" fg:x="15869" fg:w="42"/><text x="97.7135%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (11 samples, 0.07%)</title><rect x="97.7214%" y="709" width="0.0676%" height="15" fill="rgb(239,95,49)" fg:x="15911" fg:w="11"/><text x="97.9714%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.02%)</title><rect x="97.8258%" y="661" width="0.0246%" height="15" fill="rgb(235,85,53)" fg:x="15928" fg:w="4"/><text x="98.0758%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.06%)</title><rect x="97.7951%" y="693" width="0.0614%" height="15" fill="rgb(233,133,31)" fg:x="15923" fg:w="10"/><text x="98.0451%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.04%)</title><rect x="97.8135%" y="677" width="0.0430%" height="15" fill="rgb(218,25,20)" fg:x="15926" fg:w="7"/><text x="98.0635%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.04%)</title><rect x="97.8688%" y="693" width="0.0369%" height="15" fill="rgb(252,210,38)" fg:x="15935" fg:w="6"/><text x="98.1188%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.02%)</title><rect x="97.9057%" y="693" width="0.0184%" height="15" fill="rgb(242,134,21)" fg:x="15941" fg:w="3"/><text x="98.1557%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="97.9241%" y="693" width="0.0184%" height="15" fill="rgb(213,28,48)" fg:x="15944" fg:w="3"/><text x="98.1741%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.08%)</title><rect x="98.0653%" y="645" width="0.0798%" height="15" fill="rgb(250,196,2)" fg:x="15967" fg:w="13"/><text x="98.3153%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.03%)</title><rect x="98.1145%" y="629" width="0.0307%" height="15" fill="rgb(227,5,17)" fg:x="15975" fg:w="5"/><text x="98.3645%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.14%)</title><rect x="98.0224%" y="677" width="0.1351%" height="15" fill="rgb(221,226,24)" fg:x="15960" fg:w="22"/><text x="98.2724%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.11%)</title><rect x="98.0469%" y="661" width="0.1106%" height="15" fill="rgb(211,5,48)" fg:x="15964" fg:w="18"/><text x="98.2969%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="98.1452%" y="645" width="0.0123%" height="15" fill="rgb(219,150,6)" fg:x="15980" fg:w="2"/><text x="98.3952%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.07%)</title><rect x="98.1575%" y="677" width="0.0737%" height="15" fill="rgb(251,46,16)" fg:x="15982" fg:w="12"/><text x="98.4075%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.03%)</title><rect x="98.2005%" y="661" width="0.0307%" height="15" fill="rgb(220,204,40)" fg:x="15989" fg:w="5"/><text x="98.4505%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="98.2312%" y="677" width="0.0184%" height="15" fill="rgb(211,85,2)" fg:x="15994" fg:w="3"/><text x="98.4812%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="98.2496%" y="677" width="0.0123%" height="15" fill="rgb(229,17,7)" fg:x="15997" fg:w="2"/><text x="98.4996%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,997 samples, 98.25%)</title><rect x="0.2150%" y="725" width="98.2496%" height="15" fill="rgb(239,72,28)" fg:x="35" fg:w="15997"/><text x="0.4650%" y="735.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (109 samples, 0.67%)</title><rect x="97.7951%" y="709" width="0.6695%" height="15" fill="rgb(230,47,54)" fg:x="15923" fg:w="109"/><text x="98.0451%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (84 samples, 0.52%)</title><rect x="97.9487%" y="693" width="0.5159%" height="15" fill="rgb(214,50,8)" fg:x="15948" fg:w="84"/><text x="98.1987%" y="703.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (33 samples, 0.20%)</title><rect x="98.2619%" y="677" width="0.2027%" height="15" fill="rgb(216,198,43)" fg:x="15999" fg:w="33"/><text x="98.5119%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.04%)</title><rect x="98.4953%" y="709" width="0.0369%" height="15" fill="rgb(234,20,35)" fg:x="16037" fg:w="6"/><text x="98.7453%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="98.5137%" y="693" width="0.0184%" height="15" fill="rgb(254,45,19)" fg:x="16040" fg:w="3"/><text x="98.7637%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.01%)</title><rect x="98.5321%" y="709" width="0.0123%" height="15" fill="rgb(219,14,44)" fg:x="16043" fg:w="2"/><text x="98.7821%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.02%)</title><rect x="98.5444%" y="709" width="0.0246%" height="15" fill="rgb(217,220,26)" fg:x="16045" fg:w="4"/><text x="98.7944%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="98.5567%" y="693" width="0.0123%" height="15" fill="rgb(213,158,28)" fg:x="16047" fg:w="2"/><text x="98.8067%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="98.5690%" y="709" width="0.0184%" height="15" fill="rgb(252,51,52)" fg:x="16049" fg:w="3"/><text x="98.8190%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="98.6488%" y="693" width="0.0307%" height="15" fill="rgb(246,89,16)" fg:x="16062" fg:w="5"/><text x="98.8988%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="98.6611%" y="677" width="0.0184%" height="15" fill="rgb(216,158,49)" fg:x="16064" fg:w="3"/><text x="98.9111%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.02%)</title><rect x="98.6611%" y="661" width="0.0184%" height="15" fill="rgb(236,107,19)" fg:x="16064" fg:w="3"/><text x="98.9111%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="98.6795%" y="693" width="0.0123%" height="15" fill="rgb(228,185,30)" fg:x="16067" fg:w="2"/><text x="98.9295%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.02%)</title><rect x="98.6918%" y="693" width="0.0184%" height="15" fill="rgb(246,134,8)" fg:x="16069" fg:w="3"/><text x="98.9418%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.01%)</title><rect x="98.6979%" y="677" width="0.0123%" height="15" fill="rgb(214,143,50)" fg:x="16070" fg:w="2"/><text x="98.9479%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="98.7102%" y="693" width="0.0184%" height="15" fill="rgb(228,75,8)" fg:x="16072" fg:w="3"/><text x="98.9602%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,064 samples, 98.66%)</title><rect x="0.1965%" y="741" width="98.6611%" height="15" fill="rgb(207,175,4)" fg:x="32" fg:w="16064"/><text x="0.4465%" y="751.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (64 samples, 0.39%)</title><rect x="98.4646%" y="725" width="0.3931%" height="15" fill="rgb(205,108,24)" fg:x="16032" fg:w="64"/><text x="98.7146%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (42 samples, 0.26%)</title><rect x="98.5997%" y="709" width="0.2580%" height="15" fill="rgb(244,120,49)" fg:x="16054" fg:w="42"/><text x="98.8497%" y="719.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (20 samples, 0.12%)</title><rect x="98.7348%" y="693" width="0.1228%" height="15" fill="rgb(223,47,38)" fg:x="16076" fg:w="20"/><text x="98.9848%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (2 samples, 0.01%)</title><rect x="98.8576%" y="741" width="0.0123%" height="15" fill="rgb(229,179,11)" fg:x="16096" fg:w="2"/><text x="99.1076%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="98.8761%" y="725" width="0.0246%" height="15" fill="rgb(231,122,1)" fg:x="16099" fg:w="4"/><text x="99.1261%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.02%)</title><rect x="98.9191%" y="725" width="0.0184%" height="15" fill="rgb(245,119,9)" fg:x="16106" fg:w="3"/><text x="99.1691%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="98.9559%" y="709" width="0.0123%" height="15" fill="rgb(241,163,25)" fg:x="16112" fg:w="2"/><text x="99.2059%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,092 samples, 98.83%)</title><rect x="0.1965%" y="757" width="98.8331%" height="15" fill="rgb(217,214,3)" fg:x="32" fg:w="16092"/><text x="0.4465%" y="767.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (25 samples, 0.15%)</title><rect x="98.8761%" y="741" width="0.1535%" height="15" fill="rgb(240,86,28)" fg:x="16099" fg:w="25"/><text x="99.1261%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (13 samples, 0.08%)</title><rect x="98.9498%" y="725" width="0.0798%" height="15" fill="rgb(215,47,9)" fg:x="16111" fg:w="13"/><text x="99.1998%" y="735.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (10 samples, 0.06%)</title><rect x="98.9682%" y="709" width="0.0614%" height="15" fill="rgb(252,25,45)" fg:x="16114" fg:w="10"/><text x="99.2182%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="99.0480%" y="741" width="0.0123%" height="15" fill="rgb(251,164,9)" fg:x="16127" fg:w="2"/><text x="99.2980%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.04%)</title><rect x="99.0910%" y="725" width="0.0430%" height="15" fill="rgb(233,194,0)" fg:x="16134" fg:w="7"/><text x="99.3410%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="99.1156%" y="709" width="0.0184%" height="15" fill="rgb(249,111,24)" fg:x="16138" fg:w="3"/><text x="99.3656%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="99.1217%" y="693" width="0.0123%" height="15" fill="rgb(250,223,3)" fg:x="16139" fg:w="2"/><text x="99.3717%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (2 samples, 0.01%)</title><rect x="99.1217%" y="677" width="0.0123%" height="15" fill="rgb(236,178,37)" fg:x="16139" fg:w="2"/><text x="99.3717%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.01%)</title><rect x="99.1340%" y="725" width="0.0123%" height="15" fill="rgb(241,158,50)" fg:x="16141" fg:w="2"/><text x="99.3840%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="99.1463%" y="725" width="0.0123%" height="15" fill="rgb(213,121,41)" fg:x="16143" fg:w="2"/><text x="99.3963%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,121 samples, 99.01%)</title><rect x="0.1965%" y="773" width="99.0112%" height="15" fill="rgb(240,92,3)" fg:x="32" fg:w="16121"/><text x="0.4465%" y="783.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (27 samples, 0.17%)</title><rect x="99.0419%" y="757" width="0.1658%" height="15" fill="rgb(205,123,3)" fg:x="16126" fg:w="27"/><text x="99.2919%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (23 samples, 0.14%)</title><rect x="99.0665%" y="741" width="0.1413%" height="15" fill="rgb(205,97,47)" fg:x="16130" fg:w="23"/><text x="99.3165%" y="751.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (7 samples, 0.04%)</title><rect x="99.1647%" y="725" width="0.0430%" height="15" fill="rgb(247,152,14)" fg:x="16146" fg:w="7"/><text x="99.4147%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="99.2139%" y="757" width="0.0246%" height="15" fill="rgb(248,195,53)" fg:x="16154" fg:w="4"/><text x="99.4639%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.02%)</title><rect x="99.2200%" y="741" width="0.0184%" height="15" fill="rgb(226,201,16)" fg:x="16155" fg:w="3"/><text x="99.4700%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="99.2261%" y="725" width="0.0123%" height="15" fill="rgb(205,98,0)" fg:x="16156" fg:w="2"/><text x="99.4761%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.02%)</title><rect x="99.2937%" y="741" width="0.0246%" height="15" fill="rgb(214,191,48)" fg:x="16167" fg:w="4"/><text x="99.5437%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.05%)</title><rect x="99.3183%" y="741" width="0.0491%" height="15" fill="rgb(237,112,39)" fg:x="16171" fg:w="8"/><text x="99.5683%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.02%)</title><rect x="99.3490%" y="725" width="0.0184%" height="15" fill="rgb(247,203,27)" fg:x="16176" fg:w="3"/><text x="99.5990%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="99.3674%" y="741" width="0.0123%" height="15" fill="rgb(235,124,28)" fg:x="16179" fg:w="2"/><text x="99.6174%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,154 samples, 99.21%)</title><rect x="0.1904%" y="789" width="99.2139%" height="15" fill="rgb(208,207,46)" fg:x="31" fg:w="16154"/><text x="0.4404%" y="799.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (32 samples, 0.20%)</title><rect x="99.2077%" y="773" width="0.1965%" height="15" fill="rgb(234,176,4)" fg:x="16153" fg:w="32"/><text x="99.4577%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (24 samples, 0.15%)</title><rect x="99.2568%" y="757" width="0.1474%" height="15" fill="rgb(230,133,28)" fg:x="16161" fg:w="24"/><text x="99.5068%" y="767.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (4 samples, 0.02%)</title><rect x="99.3797%" y="741" width="0.0246%" height="15" fill="rgb(211,137,40)" fg:x="16181" fg:w="4"/><text x="99.6297%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="99.4104%" y="773" width="0.0123%" height="15" fill="rgb(254,35,13)" fg:x="16186" fg:w="2"/><text x="99.6604%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="99.4472%" y="757" width="0.0123%" height="15" fill="rgb(225,49,51)" fg:x="16192" fg:w="2"/><text x="99.6972%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,170 samples, 99.31%)</title><rect x="0.1781%" y="805" width="99.3121%" height="15" fill="rgb(251,10,15)" fg:x="29" fg:w="16170"/><text x="0.4281%" y="815.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (14 samples, 0.09%)</title><rect x="99.4043%" y="789" width="0.0860%" height="15" fill="rgb(228,207,15)" fg:x="16185" fg:w="14"/><text x="99.6543%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (10 samples, 0.06%)</title><rect x="99.4288%" y="773" width="0.0614%" height="15" fill="rgb(241,99,19)" fg:x="16189" fg:w="10"/><text x="99.6788%" y="783.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (4 samples, 0.02%)</title><rect x="99.4657%" y="757" width="0.0246%" height="15" fill="rgb(207,104,49)" fg:x="16195" fg:w="4"/><text x="99.7157%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="99.5148%" y="773" width="0.0123%" height="15" fill="rgb(234,99,18)" fg:x="16203" fg:w="2"/><text x="99.7648%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="99.5271%" y="773" width="0.0123%" height="15" fill="rgb(213,191,49)" fg:x="16205" fg:w="2"/><text x="99.7771%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,181 samples, 99.38%)</title><rect x="0.1781%" y="821" width="99.3797%" height="15" fill="rgb(210,226,19)" fg:x="29" fg:w="16181"/><text x="0.4281%" y="831.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (11 samples, 0.07%)</title><rect x="99.4902%" y="805" width="0.0676%" height="15" fill="rgb(229,97,18)" fg:x="16199" fg:w="11"/><text x="99.7402%" y="815.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (9 samples, 0.06%)</title><rect x="99.5025%" y="789" width="0.0553%" height="15" fill="rgb(211,167,15)" fg:x="16201" fg:w="9"/><text x="99.7525%" y="799.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="99.5455%" y="773" width="0.0123%" height="15" fill="rgb(210,169,34)" fg:x="16208" fg:w="2"/><text x="99.7955%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="99.5885%" y="789" width="0.0123%" height="15" fill="rgb(241,121,31)" fg:x="16215" fg:w="2"/><text x="99.8385%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="99.5885%" y="773" width="0.0123%" height="15" fill="rgb(232,40,11)" fg:x="16215" fg:w="2"/><text x="99.8385%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.01%)</title><rect x="99.6008%" y="789" width="0.0123%" height="15" fill="rgb(205,86,26)" fg:x="16217" fg:w="2"/><text x="99.8508%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,193 samples, 99.45%)</title><rect x="0.1720%" y="837" width="99.4534%" height="15" fill="rgb(231,126,28)" fg:x="28" fg:w="16193"/><text x="0.4220%" y="847.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (11 samples, 0.07%)</title><rect x="99.5578%" y="821" width="0.0676%" height="15" fill="rgb(219,221,18)" fg:x="16210" fg:w="11"/><text x="99.8078%" y="831.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (9 samples, 0.06%)</title><rect x="99.5701%" y="805" width="0.0553%" height="15" fill="rgb(211,40,0)" fg:x="16212" fg:w="9"/><text x="99.8201%" y="815.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="99.6131%" y="789" width="0.0123%" height="15" fill="rgb(239,85,43)" fg:x="16219" fg:w="2"/><text x="99.8631%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,195 samples, 99.47%)</title><rect x="0.1720%" y="853" width="99.4657%" height="15" fill="rgb(231,55,21)" fg:x="28" fg:w="16195"/><text x="0.4220%" y="863.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (2 samples, 0.01%)</title><rect x="99.6254%" y="837" width="0.0123%" height="15" fill="rgb(225,184,43)" fg:x="16221" fg:w="2"/><text x="99.8754%" y="847.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (2 samples, 0.01%)</title><rect x="99.6254%" y="821" width="0.0123%" height="15" fill="rgb(251,158,41)" fg:x="16221" fg:w="2"/><text x="99.8754%" y="831.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,198 samples, 99.48%)</title><rect x="0.1720%" y="869" width="99.4841%" height="15" fill="rgb(234,159,37)" fg:x="28" fg:w="16198"/><text x="0.4220%" y="879.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.02%)</title><rect x="99.6376%" y="853" width="0.0184%" height="15" fill="rgb(216,204,22)" fg:x="16223" fg:w="3"/><text x="99.8876%" y="863.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku::check_row (3 samples, 0.02%)</title><rect x="99.6376%" y="837" width="0.0184%" height="15" fill="rgb(214,17,3)" fg:x="16223" fg:w="3"/><text x="99.8876%" y="847.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (2 samples, 0.01%)</title><rect x="99.6438%" y="821" width="0.0123%" height="15" fill="rgb(212,111,17)" fg:x="16224" fg:w="2"/><text x="99.8938%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="99.8403%" y="837" width="0.0123%" height="15" fill="rgb(221,157,24)" fg:x="16256" fg:w="2"/><text x="100.0903%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.03%)</title><rect x="99.8342%" y="853" width="0.0307%" height="15" fill="rgb(252,16,13)" fg:x="16255" fg:w="5"/><text x="100.0842%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="99.8526%" y="837" width="0.0123%" height="15" fill="rgb(221,62,2)" fg:x="16258" fg:w="2"/><text x="100.1026%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2 samples, 0.01%)</title><rect x="99.8526%" y="821" width="0.0123%" height="15" fill="rgb(247,87,22)" fg:x="16258" fg:w="2"/><text x="100.1026%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (2 samples, 0.01%)</title><rect x="99.8772%" y="853" width="0.0123%" height="15" fill="rgb(215,73,9)" fg:x="16262" fg:w="2"/><text x="100.1272%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (2 samples, 0.01%)</title><rect x="99.8894%" y="853" width="0.0123%" height="15" fill="rgb(207,175,33)" fg:x="16264" fg:w="2"/><text x="100.1394%" y="863.50"></text></g><g><title>sudoku-solver`__rdl_alloc (2 samples, 0.01%)</title><rect x="99.9140%" y="853" width="0.0123%" height="15" fill="rgb(243,129,54)" fg:x="16268" fg:w="2"/><text x="100.1640%" y="863.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (46 samples, 0.28%)</title><rect x="99.6561%" y="869" width="0.2825%" height="15" fill="rgb(227,119,45)" fg:x="16226" fg:w="46"/><text x="99.9061%" y="879.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (2 samples, 0.01%)</title><rect x="99.9263%" y="853" width="0.0123%" height="15" fill="rgb(205,109,36)" fg:x="16270" fg:w="2"/><text x="100.1763%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.01%)</title><rect x="99.9263%" y="837" width="0.0123%" height="15" fill="rgb(205,6,39)" fg:x="16270" fg:w="2"/><text x="100.1763%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.01%)</title><rect x="99.9263%" y="821" width="0.0123%" height="15" fill="rgb(221,32,16)" fg:x="16270" fg:w="2"/><text x="100.1763%" y="831.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (7 samples, 0.04%)</title><rect x="99.9447%" y="805" width="0.0430%" height="15" fill="rgb(228,144,50)" fg:x="16273" fg:w="7"/><text x="100.1947%" y="815.50"></text></g><g><title>sudoku-solver`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (7 samples, 0.04%)</title><rect x="99.9447%" y="789" width="0.0430%" height="15" fill="rgb(229,201,53)" fg:x="16273" fg:w="7"/><text x="100.1947%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`write (7 samples, 0.04%)</title><rect x="99.9447%" y="773" width="0.0430%" height="15" fill="rgb(249,153,27)" fg:x="16273" fg:w="7"/><text x="100.1947%" y="783.50"></text></g><g><title>all (16,282 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(227,106,25)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="991.50"></text></g><g><title>dyld`start (16,282 samples, 100.00%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(230,65,29)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="975.50">dyld`start</text></g><g><title>sudoku-solver`main (16,282 samples, 100.00%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(221,57,46)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="959.50">sudoku-solver`main</text></g><g><title>sudoku-solver`std::rt::lang_start_internal (16,282 samples, 100.00%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(229,161,17)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="943.50">sudoku-solver`std::rt::lang_start_internal</text></g><g><title>sudoku-solver`std::rt::lang_start::_{{closure}} (16,282 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(222,213,11)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="927.50">sudoku-solver`std::rt::lang_start::_{{closure}}</text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (16,282 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(235,35,13)" fg:x="0" fg:w="16282"/><text x="0.2500%" y="911.50">sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sudoku-solver`sudoku_solver::main (16,279 samples, 99.98%)</title><rect x="0.0184%" y="885" width="99.9816%" height="15" fill="rgb(233,158,34)" fg:x="3" fg:w="16279"/><text x="0.2684%" y="895.50">sudoku-solver`sudoku_solver::main</text></g><g><title>sudoku-solver`sudoku_solver::print_sudoku (10 samples, 0.06%)</title><rect x="99.9386%" y="869" width="0.0614%" height="15" fill="rgb(215,151,48)" fg:x="16272" fg:w="10"/><text x="100.1886%" y="879.50"></text></g><g><title>sudoku-solver`std::io::stdio::_print (10 samples, 0.06%)</title><rect x="99.9386%" y="853" width="0.0614%" height="15" fill="rgb(229,84,14)" fg:x="16272" fg:w="10"/><text x="100.1886%" y="863.50"></text></g><g><title>sudoku-solver`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (10 samples, 0.06%)</title><rect x="99.9386%" y="837" width="0.0614%" height="15" fill="rgb(229,68,14)" fg:x="16272" fg:w="10"/><text x="100.1886%" y="847.50"></text></g><g><title>sudoku-solver`core::fmt::write (10 samples, 0.06%)</title><rect x="99.9386%" y="821" width="0.0614%" height="15" fill="rgb(243,106,26)" fg:x="16272" fg:w="10"/><text x="100.1886%" y="831.50"></text></g><g><title>sudoku-solver`core::fmt::Write::write_char (2 samples, 0.01%)</title><rect x="99.9877%" y="805" width="0.0123%" height="15" fill="rgb(206,45,38)" fg:x="16280" fg:w="2"/><text x="100.2377%" y="815.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.01%)</title><rect x="99.9877%" y="789" width="0.0123%" height="15" fill="rgb(226,6,15)" fg:x="16280" fg:w="2"/><text x="100.2377%" y="799.50"></text></g></svg></svg>