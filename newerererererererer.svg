<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1030" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1013.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1013.00"> </text><svg id="frames" x="10" width="1180" total_samples="29554"><g><title>dyld`start (7 samples, 0.02%)</title><rect x="0.0000%" y="965" width="0.0237%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="975.50"></text></g><g><title>sudoku-solver`main (7 samples, 0.02%)</title><rect x="0.0000%" y="949" width="0.0237%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="959.50"></text></g><g><title>sudoku-solver`std::rt::lang_start_internal (7 samples, 0.02%)</title><rect x="0.0000%" y="933" width="0.0237%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="943.50"></text></g><g><title>sudoku-solver`std::rt::lang_start::_{{closure}} (7 samples, 0.02%)</title><rect x="0.0000%" y="917" width="0.0237%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="7"/><text x="0.2500%" y="927.50"></text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (7 samples, 0.02%)</title><rect x="0.0000%" y="901" width="0.0237%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="7"/><text x="0.2500%" y="911.50"></text></g><g><title>sudoku-solver`sudoku_solver::main (7 samples, 0.02%)</title><rect x="0.0000%" y="885" width="0.0237%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="7"/><text x="0.2500%" y="895.50"></text></g><g><title>sudoku-solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="0.0102%" y="869" width="0.0135%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="4"/><text x="0.2602%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="0.0406%" y="885" width="0.0338%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="10"/><text x="0.2906%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (31 samples, 0.10%)</title><rect x="0.0846%" y="885" width="0.1049%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="31"/><text x="0.3346%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="0.1895%" y="885" width="0.0135%" height="15" fill="rgb(220,122,19)" fg:x="56" fg:w="4"/><text x="0.4395%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="0.2030%" y="885" width="0.0203%" height="15" fill="rgb(250,228,42)" fg:x="60" fg:w="6"/><text x="0.4530%" y="895.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="0.2233%" y="885" width="0.0102%" height="15" fill="rgb(240,193,28)" fg:x="66" fg:w="3"/><text x="0.4733%" y="895.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="0.2369%" y="885" width="0.0102%" height="15" fill="rgb(216,20,37)" fg:x="70" fg:w="3"/><text x="0.4869%" y="895.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (3 samples, 0.01%)</title><rect x="0.2470%" y="885" width="0.0102%" height="15" fill="rgb(206,188,39)" fg:x="73" fg:w="3"/><text x="0.4970%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="2.2163%" y="853" width="0.0169%" height="15" fill="rgb(217,207,13)" fg:x="655" fg:w="5"/><text x="2.4663%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.06%)</title><rect x="2.2467%" y="837" width="0.0609%" height="15" fill="rgb(231,73,38)" fg:x="664" fg:w="18"/><text x="2.4967%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="2.2840%" y="821" width="0.0237%" height="15" fill="rgb(225,20,46)" fg:x="675" fg:w="7"/><text x="2.5340%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.12%)</title><rect x="2.1960%" y="869" width="0.1218%" height="15" fill="rgb(210,31,41)" fg:x="649" fg:w="36"/><text x="2.4460%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.08%)</title><rect x="2.2332%" y="853" width="0.0846%" height="15" fill="rgb(221,200,47)" fg:x="660" fg:w="25"/><text x="2.4832%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="2.3076%" y="837" width="0.0102%" height="15" fill="rgb(226,26,5)" fg:x="682" fg:w="3"/><text x="2.5576%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="2.3212%" y="869" width="0.0102%" height="15" fill="rgb(249,33,26)" fg:x="686" fg:w="3"/><text x="2.5712%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (78 samples, 0.26%)</title><rect x="2.4802%" y="853" width="0.2639%" height="15" fill="rgb(235,183,28)" fg:x="733" fg:w="78"/><text x="2.7302%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="2.7441%" y="853" width="0.0102%" height="15" fill="rgb(221,5,38)" fg:x="811" fg:w="3"/><text x="2.9941%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (128 samples, 0.43%)</title><rect x="2.3313%" y="869" width="0.4331%" height="15" fill="rgb(247,18,42)" fg:x="689" fg:w="128"/><text x="2.5813%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (3 samples, 0.01%)</title><rect x="2.7543%" y="853" width="0.0102%" height="15" fill="rgb(241,131,45)" fg:x="814" fg:w="3"/><text x="3.0043%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (3 samples, 0.01%)</title><rect x="2.7543%" y="837" width="0.0102%" height="15" fill="rgb(249,31,29)" fg:x="814" fg:w="3"/><text x="3.0043%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`malloc (5 samples, 0.02%)</title><rect x="2.7712%" y="869" width="0.0169%" height="15" fill="rgb(225,111,53)" fg:x="819" fg:w="5"/><text x="3.0212%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.06%)</title><rect x="2.7881%" y="869" width="0.0609%" height="15" fill="rgb(238,160,17)" fg:x="824" fg:w="18"/><text x="3.0381%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.07%)</title><rect x="2.8490%" y="869" width="0.0744%" height="15" fill="rgb(214,148,48)" fg:x="842" fg:w="22"/><text x="3.0990%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.04%)</title><rect x="2.9268%" y="869" width="0.0440%" height="15" fill="rgb(232,36,49)" fg:x="865" fg:w="13"/><text x="3.1768%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.04%)</title><rect x="2.9708%" y="869" width="0.0372%" height="15" fill="rgb(209,103,24)" fg:x="878" fg:w="11"/><text x="3.2208%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.08%)</title><rect x="3.0893%" y="837" width="0.0812%" height="15" fill="rgb(229,88,8)" fg:x="913" fg:w="24"/><text x="3.3393%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.08%)</title><rect x="3.0926%" y="821" width="0.0778%" height="15" fill="rgb(213,181,19)" fg:x="914" fg:w="23"/><text x="3.3426%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="3.1332%" y="805" width="0.0372%" height="15" fill="rgb(254,191,54)" fg:x="926" fg:w="11"/><text x="3.3832%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.16%)</title><rect x="3.0317%" y="853" width="0.1556%" height="15" fill="rgb(241,83,37)" fg:x="896" fg:w="46"/><text x="3.2817%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.02%)</title><rect x="3.1705%" y="837" width="0.0169%" height="15" fill="rgb(233,36,39)" fg:x="937" fg:w="5"/><text x="3.4205%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.01%)</title><rect x="3.1739%" y="821" width="0.0135%" height="15" fill="rgb(226,3,54)" fg:x="938" fg:w="4"/><text x="3.4239%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (4 samples, 0.01%)</title><rect x="3.1739%" y="805" width="0.0135%" height="15" fill="rgb(245,192,40)" fg:x="938" fg:w="4"/><text x="3.4239%" y="815.50"></text></g><g><title>sudoku-solver`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56 samples, 0.19%)</title><rect x="3.0081%" y="869" width="0.1895%" height="15" fill="rgb(238,167,29)" fg:x="889" fg:w="56"/><text x="3.2581%" y="879.50"></text></g><g><title>sudoku-solver`__rdl_alloc (7 samples, 0.02%)</title><rect x="3.2043%" y="869" width="0.0237%" height="15" fill="rgb(232,182,51)" fg:x="947" fg:w="7"/><text x="3.4543%" y="879.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (93 samples, 0.31%)</title><rect x="3.2314%" y="869" width="0.3147%" height="15" fill="rgb(231,60,39)" fg:x="955" fg:w="93"/><text x="3.4814%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (107 samples, 0.36%)</title><rect x="3.5664%" y="821" width="0.3620%" height="15" fill="rgb(208,69,12)" fg:x="1054" fg:w="107"/><text x="3.8164%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (110 samples, 0.37%)</title><rect x="3.5596%" y="837" width="0.3722%" height="15" fill="rgb(235,93,37)" fg:x="1052" fg:w="110"/><text x="3.8096%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.03%)</title><rect x="3.9318%" y="837" width="0.0271%" height="15" fill="rgb(213,116,39)" fg:x="1162" fg:w="8"/><text x="4.1818%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (8 samples, 0.03%)</title><rect x="3.9318%" y="821" width="0.0271%" height="15" fill="rgb(222,207,29)" fg:x="1162" fg:w="8"/><text x="4.1818%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (34 samples, 0.12%)</title><rect x="3.9622%" y="805" width="0.1150%" height="15" fill="rgb(206,96,30)" fg:x="1171" fg:w="34"/><text x="4.2122%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`write (9 samples, 0.03%)</title><rect x="4.0807%" y="789" width="0.0305%" height="15" fill="rgb(218,138,4)" fg:x="1206" fg:w="9"/><text x="4.3307%" y="799.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (46 samples, 0.16%)</title><rect x="3.9589%" y="821" width="0.1556%" height="15" fill="rgb(250,191,14)" fg:x="1170" fg:w="46"/><text x="4.2089%" y="831.50"></text></g><g><title>sudoku-solver`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (11 samples, 0.04%)</title><rect x="4.0773%" y="805" width="0.0372%" height="15" fill="rgb(239,60,40)" fg:x="1205" fg:w="11"/><text x="4.3273%" y="815.50"></text></g><g><title>sudoku-solver`std::io::stdio::_print (171 samples, 0.58%)</title><rect x="3.5461%" y="869" width="0.5786%" height="15" fill="rgb(206,27,48)" fg:x="1048" fg:w="171"/><text x="3.7961%" y="879.50"></text></g><g><title>sudoku-solver`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (169 samples, 0.57%)</title><rect x="3.5528%" y="853" width="0.5718%" height="15" fill="rgb(225,35,8)" fg:x="1050" fg:w="169"/><text x="3.8028%" y="863.50"></text></g><g><title>sudoku-solver`core::fmt::write (49 samples, 0.17%)</title><rect x="3.9589%" y="837" width="0.1658%" height="15" fill="rgb(250,213,24)" fg:x="1170" fg:w="49"/><text x="4.2089%" y="847.50"></text></g><g><title>sudoku-solver`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (3 samples, 0.01%)</title><rect x="4.1145%" y="821" width="0.0102%" height="15" fill="rgb(247,123,22)" fg:x="1216" fg:w="3"/><text x="4.3645%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="4.4156%" y="725" width="0.0135%" height="15" fill="rgb(231,138,38)" fg:x="1305" fg:w="4"/><text x="4.6656%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="4.4292%" y="725" width="0.0102%" height="15" fill="rgb(231,145,46)" fg:x="1309" fg:w="3"/><text x="4.6792%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="4.5713%" y="709" width="0.0102%" height="15" fill="rgb(251,118,11)" fg:x="1351" fg:w="3"/><text x="4.8213%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="4.5848%" y="709" width="0.0102%" height="15" fill="rgb(217,147,25)" fg:x="1355" fg:w="3"/><text x="4.8348%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="4.7845%" y="693" width="0.0169%" height="15" fill="rgb(247,81,37)" fg:x="1414" fg:w="5"/><text x="5.0345%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.03%)</title><rect x="4.8014%" y="693" width="0.0271%" height="15" fill="rgb(209,12,38)" fg:x="1419" fg:w="8"/><text x="5.0514%" y="703.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="4.8420%" y="693" width="0.0135%" height="15" fill="rgb(227,1,9)" fg:x="1431" fg:w="4"/><text x="5.0920%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="5.0247%" y="677" width="0.0102%" height="15" fill="rgb(248,47,43)" fg:x="1485" fg:w="3"/><text x="5.2747%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="5.0450%" y="677" width="0.0169%" height="15" fill="rgb(221,10,30)" fg:x="1491" fg:w="5"/><text x="5.2950%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="5.2345%" y="661" width="0.0203%" height="15" fill="rgb(210,229,1)" fg:x="1547" fg:w="6"/><text x="5.4845%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="5.4544%" y="645" width="0.0169%" height="15" fill="rgb(222,148,37)" fg:x="1612" fg:w="5"/><text x="5.7044%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="5.4713%" y="645" width="0.0169%" height="15" fill="rgb(234,67,33)" fg:x="1617" fg:w="5"/><text x="5.7213%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="5.6710%" y="629" width="0.0169%" height="15" fill="rgb(247,98,35)" fg:x="1676" fg:w="5"/><text x="5.9210%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="5.6913%" y="629" width="0.0102%" height="15" fill="rgb(247,138,52)" fg:x="1682" fg:w="3"/><text x="5.9413%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="5.8300%" y="613" width="0.0102%" height="15" fill="rgb(213,79,30)" fg:x="1723" fg:w="3"/><text x="6.0800%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="5.8402%" y="613" width="0.0169%" height="15" fill="rgb(246,177,23)" fg:x="1726" fg:w="5"/><text x="6.0902%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="5.9687%" y="597" width="0.0135%" height="15" fill="rgb(230,62,27)" fg:x="1764" fg:w="4"/><text x="6.2187%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="5.9823%" y="597" width="0.0135%" height="15" fill="rgb(216,154,8)" fg:x="1768" fg:w="4"/><text x="6.2323%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="5.9958%" y="597" width="0.0135%" height="15" fill="rgb(244,35,45)" fg:x="1772" fg:w="4"/><text x="6.2458%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="6.0127%" y="597" width="0.0169%" height="15" fill="rgb(251,115,12)" fg:x="1777" fg:w="5"/><text x="6.2627%" y="607.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="6.0398%" y="597" width="0.0102%" height="15" fill="rgb(240,54,50)" fg:x="1785" fg:w="3"/><text x="6.2898%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="6.1887%" y="581" width="0.0102%" height="15" fill="rgb(233,84,52)" fg:x="1829" fg:w="3"/><text x="6.4387%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="6.1988%" y="581" width="0.0169%" height="15" fill="rgb(207,117,47)" fg:x="1832" fg:w="5"/><text x="6.4488%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="6.4018%" y="565" width="0.0169%" height="15" fill="rgb(249,43,39)" fg:x="1892" fg:w="5"/><text x="6.6518%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="6.4188%" y="565" width="0.0169%" height="15" fill="rgb(209,38,44)" fg:x="1897" fg:w="5"/><text x="6.6688%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.02%)</title><rect x="6.6455%" y="549" width="0.0169%" height="15" fill="rgb(236,212,23)" fg:x="1964" fg:w="5"/><text x="6.8955%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="6.6624%" y="549" width="0.0237%" height="15" fill="rgb(242,79,21)" fg:x="1969" fg:w="7"/><text x="6.9124%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.03%)</title><rect x="6.6861%" y="549" width="0.0271%" height="15" fill="rgb(211,96,35)" fg:x="1976" fg:w="8"/><text x="6.9361%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="6.7131%" y="549" width="0.0102%" height="15" fill="rgb(253,215,40)" fg:x="1984" fg:w="3"/><text x="6.9631%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="6.7233%" y="549" width="0.0102%" height="15" fill="rgb(211,81,21)" fg:x="1987" fg:w="3"/><text x="6.9733%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="6.9331%" y="533" width="0.0135%" height="15" fill="rgb(208,190,38)" fg:x="2049" fg:w="4"/><text x="7.1831%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.02%)</title><rect x="6.9466%" y="533" width="0.0237%" height="15" fill="rgb(235,213,38)" fg:x="2053" fg:w="7"/><text x="7.1966%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="6.9703%" y="533" width="0.0338%" height="15" fill="rgb(237,122,38)" fg:x="2060" fg:w="10"/><text x="7.2203%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="7.0041%" y="533" width="0.0102%" height="15" fill="rgb(244,218,35)" fg:x="2070" fg:w="3"/><text x="7.2541%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="7.0143%" y="533" width="0.0135%" height="15" fill="rgb(240,68,47)" fg:x="2073" fg:w="4"/><text x="7.2643%" y="543.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="7.0312%" y="533" width="0.0135%" height="15" fill="rgb(210,16,53)" fg:x="2078" fg:w="4"/><text x="7.2812%" y="543.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="7.0447%" y="533" width="0.0135%" height="15" fill="rgb(235,124,12)" fg:x="2082" fg:w="4"/><text x="7.2947%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="7.4305%" y="517" width="0.0102%" height="15" fill="rgb(224,169,11)" fg:x="2196" fg:w="3"/><text x="7.6805%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="7.4406%" y="517" width="0.0305%" height="15" fill="rgb(250,166,2)" fg:x="2199" fg:w="9"/><text x="7.6906%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="7.4711%" y="517" width="0.0372%" height="15" fill="rgb(242,216,29)" fg:x="2208" fg:w="11"/><text x="7.7211%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="7.5083%" y="517" width="0.0102%" height="15" fill="rgb(230,116,27)" fg:x="2219" fg:w="3"/><text x="7.7583%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (16 samples, 0.05%)</title><rect x="7.5184%" y="517" width="0.0541%" height="15" fill="rgb(228,99,48)" fg:x="2222" fg:w="16"/><text x="7.7684%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="7.5726%" y="517" width="0.0169%" height="15" fill="rgb(253,11,6)" fg:x="2238" fg:w="5"/><text x="7.8226%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (7 samples, 0.02%)</title><rect x="7.5895%" y="517" width="0.0237%" height="15" fill="rgb(247,143,39)" fg:x="2243" fg:w="7"/><text x="7.8395%" y="527.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="7.6199%" y="517" width="0.0203%" height="15" fill="rgb(236,97,10)" fg:x="2252" fg:w="6"/><text x="7.8699%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="8.1207%" y="501" width="0.0135%" height="15" fill="rgb(233,208,19)" fg:x="2400" fg:w="4"/><text x="8.3707%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.02%)</title><rect x="8.1343%" y="501" width="0.0237%" height="15" fill="rgb(216,164,2)" fg:x="2404" fg:w="7"/><text x="8.3843%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="8.1579%" y="501" width="0.0372%" height="15" fill="rgb(220,129,5)" fg:x="2411" fg:w="11"/><text x="8.4079%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (25 samples, 0.08%)</title><rect x="8.1986%" y="501" width="0.0846%" height="15" fill="rgb(242,17,10)" fg:x="2423" fg:w="25"/><text x="8.4486%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="8.2831%" y="501" width="0.0102%" height="15" fill="rgb(242,107,0)" fg:x="2448" fg:w="3"/><text x="8.5331%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="8.2933%" y="501" width="0.0203%" height="15" fill="rgb(251,28,31)" fg:x="2451" fg:w="6"/><text x="8.5433%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.02%)</title><rect x="8.3136%" y="501" width="0.0169%" height="15" fill="rgb(233,223,10)" fg:x="2457" fg:w="5"/><text x="8.5636%" y="511.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="8.3305%" y="501" width="0.0102%" height="15" fill="rgb(215,21,27)" fg:x="2462" fg:w="3"/><text x="8.5805%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="8.9362%" y="485" width="0.0135%" height="15" fill="rgb(232,23,21)" fg:x="2641" fg:w="4"/><text x="9.1862%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="8.9497%" y="485" width="0.0305%" height="15" fill="rgb(244,5,23)" fg:x="2645" fg:w="9"/><text x="9.1997%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="8.9802%" y="485" width="0.0880%" height="15" fill="rgb(226,81,46)" fg:x="2654" fg:w="26"/><text x="9.2302%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (20 samples, 0.07%)</title><rect x="9.0715%" y="485" width="0.0677%" height="15" fill="rgb(247,70,30)" fg:x="2681" fg:w="20"/><text x="9.3215%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="9.1392%" y="485" width="0.0169%" height="15" fill="rgb(212,68,19)" fg:x="2701" fg:w="5"/><text x="9.3892%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (7 samples, 0.02%)</title><rect x="9.1561%" y="485" width="0.0237%" height="15" fill="rgb(240,187,13)" fg:x="2706" fg:w="7"/><text x="9.4061%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (9 samples, 0.03%)</title><rect x="9.1798%" y="485" width="0.0305%" height="15" fill="rgb(223,113,26)" fg:x="2713" fg:w="9"/><text x="9.4298%" y="495.50"></text></g><g><title>sudoku-solver`__rdl_alloc (7 samples, 0.02%)</title><rect x="9.2103%" y="485" width="0.0237%" height="15" fill="rgb(206,192,2)" fg:x="2722" fg:w="7"/><text x="9.4603%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="9.9107%" y="469" width="0.0169%" height="15" fill="rgb(241,108,4)" fg:x="2929" fg:w="5"/><text x="10.1607%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.04%)</title><rect x="9.9276%" y="469" width="0.0440%" height="15" fill="rgb(247,173,49)" fg:x="2934" fg:w="13"/><text x="10.1776%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="9.9716%" y="469" width="0.0474%" height="15" fill="rgb(224,114,35)" fg:x="2947" fg:w="14"/><text x="10.2216%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="10.0189%" y="469" width="0.0102%" height="15" fill="rgb(245,159,27)" fg:x="2961" fg:w="3"/><text x="10.2689%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (19 samples, 0.06%)</title><rect x="10.0291%" y="469" width="0.0643%" height="15" fill="rgb(245,172,44)" fg:x="2964" fg:w="19"/><text x="10.2791%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="10.0934%" y="469" width="0.0237%" height="15" fill="rgb(236,23,11)" fg:x="2983" fg:w="7"/><text x="10.3434%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (10 samples, 0.03%)</title><rect x="10.1171%" y="469" width="0.0338%" height="15" fill="rgb(205,117,38)" fg:x="2990" fg:w="10"/><text x="10.3671%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="10.1509%" y="469" width="0.0203%" height="15" fill="rgb(237,72,25)" fg:x="3000" fg:w="6"/><text x="10.4009%" y="479.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.02%)</title><rect x="10.1712%" y="469" width="0.0169%" height="15" fill="rgb(244,70,9)" fg:x="3006" fg:w="5"/><text x="10.4212%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="10.8378%" y="453" width="0.0135%" height="15" fill="rgb(217,125,39)" fg:x="3203" fg:w="4"/><text x="11.0878%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="10.8513%" y="453" width="0.0305%" height="15" fill="rgb(235,36,10)" fg:x="3207" fg:w="9"/><text x="11.1013%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="10.8818%" y="453" width="0.0440%" height="15" fill="rgb(251,123,47)" fg:x="3216" fg:w="13"/><text x="11.1318%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (28 samples, 0.09%)</title><rect x="10.9291%" y="453" width="0.0947%" height="15" fill="rgb(221,13,13)" fg:x="3230" fg:w="28"/><text x="11.1791%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="11.0239%" y="453" width="0.0237%" height="15" fill="rgb(238,131,9)" fg:x="3258" fg:w="7"/><text x="11.2739%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.03%)</title><rect x="11.0476%" y="453" width="0.0305%" height="15" fill="rgb(211,50,8)" fg:x="3265" fg:w="9"/><text x="11.2976%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (11 samples, 0.04%)</title><rect x="11.0780%" y="453" width="0.0372%" height="15" fill="rgb(245,182,24)" fg:x="3274" fg:w="11"/><text x="11.3280%" y="463.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="11.1152%" y="453" width="0.0135%" height="15" fill="rgb(242,14,37)" fg:x="3285" fg:w="4"/><text x="11.3652%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="11.8123%" y="437" width="0.0135%" height="15" fill="rgb(246,228,12)" fg:x="3491" fg:w="4"/><text x="12.0623%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.03%)</title><rect x="11.8258%" y="437" width="0.0338%" height="15" fill="rgb(213,55,15)" fg:x="3495" fg:w="10"/><text x="12.0758%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.07%)</title><rect x="11.8596%" y="437" width="0.0711%" height="15" fill="rgb(209,9,3)" fg:x="3505" fg:w="21"/><text x="12.1096%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.05%)</title><rect x="11.9307%" y="437" width="0.0508%" height="15" fill="rgb(230,59,30)" fg:x="3526" fg:w="15"/><text x="12.1807%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="11.9815%" y="437" width="0.0203%" height="15" fill="rgb(209,121,21)" fg:x="3541" fg:w="6"/><text x="12.2315%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (8 samples, 0.03%)</title><rect x="12.0018%" y="437" width="0.0271%" height="15" fill="rgb(220,109,13)" fg:x="3547" fg:w="8"/><text x="12.2518%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (8 samples, 0.03%)</title><rect x="12.0288%" y="437" width="0.0271%" height="15" fill="rgb(232,18,1)" fg:x="3555" fg:w="8"/><text x="12.2788%" y="447.50"></text></g><g><title>sudoku-solver`__rdl_alloc (8 samples, 0.03%)</title><rect x="12.0559%" y="437" width="0.0271%" height="15" fill="rgb(215,41,42)" fg:x="3563" fg:w="8"/><text x="12.3059%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="12.8511%" y="421" width="0.0102%" height="15" fill="rgb(224,123,36)" fg:x="3798" fg:w="3"/><text x="13.1011%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (20 samples, 0.07%)</title><rect x="12.8612%" y="421" width="0.0677%" height="15" fill="rgb(240,125,3)" fg:x="3801" fg:w="20"/><text x="13.1112%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.04%)</title><rect x="12.9289%" y="421" width="0.0406%" height="15" fill="rgb(205,98,50)" fg:x="3821" fg:w="12"/><text x="13.1789%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (29 samples, 0.10%)</title><rect x="12.9695%" y="421" width="0.0981%" height="15" fill="rgb(205,185,37)" fg:x="3833" fg:w="29"/><text x="13.2195%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="13.0676%" y="421" width="0.0305%" height="15" fill="rgb(238,207,15)" fg:x="3862" fg:w="9"/><text x="13.3176%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (16 samples, 0.05%)</title><rect x="13.0981%" y="421" width="0.0541%" height="15" fill="rgb(213,199,42)" fg:x="3871" fg:w="16"/><text x="13.3481%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (11 samples, 0.04%)</title><rect x="13.1522%" y="421" width="0.0372%" height="15" fill="rgb(235,201,11)" fg:x="3887" fg:w="11"/><text x="13.4022%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="14.0286%" y="405" width="0.0102%" height="15" fill="rgb(207,46,11)" fg:x="4146" fg:w="3"/><text x="14.2786%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.03%)</title><rect x="14.0387%" y="405" width="0.0271%" height="15" fill="rgb(241,35,35)" fg:x="4149" fg:w="8"/><text x="14.2887%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.06%)</title><rect x="14.0658%" y="405" width="0.0575%" height="15" fill="rgb(243,32,47)" fg:x="4157" fg:w="17"/><text x="14.3158%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (25 samples, 0.08%)</title><rect x="14.1267%" y="405" width="0.0846%" height="15" fill="rgb(247,202,23)" fg:x="4175" fg:w="25"/><text x="14.3767%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="14.2113%" y="405" width="0.0135%" height="15" fill="rgb(219,102,11)" fg:x="4200" fg:w="4"/><text x="14.4613%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (7 samples, 0.02%)</title><rect x="14.2248%" y="405" width="0.0237%" height="15" fill="rgb(243,110,44)" fg:x="4204" fg:w="7"/><text x="14.4748%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="14.2485%" y="405" width="0.0135%" height="15" fill="rgb(222,74,54)" fg:x="4211" fg:w="4"/><text x="14.4985%" y="415.50"></text></g><g><title>sudoku-solver`__rdl_alloc (12 samples, 0.04%)</title><rect x="14.2620%" y="405" width="0.0406%" height="15" fill="rgb(216,99,12)" fg:x="4215" fg:w="12"/><text x="14.5120%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="14.9151%" y="389" width="0.0102%" height="15" fill="rgb(226,22,26)" fg:x="4408" fg:w="3"/><text x="15.1651%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="14.9252%" y="389" width="0.0203%" height="15" fill="rgb(217,163,10)" fg:x="4411" fg:w="6"/><text x="15.1752%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="14.9455%" y="389" width="0.0440%" height="15" fill="rgb(213,25,53)" fg:x="4417" fg:w="13"/><text x="15.1955%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (16 samples, 0.05%)</title><rect x="14.9929%" y="389" width="0.0541%" height="15" fill="rgb(252,105,26)" fg:x="4431" fg:w="16"/><text x="15.2429%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="15.0470%" y="389" width="0.0237%" height="15" fill="rgb(220,39,43)" fg:x="4447" fg:w="7"/><text x="15.2970%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (11 samples, 0.04%)</title><rect x="15.0707%" y="389" width="0.0372%" height="15" fill="rgb(229,68,48)" fg:x="4454" fg:w="11"/><text x="15.3207%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="15.1079%" y="389" width="0.0135%" height="15" fill="rgb(252,8,32)" fg:x="4465" fg:w="4"/><text x="15.3579%" y="399.50"></text></g><g><title>sudoku-solver`__rdl_alloc (7 samples, 0.02%)</title><rect x="15.1215%" y="389" width="0.0237%" height="15" fill="rgb(223,20,43)" fg:x="4469" fg:w="7"/><text x="15.3715%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="15.7305%" y="373" width="0.0169%" height="15" fill="rgb(229,81,49)" fg:x="4649" fg:w="5"/><text x="15.9805%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="15.7474%" y="373" width="0.0135%" height="15" fill="rgb(236,28,36)" fg:x="4654" fg:w="4"/><text x="15.9974%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.03%)</title><rect x="15.7610%" y="373" width="0.0338%" height="15" fill="rgb(249,185,26)" fg:x="4658" fg:w="10"/><text x="16.0110%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (20 samples, 0.07%)</title><rect x="15.7948%" y="373" width="0.0677%" height="15" fill="rgb(249,174,33)" fg:x="4668" fg:w="20"/><text x="16.0448%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="15.8625%" y="373" width="0.0271%" height="15" fill="rgb(233,201,37)" fg:x="4688" fg:w="8"/><text x="16.1125%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="15.8896%" y="373" width="0.0203%" height="15" fill="rgb(221,78,26)" fg:x="4696" fg:w="6"/><text x="16.1396%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="15.9099%" y="373" width="0.0135%" height="15" fill="rgb(250,127,30)" fg:x="4702" fg:w="4"/><text x="16.1599%" y="383.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="15.9234%" y="373" width="0.0135%" height="15" fill="rgb(230,49,44)" fg:x="4706" fg:w="4"/><text x="16.1734%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="16.3531%" y="357" width="0.0271%" height="15" fill="rgb(229,67,23)" fg:x="4833" fg:w="8"/><text x="16.6031%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (16 samples, 0.05%)</title><rect x="16.3836%" y="357" width="0.0541%" height="15" fill="rgb(249,83,47)" fg:x="4842" fg:w="16"/><text x="16.6336%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="16.4377%" y="357" width="0.0305%" height="15" fill="rgb(215,43,3)" fg:x="4858" fg:w="9"/><text x="16.6877%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="16.4682%" y="357" width="0.0169%" height="15" fill="rgb(238,154,13)" fg:x="4867" fg:w="5"/><text x="16.7182%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (7 samples, 0.02%)</title><rect x="16.4851%" y="357" width="0.0237%" height="15" fill="rgb(219,56,2)" fg:x="4872" fg:w="7"/><text x="16.7351%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="16.8539%" y="341" width="0.0135%" height="15" fill="rgb(233,0,4)" fg:x="4981" fg:w="4"/><text x="17.1039%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="16.8742%" y="341" width="0.0237%" height="15" fill="rgb(235,30,7)" fg:x="4987" fg:w="7"/><text x="17.1242%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.03%)</title><rect x="16.9013%" y="341" width="0.0305%" height="15" fill="rgb(250,79,13)" fg:x="4995" fg:w="9"/><text x="17.1513%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="16.9317%" y="341" width="0.0102%" height="15" fill="rgb(211,146,34)" fg:x="5004" fg:w="3"/><text x="17.1817%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="16.9419%" y="341" width="0.0203%" height="15" fill="rgb(228,22,38)" fg:x="5007" fg:w="6"/><text x="17.1919%" y="351.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="16.9656%" y="341" width="0.0135%" height="15" fill="rgb(235,168,5)" fg:x="5014" fg:w="4"/><text x="17.2156%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="17.1314%" y="325" width="0.0135%" height="15" fill="rgb(221,155,16)" fg:x="5063" fg:w="4"/><text x="17.3814%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="17.1449%" y="325" width="0.0102%" height="15" fill="rgb(215,215,53)" fg:x="5067" fg:w="3"/><text x="17.3949%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.03%)</title><rect x="17.1584%" y="325" width="0.0271%" height="15" fill="rgb(223,4,10)" fg:x="5071" fg:w="8"/><text x="17.4084%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="17.1855%" y="325" width="0.0102%" height="15" fill="rgb(234,103,6)" fg:x="5079" fg:w="3"/><text x="17.4355%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="17.3885%" y="309" width="0.0203%" height="15" fill="rgb(227,97,0)" fg:x="5139" fg:w="6"/><text x="17.6385%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="17.4122%" y="309" width="0.0135%" height="15" fill="rgb(234,150,53)" fg:x="5146" fg:w="4"/><text x="17.6622%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="17.5645%" y="293" width="0.0169%" height="15" fill="rgb(228,201,54)" fg:x="5191" fg:w="5"/><text x="17.8145%" y="303.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="17.5848%" y="293" width="0.0102%" height="15" fill="rgb(222,22,37)" fg:x="5197" fg:w="3"/><text x="17.8348%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="17.6863%" y="277" width="0.0169%" height="15" fill="rgb(237,53,32)" fg:x="5227" fg:w="5"/><text x="17.9363%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="17.8927%" y="245" width="0.0102%" height="15" fill="rgb(233,25,53)" fg:x="5288" fg:w="3"/><text x="18.1427%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="17.9028%" y="245" width="0.0102%" height="15" fill="rgb(210,40,34)" fg:x="5291" fg:w="3"/><text x="18.1528%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (6 samples, 0.02%)</title><rect x="18.3427%" y="37" width="0.0203%" height="15" fill="rgb(241,220,44)" fg:x="5421" fg:w="6"/><text x="18.5927%" y="47.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (7 samples, 0.02%)</title><rect x="18.3427%" y="53" width="0.0237%" height="15" fill="rgb(235,28,35)" fg:x="5421" fg:w="7"/><text x="18.5927%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (9 samples, 0.03%)</title><rect x="18.3427%" y="69" width="0.0305%" height="15" fill="rgb(210,56,17)" fg:x="5421" fg:w="9"/><text x="18.5927%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (18 samples, 0.06%)</title><rect x="18.3292%" y="85" width="0.0609%" height="15" fill="rgb(224,130,29)" fg:x="5417" fg:w="18"/><text x="18.5792%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (5 samples, 0.02%)</title><rect x="18.3731%" y="69" width="0.0169%" height="15" fill="rgb(235,212,8)" fg:x="5430" fg:w="5"/><text x="18.6231%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25 samples, 0.08%)</title><rect x="18.3258%" y="101" width="0.0846%" height="15" fill="rgb(223,33,50)" fg:x="5416" fg:w="25"/><text x="18.5758%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.02%)</title><rect x="18.3901%" y="85" width="0.0203%" height="15" fill="rgb(219,149,13)" fg:x="5435" fg:w="6"/><text x="18.6401%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (44 samples, 0.15%)</title><rect x="18.3224%" y="117" width="0.1489%" height="15" fill="rgb(250,156,29)" fg:x="5415" fg:w="44"/><text x="18.5724%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (18 samples, 0.06%)</title><rect x="18.4104%" y="101" width="0.0609%" height="15" fill="rgb(216,193,19)" fg:x="5441" fg:w="18"/><text x="18.6604%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (78 samples, 0.26%)</title><rect x="18.3055%" y="133" width="0.2639%" height="15" fill="rgb(216,135,14)" fg:x="5410" fg:w="78"/><text x="18.5555%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (29 samples, 0.10%)</title><rect x="18.4713%" y="117" width="0.0981%" height="15" fill="rgb(241,47,5)" fg:x="5459" fg:w="29"/><text x="18.7213%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="18.6337%" y="117" width="0.0135%" height="15" fill="rgb(233,42,35)" fg:x="5507" fg:w="4"/><text x="18.8837%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="18.6337%" y="101" width="0.0135%" height="15" fill="rgb(231,13,6)" fg:x="5507" fg:w="4"/><text x="18.8837%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="18.6371%" y="85" width="0.0102%" height="15" fill="rgb(207,181,40)" fg:x="5508" fg:w="3"/><text x="18.8871%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (105 samples, 0.36%)</title><rect x="18.2953%" y="149" width="0.3553%" height="15" fill="rgb(254,173,49)" fg:x="5407" fg:w="105"/><text x="18.5453%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (24 samples, 0.08%)</title><rect x="18.5694%" y="133" width="0.0812%" height="15" fill="rgb(221,1,38)" fg:x="5488" fg:w="24"/><text x="18.8194%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (151 samples, 0.51%)</title><rect x="18.2716%" y="165" width="0.5109%" height="15" fill="rgb(206,124,46)" fg:x="5400" fg:w="151"/><text x="18.5216%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (39 samples, 0.13%)</title><rect x="18.6506%" y="149" width="0.1320%" height="15" fill="rgb(249,21,11)" fg:x="5512" fg:w="39"/><text x="18.9006%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="18.9551%" y="149" width="0.0169%" height="15" fill="rgb(222,201,40)" fg:x="5602" fg:w="5"/><text x="19.2051%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="18.9619%" y="133" width="0.0102%" height="15" fill="rgb(235,61,29)" fg:x="5604" fg:w="3"/><text x="19.2119%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (225 samples, 0.76%)</title><rect x="18.2175%" y="181" width="0.7613%" height="15" fill="rgb(219,207,3)" fg:x="5384" fg:w="225"/><text x="18.4675%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (58 samples, 0.20%)</title><rect x="18.7826%" y="165" width="0.1963%" height="15" fill="rgb(222,56,46)" fg:x="5551" fg:w="58"/><text x="19.0326%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.04%)</title><rect x="19.2800%" y="165" width="0.0372%" height="15" fill="rgb(239,76,54)" fg:x="5698" fg:w="11"/><text x="19.5300%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="19.2969%" y="149" width="0.0203%" height="15" fill="rgb(231,124,27)" fg:x="5703" fg:w="6"/><text x="19.5469%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="19.3036%" y="133" width="0.0135%" height="15" fill="rgb(249,195,6)" fg:x="5705" fg:w="4"/><text x="19.5536%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="19.3172%" y="165" width="0.0305%" height="15" fill="rgb(237,174,47)" fg:x="5709" fg:w="9"/><text x="19.5672%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (354 samples, 1.20%)</title><rect x="18.1532%" y="197" width="1.1978%" height="15" fill="rgb(206,201,31)" fg:x="5365" fg:w="354"/><text x="18.4032%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (110 samples, 0.37%)</title><rect x="18.9788%" y="181" width="0.3722%" height="15" fill="rgb(231,57,52)" fg:x="5609" fg:w="110"/><text x="19.2288%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.03%)</title><rect x="19.6758%" y="181" width="0.0338%" height="15" fill="rgb(248,177,22)" fg:x="5815" fg:w="10"/><text x="19.9258%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="19.6860%" y="165" width="0.0237%" height="15" fill="rgb(215,211,37)" fg:x="5818" fg:w="7"/><text x="19.9360%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="19.6961%" y="149" width="0.0135%" height="15" fill="rgb(241,128,51)" fg:x="5821" fg:w="4"/><text x="19.9461%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="19.7232%" y="165" width="0.0135%" height="15" fill="rgb(227,165,31)" fg:x="5829" fg:w="4"/><text x="19.9732%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="19.7097%" y="181" width="0.0305%" height="15" fill="rgb(228,167,24)" fg:x="5825" fg:w="9"/><text x="19.9597%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (491 samples, 1.66%)</title><rect x="18.0822%" y="213" width="1.6614%" height="15" fill="rgb(228,143,12)" fg:x="5344" fg:w="491"/><text x="18.3322%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (116 samples, 0.39%)</title><rect x="19.3510%" y="197" width="0.3925%" height="15" fill="rgb(249,149,8)" fg:x="5719" fg:w="116"/><text x="19.6010%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.05%)</title><rect x="20.1326%" y="165" width="0.0541%" height="15" fill="rgb(243,35,44)" fg:x="5950" fg:w="16"/><text x="20.3826%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="20.1732%" y="149" width="0.0135%" height="15" fill="rgb(246,89,9)" fg:x="5962" fg:w="4"/><text x="20.4232%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (26 samples, 0.09%)</title><rect x="20.1056%" y="197" width="0.0880%" height="15" fill="rgb(233,213,13)" fg:x="5942" fg:w="26"/><text x="20.3556%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.07%)</title><rect x="20.1191%" y="181" width="0.0744%" height="15" fill="rgb(233,141,41)" fg:x="5946" fg:w="22"/><text x="20.3691%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.05%)</title><rect x="20.1969%" y="197" width="0.0541%" height="15" fill="rgb(239,167,4)" fg:x="5969" fg:w="16"/><text x="20.4469%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="20.2240%" y="181" width="0.0271%" height="15" fill="rgb(209,217,16)" fg:x="5977" fg:w="8"/><text x="20.4740%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (675 samples, 2.28%)</title><rect x="17.9806%" y="229" width="2.2840%" height="15" fill="rgb(219,88,35)" fg:x="5314" fg:w="675"/><text x="18.2306%" y="239.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (154 samples, 0.52%)</title><rect x="19.7435%" y="213" width="0.5211%" height="15" fill="rgb(220,193,23)" fg:x="5835" fg:w="154"/><text x="19.9935%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="20.2544%" y="197" width="0.0102%" height="15" fill="rgb(230,90,52)" fg:x="5986" fg:w="3"/><text x="20.5044%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="20.6131%" y="181" width="0.0271%" height="15" fill="rgb(252,106,19)" fg:x="6092" fg:w="8"/><text x="20.8631%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.04%)</title><rect x="20.5996%" y="213" width="0.0440%" height="15" fill="rgb(206,74,20)" fg:x="6088" fg:w="13"/><text x="20.8496%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.03%)</title><rect x="20.6097%" y="197" width="0.0338%" height="15" fill="rgb(230,138,44)" fg:x="6091" fg:w="10"/><text x="20.8597%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="20.6470%" y="213" width="0.0237%" height="15" fill="rgb(235,182,43)" fg:x="6102" fg:w="7"/><text x="20.8970%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="20.6537%" y="197" width="0.0169%" height="15" fill="rgb(242,16,51)" fg:x="6104" fg:w="5"/><text x="20.9037%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (820 samples, 2.77%)</title><rect x="17.9164%" y="245" width="2.7746%" height="15" fill="rgb(248,9,4)" fg:x="5295" fg:w="820"/><text x="18.1664%" y="255.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (126 samples, 0.43%)</title><rect x="20.2646%" y="229" width="0.4263%" height="15" fill="rgb(210,31,22)" fg:x="5989" fg:w="126"/><text x="20.5146%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="20.6740%" y="213" width="0.0169%" height="15" fill="rgb(239,54,39)" fg:x="6110" fg:w="5"/><text x="20.9240%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.05%)</title><rect x="21.0496%" y="229" width="0.0541%" height="15" fill="rgb(230,99,41)" fg:x="6221" fg:w="16"/><text x="21.2996%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="21.0733%" y="213" width="0.0305%" height="15" fill="rgb(253,106,12)" fg:x="6228" fg:w="9"/><text x="21.3233%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="21.0834%" y="197" width="0.0203%" height="15" fill="rgb(213,46,41)" fg:x="6231" fg:w="6"/><text x="21.3334%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="21.1037%" y="229" width="0.0271%" height="15" fill="rgb(215,133,35)" fg:x="6237" fg:w="8"/><text x="21.3537%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="21.1173%" y="213" width="0.0135%" height="15" fill="rgb(213,28,5)" fg:x="6241" fg:w="4"/><text x="21.3673%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (983 samples, 3.33%)</title><rect x="17.8182%" y="261" width="3.3261%" height="15" fill="rgb(215,77,49)" fg:x="5266" fg:w="983"/><text x="18.0682%" y="271.50">sud..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (134 samples, 0.45%)</title><rect x="20.6909%" y="245" width="0.4534%" height="15" fill="rgb(248,100,22)" fg:x="6115" fg:w="134"/><text x="20.9409%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="21.1308%" y="229" width="0.0135%" height="15" fill="rgb(208,67,9)" fg:x="6245" fg:w="4"/><text x="21.3808%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.04%)</title><rect x="21.5470%" y="245" width="0.0406%" height="15" fill="rgb(219,133,21)" fg:x="6368" fg:w="12"/><text x="21.7970%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="21.5571%" y="229" width="0.0305%" height="15" fill="rgb(246,46,29)" fg:x="6371" fg:w="9"/><text x="21.8071%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="21.5605%" y="213" width="0.0271%" height="15" fill="rgb(246,185,52)" fg:x="6372" fg:w="8"/><text x="21.8105%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="21.5775%" y="197" width="0.0102%" height="15" fill="rgb(252,136,11)" fg:x="6377" fg:w="3"/><text x="21.8275%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="21.6045%" y="229" width="0.0135%" height="15" fill="rgb(219,138,53)" fg:x="6385" fg:w="4"/><text x="21.8545%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="21.5910%" y="245" width="0.0305%" height="15" fill="rgb(211,51,23)" fg:x="6381" fg:w="9"/><text x="21.8410%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,158 samples, 3.92%)</title><rect x="17.7133%" y="277" width="3.9183%" height="15" fill="rgb(247,221,28)" fg:x="5235" fg:w="1158"/><text x="17.9633%" y="287.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (144 samples, 0.49%)</title><rect x="21.1443%" y="261" width="0.4872%" height="15" fill="rgb(251,222,45)" fg:x="6249" fg:w="144"/><text x="21.3943%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.04%)</title><rect x="22.0816%" y="229" width="0.0406%" height="15" fill="rgb(217,162,53)" fg:x="6526" fg:w="12"/><text x="22.3316%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="22.1121%" y="213" width="0.0102%" height="15" fill="rgb(229,93,14)" fg:x="6535" fg:w="3"/><text x="22.3621%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.07%)</title><rect x="22.0579%" y="261" width="0.0677%" height="15" fill="rgb(209,67,49)" fg:x="6519" fg:w="20"/><text x="22.3079%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.05%)</title><rect x="22.0782%" y="245" width="0.0474%" height="15" fill="rgb(213,87,29)" fg:x="6525" fg:w="14"/><text x="22.3282%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="22.1527%" y="245" width="0.0271%" height="15" fill="rgb(205,151,52)" fg:x="6547" fg:w="8"/><text x="22.4027%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.06%)</title><rect x="22.1290%" y="261" width="0.0575%" height="15" fill="rgb(253,215,39)" fg:x="6540" fg:w="17"/><text x="22.3790%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,363 samples, 4.61%)</title><rect x="17.5949%" y="293" width="4.6119%" height="15" fill="rgb(221,220,41)" fg:x="5200" fg:w="1363"/><text x="17.8449%" y="303.50">sudok..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (170 samples, 0.58%)</title><rect x="21.6316%" y="277" width="0.5752%" height="15" fill="rgb(218,133,21)" fg:x="6393" fg:w="170"/><text x="21.8816%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="22.1899%" y="261" width="0.0169%" height="15" fill="rgb(221,193,43)" fg:x="6558" fg:w="5"/><text x="22.4399%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.05%)</title><rect x="22.8091%" y="245" width="0.0474%" height="15" fill="rgb(240,128,52)" fg:x="6741" fg:w="14"/><text x="23.0591%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="22.8362%" y="229" width="0.0203%" height="15" fill="rgb(253,114,12)" fg:x="6749" fg:w="6"/><text x="23.0862%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.07%)</title><rect x="22.7922%" y="277" width="0.0711%" height="15" fill="rgb(215,223,47)" fg:x="6736" fg:w="21"/><text x="23.0422%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.06%)</title><rect x="22.7989%" y="261" width="0.0643%" height="15" fill="rgb(248,225,23)" fg:x="6738" fg:w="19"/><text x="23.0489%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.06%)</title><rect x="22.8632%" y="277" width="0.0575%" height="15" fill="rgb(250,108,0)" fg:x="6757" fg:w="17"/><text x="23.1132%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="22.8802%" y="261" width="0.0406%" height="15" fill="rgb(228,208,7)" fg:x="6762" fg:w="12"/><text x="23.1302%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="22.9275%" y="277" width="0.0271%" height="15" fill="rgb(244,45,10)" fg:x="6776" fg:w="8"/><text x="23.1775%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,630 samples, 5.52%)</title><rect x="17.4426%" y="309" width="5.5153%" height="15" fill="rgb(207,125,25)" fg:x="5155" fg:w="1630"/><text x="17.6926%" y="319.50">sudoku-..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (222 samples, 0.75%)</title><rect x="22.2068%" y="293" width="0.7512%" height="15" fill="rgb(210,195,18)" fg:x="6563" fg:w="222"/><text x="22.4568%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.03%)</title><rect x="23.8580%" y="261" width="0.0338%" height="15" fill="rgb(249,80,12)" fg:x="7051" fg:w="10"/><text x="24.1080%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="23.8783%" y="245" width="0.0135%" height="15" fill="rgb(221,65,9)" fg:x="7057" fg:w="4"/><text x="24.1283%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.08%)</title><rect x="23.8174%" y="293" width="0.0812%" height="15" fill="rgb(235,49,36)" fg:x="7039" fg:w="24"/><text x="24.0674%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.05%)</title><rect x="23.8445%" y="277" width="0.0541%" height="15" fill="rgb(225,32,20)" fg:x="7047" fg:w="16"/><text x="24.0945%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.07%)</title><rect x="23.9528%" y="277" width="0.0711%" height="15" fill="rgb(215,141,46)" fg:x="7079" fg:w="21"/><text x="24.2028%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.12%)</title><rect x="23.9054%" y="293" width="0.1218%" height="15" fill="rgb(250,160,47)" fg:x="7065" fg:w="36"/><text x="24.1554%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="24.0272%" y="293" width="0.0102%" height="15" fill="rgb(216,222,40)" fg:x="7101" fg:w="3"/><text x="24.2772%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="24.0374%" y="293" width="0.0271%" height="15" fill="rgb(234,217,39)" fg:x="7104" fg:w="8"/><text x="24.2874%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,026 samples, 6.86%)</title><rect x="17.2126%" y="325" width="6.8552%" height="15" fill="rgb(207,178,40)" fg:x="5087" fg:w="2026"/><text x="17.4626%" y="335.50">sudoku-so..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (328 samples, 1.11%)</title><rect x="22.9580%" y="309" width="1.1098%" height="15" fill="rgb(221,136,13)" fg:x="6785" fg:w="328"/><text x="23.2080%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.07%)</title><rect x="25.2250%" y="277" width="0.0677%" height="15" fill="rgb(249,199,10)" fg:x="7455" fg:w="20"/><text x="25.4750%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="25.2724%" y="261" width="0.0203%" height="15" fill="rgb(249,222,13)" fg:x="7469" fg:w="6"/><text x="25.5224%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.13%)</title><rect x="25.1709%" y="309" width="0.1320%" height="15" fill="rgb(244,185,38)" fg:x="7439" fg:w="39"/><text x="25.4209%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.09%)</title><rect x="25.2081%" y="293" width="0.0947%" height="15" fill="rgb(236,202,9)" fg:x="7450" fg:w="28"/><text x="25.4581%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="25.2927%" y="277" width="0.0102%" height="15" fill="rgb(250,229,37)" fg:x="7475" fg:w="3"/><text x="25.5427%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.09%)</title><rect x="25.3096%" y="309" width="0.0947%" height="15" fill="rgb(206,174,23)" fg:x="7480" fg:w="28"/><text x="25.5596%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="25.3671%" y="293" width="0.0372%" height="15" fill="rgb(211,33,43)" fg:x="7497" fg:w="11"/><text x="25.6171%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="25.4043%" y="309" width="0.0305%" height="15" fill="rgb(245,58,50)" fg:x="7508" fg:w="9"/><text x="25.6543%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,502 samples, 8.47%)</title><rect x="16.9791%" y="341" width="8.4659%" height="15" fill="rgb(244,68,36)" fg:x="5018" fg:w="2502"/><text x="17.2291%" y="351.50">sudoku-solve..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (407 samples, 1.38%)</title><rect x="24.0678%" y="325" width="1.3771%" height="15" fill="rgb(232,229,15)" fg:x="7113" fg:w="407"/><text x="24.3178%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="25.4348%" y="309" width="0.0102%" height="15" fill="rgb(254,30,23)" fg:x="7517" fg:w="3"/><text x="25.6848%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.09%)</title><rect x="27.2281%" y="293" width="0.0880%" height="15" fill="rgb(235,160,14)" fg:x="8047" fg:w="26"/><text x="27.4781%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.03%)</title><rect x="27.2823%" y="277" width="0.0338%" height="15" fill="rgb(212,155,44)" fg:x="8063" fg:w="10"/><text x="27.5323%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (64 samples, 0.22%)</title><rect x="27.1131%" y="325" width="0.2166%" height="15" fill="rgb(226,2,50)" fg:x="8013" fg:w="64"/><text x="27.3631%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.12%)</title><rect x="27.2078%" y="309" width="0.1218%" height="15" fill="rgb(234,177,6)" fg:x="8041" fg:w="36"/><text x="27.4578%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="27.3161%" y="293" width="0.0135%" height="15" fill="rgb(217,24,9)" fg:x="8073" fg:w="4"/><text x="27.5661%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.13%)</title><rect x="27.3364%" y="325" width="0.1252%" height="15" fill="rgb(220,13,46)" fg:x="8079" fg:w="37"/><text x="27.5864%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.05%)</title><rect x="27.4142%" y="309" width="0.0474%" height="15" fill="rgb(239,221,27)" fg:x="8102" fg:w="14"/><text x="27.6642%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="27.4616%" y="325" width="0.0135%" height="15" fill="rgb(222,198,25)" fg:x="8116" fg:w="4"/><text x="27.7116%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.05%)</title><rect x="27.4751%" y="325" width="0.0541%" height="15" fill="rgb(211,99,13)" fg:x="8120" fg:w="16"/><text x="27.7251%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3,258 samples, 11.02%)</title><rect x="16.5121%" y="357" width="11.0239%" height="15" fill="rgb(232,111,31)" fg:x="4880" fg:w="3258"/><text x="16.7621%" y="367.50">sudoku-solver`su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (618 samples, 2.09%)</title><rect x="25.4449%" y="341" width="2.0911%" height="15" fill="rgb(245,82,37)" fg:x="7520" fg:w="618"/><text x="25.6949%" y="351.50">s..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="29.9215%" y="325" width="0.0102%" height="15" fill="rgb(227,149,46)" fg:x="8843" fg:w="3"/><text x="30.1715%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (44 samples, 0.15%)</title><rect x="29.9553%" y="309" width="0.1489%" height="15" fill="rgb(218,36,50)" fg:x="8853" fg:w="44"/><text x="30.2053%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.07%)</title><rect x="30.0365%" y="293" width="0.0677%" height="15" fill="rgb(226,80,48)" fg:x="8877" fg:w="20"/><text x="30.2865%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.28%)</title><rect x="29.8403%" y="341" width="0.2842%" height="15" fill="rgb(238,224,15)" fg:x="8819" fg:w="84"/><text x="30.0903%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (57 samples, 0.19%)</title><rect x="29.9317%" y="325" width="0.1929%" height="15" fill="rgb(241,136,10)" fg:x="8846" fg:w="57"/><text x="30.1817%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="30.1042%" y="309" width="0.0203%" height="15" fill="rgb(208,32,45)" fg:x="8897" fg:w="6"/><text x="30.3542%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="30.1245%" y="341" width="0.0237%" height="15" fill="rgb(207,135,9)" fg:x="8903" fg:w="7"/><text x="30.3745%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (35 samples, 0.12%)</title><rect x="30.2599%" y="325" width="0.1184%" height="15" fill="rgb(206,86,44)" fg:x="8943" fg:w="35"/><text x="30.5099%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (70 samples, 0.24%)</title><rect x="30.1482%" y="341" width="0.2369%" height="15" fill="rgb(245,177,15)" fg:x="8910" fg:w="70"/><text x="30.3982%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="30.3851%" y="341" width="0.0169%" height="15" fill="rgb(206,64,50)" fg:x="8980" fg:w="5"/><text x="30.6351%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (21 samples, 0.07%)</title><rect x="30.4020%" y="341" width="0.0711%" height="15" fill="rgb(234,36,40)" fg:x="8985" fg:w="21"/><text x="30.6520%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="30.4730%" y="341" width="0.0203%" height="15" fill="rgb(213,64,8)" fg:x="9006" fg:w="6"/><text x="30.7230%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4,306 samples, 14.57%)</title><rect x="15.9369%" y="373" width="14.5699%" height="15" fill="rgb(210,75,36)" fg:x="4710" fg:w="4306"/><text x="16.1869%" y="383.50">sudoku-solver`sudoku_s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (878 samples, 2.97%)</title><rect x="27.5360%" y="357" width="2.9708%" height="15" fill="rgb(229,88,21)" fg:x="8138" fg:w="878"/><text x="27.7860%" y="367.50">sud..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="30.4933%" y="341" width="0.0135%" height="15" fill="rgb(252,204,47)" fg:x="9012" fg:w="4"/><text x="30.7433%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="33.8634%" y="341" width="0.0237%" height="15" fill="rgb(208,77,27)" fg:x="10008" fg:w="7"/><text x="34.1134%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (83 samples, 0.28%)</title><rect x="33.9413%" y="325" width="0.2808%" height="15" fill="rgb(221,76,26)" fg:x="10031" fg:w="83"/><text x="34.1913%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.08%)</title><rect x="34.1443%" y="309" width="0.0778%" height="15" fill="rgb(225,139,18)" fg:x="10091" fg:w="23"/><text x="34.3943%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (151 samples, 0.51%)</title><rect x="33.7281%" y="357" width="0.5109%" height="15" fill="rgb(230,137,11)" fg:x="9968" fg:w="151"/><text x="33.9781%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (104 samples, 0.35%)</title><rect x="33.8871%" y="341" width="0.3519%" height="15" fill="rgb(212,28,1)" fg:x="10015" fg:w="104"/><text x="34.1371%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="34.2221%" y="325" width="0.0169%" height="15" fill="rgb(248,164,17)" fg:x="10114" fg:w="5"/><text x="34.4721%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.03%)</title><rect x="34.2390%" y="357" width="0.0271%" height="15" fill="rgb(222,171,42)" fg:x="10119" fg:w="8"/><text x="34.4890%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (43 samples, 0.15%)</title><rect x="34.4116%" y="341" width="0.1455%" height="15" fill="rgb(243,84,45)" fg:x="10170" fg:w="43"/><text x="34.6616%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (88 samples, 0.30%)</title><rect x="34.2661%" y="357" width="0.2978%" height="15" fill="rgb(252,49,23)" fg:x="10127" fg:w="88"/><text x="34.5161%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="34.5638%" y="357" width="0.0237%" height="15" fill="rgb(215,19,7)" fg:x="10215" fg:w="7"/><text x="34.8138%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (19 samples, 0.06%)</title><rect x="34.5875%" y="357" width="0.0643%" height="15" fill="rgb(238,81,41)" fg:x="10222" fg:w="19"/><text x="34.8375%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="34.6518%" y="357" width="0.0102%" height="15" fill="rgb(210,199,37)" fg:x="10241" fg:w="3"/><text x="34.9018%" y="367.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (5,779 samples, 19.55%)</title><rect x="15.1485%" y="389" width="19.5540%" height="15" fill="rgb(244,192,49)" fg:x="4477" fg:w="5779"/><text x="15.3985%" y="399.50">sudoku-solver`sudoku_solver::ba..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,240 samples, 4.20%)</title><rect x="30.5069%" y="373" width="4.1957%" height="15" fill="rgb(226,211,11)" fg:x="9016" fg:w="1240"/><text x="30.7569%" y="383.50">sudok..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (12 samples, 0.04%)</title><rect x="34.6620%" y="357" width="0.0406%" height="15" fill="rgb(236,162,54)" fg:x="10244" fg:w="12"/><text x="34.9120%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="38.8069%" y="357" width="0.0169%" height="15" fill="rgb(220,229,9)" fg:x="11469" fg:w="5"/><text x="39.0569%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (93 samples, 0.31%)</title><rect x="38.8915%" y="341" width="0.3147%" height="15" fill="rgb(250,87,22)" fg:x="11494" fg:w="93"/><text x="39.1415%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (24 samples, 0.08%)</title><rect x="39.1250%" y="325" width="0.0812%" height="15" fill="rgb(239,43,17)" fg:x="11563" fg:w="24"/><text x="39.3750%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (175 samples, 0.59%)</title><rect x="38.6580%" y="373" width="0.5921%" height="15" fill="rgb(231,177,25)" fg:x="11425" fg:w="175"/><text x="38.9080%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (126 samples, 0.43%)</title><rect x="38.8238%" y="357" width="0.4263%" height="15" fill="rgb(219,179,1)" fg:x="11474" fg:w="126"/><text x="39.0738%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.04%)</title><rect x="39.2062%" y="341" width="0.0440%" height="15" fill="rgb(238,219,53)" fg:x="11587" fg:w="13"/><text x="39.4562%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="39.2502%" y="373" width="0.0203%" height="15" fill="rgb(232,167,36)" fg:x="11600" fg:w="6"/><text x="39.5002%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (52 samples, 0.18%)</title><rect x="39.4667%" y="357" width="0.1759%" height="15" fill="rgb(244,19,51)" fg:x="11664" fg:w="52"/><text x="39.7167%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (114 samples, 0.39%)</title><rect x="39.2705%" y="373" width="0.3857%" height="15" fill="rgb(224,6,22)" fg:x="11606" fg:w="114"/><text x="39.5205%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="39.6427%" y="357" width="0.0135%" height="15" fill="rgb(224,145,5)" fg:x="11716" fg:w="4"/><text x="39.8927%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="39.6562%" y="373" width="0.0102%" height="15" fill="rgb(234,130,49)" fg:x="11720" fg:w="3"/><text x="39.9062%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (37 samples, 0.13%)</title><rect x="39.6664%" y="373" width="0.1252%" height="15" fill="rgb(254,6,2)" fg:x="11723" fg:w="37"/><text x="39.9164%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (7,543 samples, 25.52%)</title><rect x="14.3026%" y="405" width="25.5228%" height="15" fill="rgb(208,96,46)" fg:x="4227" fg:w="7543"/><text x="14.5526%" y="415.50">sudoku-solver`sudoku_solver::backtraking:..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,514 samples, 5.12%)</title><rect x="34.7026%" y="389" width="5.1228%" height="15" fill="rgb(239,3,39)" fg:x="10256" fg:w="1514"/><text x="34.9526%" y="399.50">sudoku..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.03%)</title><rect x="39.7983%" y="373" width="0.0271%" height="15" fill="rgb(233,210,1)" fg:x="11762" fg:w="8"/><text x="40.0483%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="44.1903%" y="373" width="0.0169%" height="15" fill="rgb(244,137,37)" fg:x="13060" fg:w="5"/><text x="44.4403%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (95 samples, 0.32%)</title><rect x="44.2512%" y="357" width="0.3214%" height="15" fill="rgb(240,136,2)" fg:x="13078" fg:w="95"/><text x="44.5012%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.09%)</title><rect x="44.4847%" y="341" width="0.0880%" height="15" fill="rgb(239,18,37)" fg:x="13147" fg:w="26"/><text x="44.7347%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (177 samples, 0.60%)</title><rect x="44.0211%" y="389" width="0.5989%" height="15" fill="rgb(218,185,22)" fg:x="13010" fg:w="177"/><text x="44.2711%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (122 samples, 0.41%)</title><rect x="44.2072%" y="373" width="0.4128%" height="15" fill="rgb(225,218,4)" fg:x="13065" fg:w="122"/><text x="44.4572%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="44.5726%" y="357" width="0.0474%" height="15" fill="rgb(230,182,32)" fg:x="13173" fg:w="14"/><text x="44.8226%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.03%)</title><rect x="44.6200%" y="389" width="0.0338%" height="15" fill="rgb(242,56,43)" fg:x="13187" fg:w="10"/><text x="44.8700%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (76 samples, 0.26%)</title><rect x="44.9415%" y="373" width="0.2572%" height="15" fill="rgb(233,99,24)" fg:x="13282" fg:w="76"/><text x="45.1915%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (165 samples, 0.56%)</title><rect x="44.6539%" y="389" width="0.5583%" height="15" fill="rgb(234,209,42)" fg:x="13197" fg:w="165"/><text x="44.9039%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="45.1986%" y="373" width="0.0135%" height="15" fill="rgb(227,7,12)" fg:x="13358" fg:w="4"/><text x="45.4486%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="45.2122%" y="389" width="0.0203%" height="15" fill="rgb(245,203,43)" fg:x="13362" fg:w="6"/><text x="45.4622%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (37 samples, 0.13%)</title><rect x="45.2325%" y="389" width="0.1252%" height="15" fill="rgb(238,205,33)" fg:x="13368" fg:w="37"/><text x="45.4825%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="45.3577%" y="389" width="0.0102%" height="15" fill="rgb(231,56,7)" fg:x="13405" fg:w="3"/><text x="45.6077%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (9,523 samples, 32.22%)</title><rect x="13.1996%" y="421" width="32.2224%" height="15" fill="rgb(244,186,29)" fg:x="3901" fg:w="9523"/><text x="13.4496%" y="431.50">sudoku-solver`sudoku_solver::backtraking::backtrakin..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,654 samples, 5.60%)</title><rect x="39.8254%" y="405" width="5.5965%" height="15" fill="rgb(234,111,31)" fg:x="11770" fg:w="1654"/><text x="40.0754%" y="415.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (16 samples, 0.05%)</title><rect x="45.3678%" y="389" width="0.0541%" height="15" fill="rgb(241,149,10)" fg:x="13408" fg:w="16"/><text x="45.6178%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="49.5804%" y="389" width="0.0135%" height="15" fill="rgb(249,206,44)" fg:x="14653" fg:w="4"/><text x="49.8304%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (100 samples, 0.34%)</title><rect x="49.6752%" y="373" width="0.3384%" height="15" fill="rgb(251,153,30)" fg:x="14681" fg:w="100"/><text x="49.9252%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (37 samples, 0.13%)</title><rect x="49.8883%" y="357" width="0.1252%" height="15" fill="rgb(239,152,38)" fg:x="14744" fg:w="37"/><text x="50.1383%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (192 samples, 0.65%)</title><rect x="49.4112%" y="405" width="0.6497%" height="15" fill="rgb(249,139,47)" fg:x="14603" fg:w="192"/><text x="49.6612%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (138 samples, 0.47%)</title><rect x="49.5940%" y="389" width="0.4669%" height="15" fill="rgb(244,64,35)" fg:x="14657" fg:w="138"/><text x="49.8440%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="50.0135%" y="373" width="0.0474%" height="15" fill="rgb(216,46,15)" fg:x="14781" fg:w="14"/><text x="50.2635%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.04%)</title><rect x="50.0609%" y="405" width="0.0372%" height="15" fill="rgb(250,74,19)" fg:x="14795" fg:w="11"/><text x="50.3109%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (70 samples, 0.24%)</title><rect x="50.3620%" y="389" width="0.2369%" height="15" fill="rgb(249,42,33)" fg:x="14884" fg:w="70"/><text x="50.6120%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (151 samples, 0.51%)</title><rect x="50.0981%" y="405" width="0.5109%" height="15" fill="rgb(242,149,17)" fg:x="14806" fg:w="151"/><text x="50.3481%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="50.5989%" y="389" width="0.0102%" height="15" fill="rgb(244,29,21)" fg:x="14954" fg:w="3"/><text x="50.8489%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.03%)</title><rect x="50.6091%" y="405" width="0.0338%" height="15" fill="rgb(220,130,37)" fg:x="14957" fg:w="10"/><text x="50.8591%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (37 samples, 0.13%)</title><rect x="50.6429%" y="405" width="0.1252%" height="15" fill="rgb(211,67,2)" fg:x="14967" fg:w="37"/><text x="50.8929%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="50.7681%" y="405" width="0.0203%" height="15" fill="rgb(235,68,52)" fg:x="15004" fg:w="6"/><text x="51.0181%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (11,449 samples, 38.74%)</title><rect x="12.0830%" y="437" width="38.7393%" height="15" fill="rgb(246,142,3)" fg:x="3571" fg:w="11449"/><text x="12.3330%" y="447.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,596 samples, 5.40%)</title><rect x="45.4219%" y="421" width="5.4003%" height="15" fill="rgb(241,25,7)" fg:x="13424" fg:w="1596"/><text x="45.6719%" y="431.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.03%)</title><rect x="50.7884%" y="405" width="0.0338%" height="15" fill="rgb(242,119,39)" fg:x="15010" fg:w="10"/><text x="51.0384%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="54.8826%" y="405" width="0.0237%" height="15" fill="rgb(241,98,45)" fg:x="16220" fg:w="7"/><text x="55.1326%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (108 samples, 0.37%)</title><rect x="55.0010%" y="389" width="0.3654%" height="15" fill="rgb(254,28,30)" fg:x="16255" fg:w="108"/><text x="55.2510%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.10%)</title><rect x="55.2683%" y="373" width="0.0981%" height="15" fill="rgb(241,142,54)" fg:x="16334" fg:w="29"/><text x="55.5183%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (206 samples, 0.70%)</title><rect x="54.7134%" y="421" width="0.6970%" height="15" fill="rgb(222,85,15)" fg:x="16170" fg:w="206"/><text x="54.9634%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (149 samples, 0.50%)</title><rect x="54.9063%" y="405" width="0.5042%" height="15" fill="rgb(210,85,47)" fg:x="16227" fg:w="149"/><text x="55.1563%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.04%)</title><rect x="55.3664%" y="389" width="0.0440%" height="15" fill="rgb(224,206,25)" fg:x="16363" fg:w="13"/><text x="55.6164%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.03%)</title><rect x="55.4104%" y="421" width="0.0305%" height="15" fill="rgb(243,201,19)" fg:x="16376" fg:w="9"/><text x="55.6604%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (60 samples, 0.20%)</title><rect x="55.7183%" y="405" width="0.2030%" height="15" fill="rgb(236,59,4)" fg:x="16467" fg:w="60"/><text x="55.9683%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (146 samples, 0.49%)</title><rect x="55.4409%" y="421" width="0.4940%" height="15" fill="rgb(254,179,45)" fg:x="16385" fg:w="146"/><text x="55.6909%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="55.9214%" y="405" width="0.0135%" height="15" fill="rgb(226,14,10)" fg:x="16527" fg:w="4"/><text x="56.1714%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="55.9349%" y="421" width="0.0169%" height="15" fill="rgb(244,27,41)" fg:x="16531" fg:w="5"/><text x="56.1849%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (44 samples, 0.15%)</title><rect x="55.9518%" y="421" width="0.1489%" height="15" fill="rgb(235,35,32)" fg:x="16536" fg:w="44"/><text x="56.2018%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="56.1007%" y="421" width="0.0102%" height="15" fill="rgb(218,68,31)" fg:x="16580" fg:w="3"/><text x="56.3507%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (13,299 samples, 45.00%)</title><rect x="11.1355%" y="453" width="44.9990%" height="15" fill="rgb(207,120,37)" fg:x="3291" fg:w="13299"/><text x="11.3855%" y="463.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,570 samples, 5.31%)</title><rect x="50.8222%" y="437" width="5.3123%" height="15" fill="rgb(227,98,0)" fg:x="15020" fg:w="1570"/><text x="51.0722%" y="447.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="56.1108%" y="421" width="0.0237%" height="15" fill="rgb(207,7,3)" fg:x="16583" fg:w="7"/><text x="56.3608%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="60.3539%" y="421" width="0.0102%" height="15" fill="rgb(206,98,19)" fg:x="17837" fg:w="3"/><text x="60.6039%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (95 samples, 0.32%)</title><rect x="60.4284%" y="405" width="0.3214%" height="15" fill="rgb(217,5,26)" fg:x="17859" fg:w="95"/><text x="60.6784%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (24 samples, 0.08%)</title><rect x="60.6686%" y="389" width="0.0812%" height="15" fill="rgb(235,190,38)" fg:x="17930" fg:w="24"/><text x="60.9186%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (177 samples, 0.60%)</title><rect x="60.1814%" y="437" width="0.5989%" height="15" fill="rgb(247,86,24)" fg:x="17786" fg:w="177"/><text x="60.4314%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (123 samples, 0.42%)</title><rect x="60.3641%" y="421" width="0.4162%" height="15" fill="rgb(205,101,16)" fg:x="17840" fg:w="123"/><text x="60.6141%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.03%)</title><rect x="60.7498%" y="405" width="0.0305%" height="15" fill="rgb(246,168,33)" fg:x="17954" fg:w="9"/><text x="60.9998%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.04%)</title><rect x="60.7803%" y="437" width="0.0406%" height="15" fill="rgb(231,114,1)" fg:x="17963" fg:w="12"/><text x="61.0303%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (69 samples, 0.23%)</title><rect x="61.0611%" y="421" width="0.2335%" height="15" fill="rgb(207,184,53)" fg:x="18046" fg:w="69"/><text x="61.3111%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (144 samples, 0.49%)</title><rect x="60.8209%" y="437" width="0.4872%" height="15" fill="rgb(224,95,51)" fg:x="17975" fg:w="144"/><text x="61.0709%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="61.2946%" y="421" width="0.0135%" height="15" fill="rgb(212,188,45)" fg:x="18115" fg:w="4"/><text x="61.5446%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.03%)</title><rect x="61.3081%" y="437" width="0.0338%" height="15" fill="rgb(223,154,38)" fg:x="18119" fg:w="10"/><text x="61.5581%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (39 samples, 0.13%)</title><rect x="61.3420%" y="437" width="0.1320%" height="15" fill="rgb(251,22,52)" fg:x="18129" fg:w="39"/><text x="61.5920%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="61.4739%" y="437" width="0.0135%" height="15" fill="rgb(229,209,22)" fg:x="18168" fg:w="4"/><text x="61.7239%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,169 samples, 51.33%)</title><rect x="10.1881%" y="469" width="51.3264%" height="15" fill="rgb(234,138,34)" fg:x="3011" fg:w="15169"/><text x="10.4381%" y="479.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,590 samples, 5.38%)</title><rect x="56.1345%" y="453" width="5.3800%" height="15" fill="rgb(212,95,11)" fg:x="16590" fg:w="1590"/><text x="56.3845%" y="463.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.03%)</title><rect x="61.4874%" y="437" width="0.0271%" height="15" fill="rgb(240,179,47)" fg:x="18172" fg:w="8"/><text x="61.7374%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="65.6629%" y="437" width="0.0203%" height="15" fill="rgb(240,163,11)" fg:x="19406" fg:w="6"/><text x="65.9129%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (85 samples, 0.29%)</title><rect x="65.7508%" y="421" width="0.2876%" height="15" fill="rgb(236,37,12)" fg:x="19432" fg:w="85"/><text x="66.0008%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.09%)</title><rect x="65.9471%" y="405" width="0.0914%" height="15" fill="rgb(232,164,16)" fg:x="19490" fg:w="27"/><text x="66.1971%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (171 samples, 0.58%)</title><rect x="65.4937%" y="453" width="0.5786%" height="15" fill="rgb(244,205,15)" fg:x="19356" fg:w="171"/><text x="65.7437%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (115 samples, 0.39%)</title><rect x="65.6832%" y="437" width="0.3891%" height="15" fill="rgb(223,117,47)" fg:x="19412" fg:w="115"/><text x="65.9332%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.03%)</title><rect x="66.0384%" y="421" width="0.0338%" height="15" fill="rgb(244,107,35)" fg:x="19517" fg:w="10"/><text x="66.2884%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (19 samples, 0.06%)</title><rect x="66.0723%" y="453" width="0.0643%" height="15" fill="rgb(205,140,8)" fg:x="19527" fg:w="19"/><text x="66.3223%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (62 samples, 0.21%)</title><rect x="66.3903%" y="437" width="0.2098%" height="15" fill="rgb(228,84,46)" fg:x="19621" fg:w="62"/><text x="66.6403%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (141 samples, 0.48%)</title><rect x="66.1366%" y="453" width="0.4771%" height="15" fill="rgb(254,188,9)" fg:x="19546" fg:w="141"/><text x="66.3866%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="66.6001%" y="437" width="0.0135%" height="15" fill="rgb(206,112,54)" fg:x="19683" fg:w="4"/><text x="66.8501%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="66.6137%" y="453" width="0.0203%" height="15" fill="rgb(216,84,49)" fg:x="19687" fg:w="6"/><text x="66.8637%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (46 samples, 0.16%)</title><rect x="66.6340%" y="453" width="0.1556%" height="15" fill="rgb(214,194,35)" fg:x="19693" fg:w="46"/><text x="66.8840%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (17,022 samples, 57.60%)</title><rect x="9.2407%" y="485" width="57.5963%" height="15" fill="rgb(249,28,3)" fg:x="2731" fg:w="17022"/><text x="9.4907%" y="495.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,573 samples, 5.32%)</title><rect x="61.5145%" y="469" width="5.3225%" height="15" fill="rgb(222,56,52)" fg:x="18180" fg:w="1573"/><text x="61.7645%" y="479.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (12 samples, 0.04%)</title><rect x="66.7964%" y="453" width="0.0406%" height="15" fill="rgb(245,217,50)" fg:x="19741" fg:w="12"/><text x="67.0464%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="70.5860%" y="453" width="0.0102%" height="15" fill="rgb(213,201,24)" fg:x="20861" fg:w="3"/><text x="70.8360%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (89 samples, 0.30%)</title><rect x="70.6977%" y="437" width="0.3011%" height="15" fill="rgb(248,116,28)" fg:x="20894" fg:w="89"/><text x="70.9477%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.05%)</title><rect x="70.9447%" y="421" width="0.0541%" height="15" fill="rgb(219,72,43)" fg:x="20967" fg:w="16"/><text x="71.1947%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (195 samples, 0.66%)</title><rect x="70.3763%" y="469" width="0.6598%" height="15" fill="rgb(209,138,14)" fg:x="20799" fg:w="195"/><text x="70.6263%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (130 samples, 0.44%)</title><rect x="70.5962%" y="453" width="0.4399%" height="15" fill="rgb(222,18,33)" fg:x="20864" fg:w="130"/><text x="70.8462%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="70.9988%" y="437" width="0.0372%" height="15" fill="rgb(213,199,7)" fg:x="20983" fg:w="11"/><text x="71.2488%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="71.0361%" y="469" width="0.0203%" height="15" fill="rgb(250,110,10)" fg:x="20994" fg:w="6"/><text x="71.2861%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (148 samples, 0.50%)</title><rect x="71.0564%" y="469" width="0.5008%" height="15" fill="rgb(248,123,6)" fg:x="21000" fg:w="148"/><text x="71.3064%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (65 samples, 0.22%)</title><rect x="71.3372%" y="453" width="0.2199%" height="15" fill="rgb(206,91,31)" fg:x="21083" fg:w="65"/><text x="71.5872%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="71.5571%" y="469" width="0.0237%" height="15" fill="rgb(211,154,13)" fg:x="21148" fg:w="7"/><text x="71.8071%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (33 samples, 0.11%)</title><rect x="71.5808%" y="469" width="0.1117%" height="15" fill="rgb(225,148,7)" fg:x="21155" fg:w="33"/><text x="71.8308%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="71.6925%" y="469" width="0.0135%" height="15" fill="rgb(220,160,43)" fg:x="21188" fg:w="4"/><text x="71.9425%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (18,736 samples, 63.40%)</title><rect x="8.3440%" y="501" width="63.3958%" height="15" fill="rgb(213,52,39)" fg:x="2466" fg:w="18736"/><text x="8.5940%" y="511.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,449 samples, 4.90%)</title><rect x="66.8370%" y="485" width="4.9029%" height="15" fill="rgb(243,137,7)" fg:x="19753" fg:w="1449"/><text x="67.0870%" y="495.50">sudoku..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.03%)</title><rect x="71.7060%" y="469" width="0.0338%" height="15" fill="rgb(230,79,13)" fg:x="21192" fg:w="10"/><text x="71.9560%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="74.7445%" y="469" width="0.0169%" height="15" fill="rgb(247,105,23)" fg:x="22090" fg:w="5"/><text x="74.9945%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (70 samples, 0.24%)</title><rect x="74.8156%" y="453" width="0.2369%" height="15" fill="rgb(223,179,41)" fg:x="22111" fg:w="70"/><text x="75.0656%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="75.0051%" y="437" width="0.0474%" height="15" fill="rgb(218,9,34)" fg:x="22167" fg:w="14"/><text x="75.2551%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (144 samples, 0.49%)</title><rect x="74.6092%" y="485" width="0.4872%" height="15" fill="rgb(222,106,8)" fg:x="22050" fg:w="144"/><text x="74.8592%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 0.33%)</title><rect x="74.7615%" y="469" width="0.3350%" height="15" fill="rgb(211,220,0)" fg:x="22095" fg:w="99"/><text x="75.0115%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.04%)</title><rect x="75.0524%" y="453" width="0.0440%" height="15" fill="rgb(229,52,16)" fg:x="22181" fg:w="13"/><text x="75.3024%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="75.0964%" y="485" width="0.0135%" height="15" fill="rgb(212,155,18)" fg:x="22194" fg:w="4"/><text x="75.3464%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (50 samples, 0.17%)</title><rect x="75.2656%" y="469" width="0.1692%" height="15" fill="rgb(242,21,14)" fg:x="22244" fg:w="50"/><text x="75.5156%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (99 samples, 0.33%)</title><rect x="75.1100%" y="485" width="0.3350%" height="15" fill="rgb(222,19,48)" fg:x="22198" fg:w="99"/><text x="75.3600%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="75.4348%" y="469" width="0.0102%" height="15" fill="rgb(232,45,27)" fg:x="22294" fg:w="3"/><text x="75.6848%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (40 samples, 0.14%)</title><rect x="75.4517%" y="485" width="0.1353%" height="15" fill="rgb(249,103,42)" fg:x="22299" fg:w="40"/><text x="75.7017%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (20,087 samples, 67.97%)</title><rect x="7.6436%" y="517" width="67.9671%" height="15" fill="rgb(246,81,33)" fg:x="2259" fg:w="20087"/><text x="7.8936%" y="527.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,144 samples, 3.87%)</title><rect x="71.7399%" y="501" width="3.8709%" height="15" fill="rgb(252,33,42)" fg:x="21202" fg:w="1144"/><text x="71.9899%" y="511.50">sudo..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="75.5904%" y="485" width="0.0203%" height="15" fill="rgb(209,212,41)" fg:x="22340" fg:w="6"/><text x="75.8404%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="77.7458%" y="485" width="0.0203%" height="15" fill="rgb(207,154,6)" fg:x="22977" fg:w="6"/><text x="77.9958%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (59 samples, 0.20%)</title><rect x="77.8236%" y="469" width="0.1996%" height="15" fill="rgb(223,64,47)" fg:x="23000" fg:w="59"/><text x="78.0736%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="77.9827%" y="453" width="0.0406%" height="15" fill="rgb(211,161,38)" fg:x="23047" fg:w="12"/><text x="78.2327%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (116 samples, 0.39%)</title><rect x="77.6612%" y="501" width="0.3925%" height="15" fill="rgb(219,138,40)" fg:x="22952" fg:w="116"/><text x="77.9112%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (85 samples, 0.29%)</title><rect x="77.7661%" y="485" width="0.2876%" height="15" fill="rgb(241,228,46)" fg:x="22983" fg:w="85"/><text x="78.0161%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.03%)</title><rect x="78.0233%" y="469" width="0.0305%" height="15" fill="rgb(223,209,38)" fg:x="23059" fg:w="9"/><text x="78.2733%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="78.0537%" y="501" width="0.0169%" height="15" fill="rgb(236,164,45)" fg:x="23068" fg:w="5"/><text x="78.3037%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (34 samples, 0.12%)</title><rect x="78.2195%" y="485" width="0.1150%" height="15" fill="rgb(231,15,5)" fg:x="23117" fg:w="34"/><text x="78.4695%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (79 samples, 0.27%)</title><rect x="78.0707%" y="501" width="0.2673%" height="15" fill="rgb(252,35,15)" fg:x="23073" fg:w="79"/><text x="78.3207%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.09%)</title><rect x="78.3413%" y="501" width="0.0914%" height="15" fill="rgb(248,181,18)" fg:x="23153" fg:w="27"/><text x="78.5913%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (21,098 samples, 71.39%)</title><rect x="7.0583%" y="533" width="71.3880%" height="15" fill="rgb(233,39,42)" fg:x="2086" fg:w="21098"/><text x="7.3083%" y="543.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (838 samples, 2.84%)</title><rect x="75.6107%" y="517" width="2.8355%" height="15" fill="rgb(238,110,33)" fg:x="22346" fg:w="838"/><text x="75.8607%" y="527.50">su..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="78.4327%" y="501" width="0.0135%" height="15" fill="rgb(233,195,10)" fg:x="23180" fg:w="4"/><text x="78.6827%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.13%)</title><rect x="79.8234%" y="485" width="0.1252%" height="15" fill="rgb(254,105,3)" fg:x="23591" fg:w="37"/><text x="80.0734%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="79.9249%" y="469" width="0.0237%" height="15" fill="rgb(221,225,9)" fg:x="23621" fg:w="7"/><text x="80.1749%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (68 samples, 0.23%)</title><rect x="79.7320%" y="517" width="0.2301%" height="15" fill="rgb(224,227,45)" fg:x="23564" fg:w="68"/><text x="79.9820%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.17%)</title><rect x="79.7895%" y="501" width="0.1726%" height="15" fill="rgb(229,198,43)" fg:x="23581" fg:w="51"/><text x="80.0395%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="79.9486%" y="485" width="0.0135%" height="15" fill="rgb(206,209,35)" fg:x="23628" fg:w="4"/><text x="80.1986%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="79.9621%" y="517" width="0.0102%" height="15" fill="rgb(245,195,53)" fg:x="23632" fg:w="3"/><text x="80.2121%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (25 samples, 0.08%)</title><rect x="80.0501%" y="501" width="0.0846%" height="15" fill="rgb(240,92,26)" fg:x="23658" fg:w="25"/><text x="80.3001%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.17%)</title><rect x="79.9723%" y="517" width="0.1726%" height="15" fill="rgb(207,40,23)" fg:x="23635" fg:w="51"/><text x="80.2223%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="80.1347%" y="501" width="0.0102%" height="15" fill="rgb(223,111,35)" fg:x="23683" fg:w="3"/><text x="80.3847%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (20 samples, 0.07%)</title><rect x="80.1482%" y="517" width="0.0677%" height="15" fill="rgb(229,147,28)" fg:x="23687" fg:w="20"/><text x="80.3982%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (21,717 samples, 73.48%)</title><rect x="6.7402%" y="549" width="73.4824%" height="15" fill="rgb(211,29,28)" fg:x="1992" fg:w="21717"/><text x="6.9902%" y="559.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (525 samples, 1.78%)</title><rect x="78.4462%" y="533" width="1.7764%" height="15" fill="rgb(228,72,33)" fg:x="23184" fg:w="525"/><text x="78.6962%" y="543.50">s..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="81.1024%" y="517" width="0.0102%" height="15" fill="rgb(205,214,31)" fg:x="23969" fg:w="3"/><text x="81.3524%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.15%)</title><rect x="81.0719%" y="533" width="0.1455%" height="15" fill="rgb(224,111,15)" fg:x="23960" fg:w="43"/><text x="81.3219%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.10%)</title><rect x="81.1125%" y="517" width="0.1049%" height="15" fill="rgb(253,21,26)" fg:x="23972" fg:w="31"/><text x="81.3625%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.10%)</title><rect x="81.1159%" y="501" width="0.1015%" height="15" fill="rgb(245,139,43)" fg:x="23973" fg:w="30"/><text x="81.3659%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="81.1937%" y="485" width="0.0237%" height="15" fill="rgb(252,170,7)" fg:x="23996" fg:w="7"/><text x="81.4437%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (24 samples, 0.08%)</title><rect x="81.3122%" y="517" width="0.0812%" height="15" fill="rgb(231,118,14)" fg:x="24031" fg:w="24"/><text x="81.5622%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.17%)</title><rect x="81.2242%" y="533" width="0.1726%" height="15" fill="rgb(238,83,0)" fg:x="24005" fg:w="51"/><text x="81.4742%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.04%)</title><rect x="81.4035%" y="533" width="0.0440%" height="15" fill="rgb(221,39,39)" fg:x="24058" fg:w="13"/><text x="81.6535%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (22,164 samples, 74.99%)</title><rect x="6.4560%" y="565" width="74.9949%" height="15" fill="rgb(222,119,46)" fg:x="1908" fg:w="22164"/><text x="6.7060%" y="575.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (363 samples, 1.23%)</title><rect x="80.2226%" y="549" width="1.2283%" height="15" fill="rgb(222,165,49)" fg:x="23709" fg:w="363"/><text x="80.4726%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.07%)</title><rect x="82.2055%" y="517" width="0.0744%" height="15" fill="rgb(219,113,52)" fg:x="24295" fg:w="22"/><text x="82.4555%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="82.2528%" y="501" width="0.0271%" height="15" fill="rgb(214,7,15)" fg:x="24309" fg:w="8"/><text x="82.5028%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.15%)</title><rect x="82.1445%" y="549" width="0.1523%" height="15" fill="rgb(235,32,4)" fg:x="24277" fg:w="45"/><text x="82.3945%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.10%)</title><rect x="82.1919%" y="533" width="0.1049%" height="15" fill="rgb(238,90,54)" fg:x="24291" fg:w="31"/><text x="82.4419%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="82.2799%" y="517" width="0.0169%" height="15" fill="rgb(213,208,19)" fg:x="24317" fg:w="5"/><text x="82.5299%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="82.2968%" y="549" width="0.0102%" height="15" fill="rgb(233,156,4)" fg:x="24322" fg:w="3"/><text x="82.5468%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.04%)</title><rect x="82.3577%" y="533" width="0.0440%" height="15" fill="rgb(207,194,5)" fg:x="24340" fg:w="13"/><text x="82.6077%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.10%)</title><rect x="82.3070%" y="549" width="0.0981%" height="15" fill="rgb(206,111,30)" fg:x="24325" fg:w="29"/><text x="82.5570%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.04%)</title><rect x="82.4085%" y="549" width="0.0406%" height="15" fill="rgb(243,70,54)" fg:x="24355" fg:w="12"/><text x="82.6585%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (22,528 samples, 76.23%)</title><rect x="6.2293%" y="581" width="76.2266%" height="15" fill="rgb(242,28,8)" fg:x="1841" fg:w="22528"/><text x="6.4793%" y="591.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (297 samples, 1.00%)</title><rect x="81.4509%" y="565" width="1.0049%" height="15" fill="rgb(219,106,18)" fg:x="24072" fg:w="297"/><text x="81.7009%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="83.2239%" y="549" width="0.0135%" height="15" fill="rgb(244,222,10)" fg:x="24596" fg:w="4"/><text x="83.4739%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.05%)</title><rect x="83.2442%" y="533" width="0.0541%" height="15" fill="rgb(236,179,52)" fg:x="24602" fg:w="16"/><text x="83.4942%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="83.2848%" y="517" width="0.0135%" height="15" fill="rgb(213,23,39)" fg:x="24614" fg:w="4"/><text x="83.5348%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.13%)</title><rect x="83.1799%" y="565" width="0.1252%" height="15" fill="rgb(238,48,10)" fg:x="24583" fg:w="37"/><text x="83.4299%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.07%)</title><rect x="83.2375%" y="549" width="0.0677%" height="15" fill="rgb(251,196,23)" fg:x="24600" fg:w="20"/><text x="83.4875%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="83.3491%" y="549" width="0.0406%" height="15" fill="rgb(250,152,24)" fg:x="24633" fg:w="12"/><text x="83.5991%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.09%)</title><rect x="83.3051%" y="565" width="0.0914%" height="15" fill="rgb(209,150,17)" fg:x="24620" fg:w="27"/><text x="83.5551%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="83.3965%" y="565" width="0.0237%" height="15" fill="rgb(234,202,34)" fg:x="24647" fg:w="7"/><text x="83.6465%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (22,869 samples, 77.38%)</title><rect x="6.0533%" y="597" width="77.3804%" height="15" fill="rgb(253,148,53)" fg:x="1789" fg:w="22869"/><text x="6.3033%" y="607.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (289 samples, 0.98%)</title><rect x="82.4558%" y="581" width="0.9779%" height="15" fill="rgb(218,129,16)" fg:x="24369" fg:w="289"/><text x="82.7058%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="83.4236%" y="565" width="0.0102%" height="15" fill="rgb(216,85,19)" fg:x="24655" fg:w="3"/><text x="83.6736%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.08%)</title><rect x="84.1646%" y="549" width="0.0846%" height="15" fill="rgb(235,228,7)" fg:x="24874" fg:w="25"/><text x="84.4146%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="84.2255%" y="533" width="0.0237%" height="15" fill="rgb(245,175,0)" fg:x="24892" fg:w="7"/><text x="84.4755%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.14%)</title><rect x="84.1240%" y="581" width="0.1353%" height="15" fill="rgb(208,168,36)" fg:x="24862" fg:w="40"/><text x="84.3740%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.11%)</title><rect x="84.1477%" y="565" width="0.1117%" height="15" fill="rgb(246,171,24)" fg:x="24869" fg:w="33"/><text x="84.3977%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="84.2492%" y="549" width="0.0102%" height="15" fill="rgb(215,142,24)" fg:x="24899" fg:w="3"/><text x="84.4992%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.10%)</title><rect x="84.2627%" y="581" width="0.0981%" height="15" fill="rgb(250,187,7)" fg:x="24903" fg:w="29"/><text x="84.5127%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.06%)</title><rect x="84.3033%" y="565" width="0.0575%" height="15" fill="rgb(228,66,33)" fg:x="24915" fg:w="17"/><text x="84.5533%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="84.3642%" y="581" width="0.0203%" height="15" fill="rgb(234,215,21)" fg:x="24933" fg:w="6"/><text x="84.6142%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,208 samples, 78.53%)</title><rect x="5.8672%" y="613" width="78.5274%" height="15" fill="rgb(222,191,20)" fg:x="1734" fg:w="23208"/><text x="6.1172%" y="623.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (284 samples, 0.96%)</title><rect x="83.4337%" y="597" width="0.9610%" height="15" fill="rgb(245,79,54)" fg:x="24658" fg:w="284"/><text x="83.6837%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="84.3845%" y="581" width="0.0102%" height="15" fill="rgb(240,10,37)" fg:x="24939" fg:w="3"/><text x="84.6345%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.07%)</title><rect x="85.0951%" y="565" width="0.0677%" height="15" fill="rgb(214,192,32)" fg:x="25149" fg:w="20"/><text x="85.3451%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="85.1255%" y="549" width="0.0372%" height="15" fill="rgb(209,36,54)" fg:x="25158" fg:w="11"/><text x="85.3755%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.12%)</title><rect x="85.0511%" y="597" width="0.1218%" height="15" fill="rgb(220,10,11)" fg:x="25136" fg:w="36"/><text x="85.3011%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.09%)</title><rect x="85.0815%" y="581" width="0.0914%" height="15" fill="rgb(221,106,17)" fg:x="25145" fg:w="27"/><text x="85.3315%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="85.1628%" y="565" width="0.0102%" height="15" fill="rgb(251,142,44)" fg:x="25169" fg:w="3"/><text x="85.4128%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="85.1729%" y="597" width="0.0102%" height="15" fill="rgb(238,13,15)" fg:x="25172" fg:w="3"/><text x="85.4229%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="85.1831%" y="597" width="0.0778%" height="15" fill="rgb(208,107,27)" fg:x="25175" fg:w="23"/><text x="85.4331%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="85.2338%" y="581" width="0.0271%" height="15" fill="rgb(205,136,37)" fg:x="25190" fg:w="8"/><text x="85.4838%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="85.2609%" y="597" width="0.0135%" height="15" fill="rgb(250,205,27)" fg:x="25198" fg:w="4"/><text x="85.5109%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.04%)</title><rect x="85.2744%" y="597" width="0.0372%" height="15" fill="rgb(210,80,43)" fg:x="25202" fg:w="11"/><text x="85.5244%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,523 samples, 79.59%)</title><rect x="5.7217%" y="629" width="79.5933%" height="15" fill="rgb(247,160,36)" fg:x="1691" fg:w="23523"/><text x="5.9717%" y="639.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (272 samples, 0.92%)</title><rect x="84.3947%" y="613" width="0.9203%" height="15" fill="rgb(234,13,49)" fg:x="24942" fg:w="272"/><text x="84.6447%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.05%)</title><rect x="85.9545%" y="581" width="0.0474%" height="15" fill="rgb(234,122,0)" fg:x="25403" fg:w="14"/><text x="86.2045%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="85.9748%" y="565" width="0.0271%" height="15" fill="rgb(207,146,38)" fg:x="25409" fg:w="8"/><text x="86.2248%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.11%)</title><rect x="85.9038%" y="613" width="0.1083%" height="15" fill="rgb(207,177,25)" fg:x="25388" fg:w="32"/><text x="86.1538%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.07%)</title><rect x="85.9376%" y="597" width="0.0744%" height="15" fill="rgb(211,178,42)" fg:x="25398" fg:w="22"/><text x="86.1876%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="86.0019%" y="581" width="0.0102%" height="15" fill="rgb(230,69,54)" fg:x="25417" fg:w="3"/><text x="86.2519%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="86.0120%" y="613" width="0.0135%" height="15" fill="rgb(214,135,41)" fg:x="25420" fg:w="4"/><text x="86.2620%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.03%)</title><rect x="86.0763%" y="597" width="0.0338%" height="15" fill="rgb(237,67,25)" fg:x="25439" fg:w="10"/><text x="86.3263%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="86.0256%" y="613" width="0.0880%" height="15" fill="rgb(222,189,50)" fg:x="25424" fg:w="26"/><text x="86.2756%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="86.1136%" y="613" width="0.0135%" height="15" fill="rgb(245,148,34)" fg:x="25450" fg:w="4"/><text x="86.3636%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="86.1271%" y="613" width="0.0135%" height="15" fill="rgb(222,29,6)" fg:x="25454" fg:w="4"/><text x="86.3771%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,831 samples, 80.64%)</title><rect x="5.5119%" y="645" width="80.6354%" height="15" fill="rgb(221,189,43)" fg:x="1629" fg:w="23831"/><text x="5.7619%" y="655.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (246 samples, 0.83%)</title><rect x="85.3150%" y="629" width="0.8324%" height="15" fill="rgb(207,36,27)" fg:x="25214" fg:w="246"/><text x="85.5650%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.06%)</title><rect x="86.9358%" y="597" width="0.0643%" height="15" fill="rgb(217,90,24)" fg:x="25693" fg:w="19"/><text x="87.1858%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="86.9798%" y="581" width="0.0203%" height="15" fill="rgb(224,66,35)" fg:x="25706" fg:w="6"/><text x="87.2298%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.14%)</title><rect x="86.8749%" y="629" width="0.1387%" height="15" fill="rgb(221,13,50)" fg:x="25675" fg:w="41"/><text x="87.1249%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.09%)</title><rect x="86.9189%" y="613" width="0.0947%" height="15" fill="rgb(236,68,49)" fg:x="25688" fg:w="28"/><text x="87.1689%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="87.0001%" y="597" width="0.0135%" height="15" fill="rgb(229,146,28)" fg:x="25712" fg:w="4"/><text x="87.2501%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.09%)</title><rect x="87.0204%" y="629" width="0.0947%" height="15" fill="rgb(225,31,38)" fg:x="25718" fg:w="28"/><text x="87.2704%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="87.0779%" y="613" width="0.0372%" height="15" fill="rgb(250,208,3)" fg:x="25735" fg:w="11"/><text x="87.3279%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,199 samples, 81.88%)</title><rect x="5.2717%" y="661" width="81.8806%" height="15" fill="rgb(246,54,23)" fg:x="1558" fg:w="24199"/><text x="5.5217%" y="671.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (297 samples, 1.00%)</title><rect x="86.1474%" y="645" width="1.0049%" height="15" fill="rgb(243,76,11)" fg:x="25460" fg:w="297"/><text x="86.3974%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="87.1219%" y="629" width="0.0305%" height="15" fill="rgb(245,21,50)" fg:x="25748" fg:w="9"/><text x="87.3719%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.11%)</title><rect x="87.9610%" y="645" width="0.1117%" height="15" fill="rgb(228,9,43)" fg:x="25996" fg:w="33"/><text x="88.2110%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.08%)</title><rect x="87.9949%" y="629" width="0.0778%" height="15" fill="rgb(208,100,47)" fg:x="26006" fg:w="23"/><text x="88.2449%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.06%)</title><rect x="88.0152%" y="613" width="0.0575%" height="15" fill="rgb(232,26,8)" fg:x="26012" fg:w="17"/><text x="88.2652%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="88.0591%" y="597" width="0.0135%" height="15" fill="rgb(216,166,38)" fg:x="26025" fg:w="4"/><text x="88.3091%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.06%)</title><rect x="88.0727%" y="645" width="0.0643%" height="15" fill="rgb(251,202,51)" fg:x="26029" fg:w="19"/><text x="88.3227%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="88.0997%" y="629" width="0.0372%" height="15" fill="rgb(254,216,34)" fg:x="26037" fg:w="11"/><text x="88.3497%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="88.1370%" y="645" width="0.0102%" height="15" fill="rgb(251,32,27)" fg:x="26048" fg:w="3"/><text x="88.3870%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="88.1471%" y="645" width="0.0237%" height="15" fill="rgb(208,127,28)" fg:x="26051" fg:w="7"/><text x="88.3971%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,560 samples, 83.10%)</title><rect x="5.0755%" y="677" width="83.1021%" height="15" fill="rgb(224,137,22)" fg:x="1500" fg:w="24560"/><text x="5.3255%" y="687.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (303 samples, 1.03%)</title><rect x="87.1523%" y="661" width="1.0252%" height="15" fill="rgb(254,70,32)" fg:x="25757" fg:w="303"/><text x="87.4023%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.08%)</title><rect x="89.0607%" y="629" width="0.0778%" height="15" fill="rgb(229,75,37)" fg:x="26321" fg:w="23"/><text x="89.3107%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="89.1182%" y="613" width="0.0203%" height="15" fill="rgb(252,64,23)" fg:x="26338" fg:w="6"/><text x="89.3682%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.17%)</title><rect x="88.9761%" y="661" width="0.1692%" height="15" fill="rgb(232,162,48)" fg:x="26296" fg:w="50"/><text x="89.2261%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.11%)</title><rect x="89.0370%" y="645" width="0.1083%" height="15" fill="rgb(246,160,12)" fg:x="26314" fg:w="32"/><text x="89.2870%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.11%)</title><rect x="89.1521%" y="661" width="0.1117%" height="15" fill="rgb(247,166,0)" fg:x="26348" fg:w="33"/><text x="89.4021%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.06%)</title><rect x="89.2062%" y="645" width="0.0575%" height="15" fill="rgb(249,219,21)" fg:x="26364" fg:w="17"/><text x="89.4562%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="89.2705%" y="661" width="0.0305%" height="15" fill="rgb(205,209,3)" fg:x="26383" fg:w="9"/><text x="89.5205%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,961 samples, 84.46%)</title><rect x="4.8555%" y="693" width="84.4590%" height="15" fill="rgb(243,44,1)" fg:x="1435" fg:w="24961"/><text x="5.1055%" y="703.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (336 samples, 1.14%)</title><rect x="88.1776%" y="677" width="1.1369%" height="15" fill="rgb(206,159,16)" fg:x="26060" fg:w="336"/><text x="88.4276%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.10%)</title><rect x="90.0149%" y="645" width="0.0981%" height="15" fill="rgb(244,77,30)" fg:x="26603" fg:w="29"/><text x="90.2649%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="90.0859%" y="629" width="0.0271%" height="15" fill="rgb(218,69,12)" fg:x="26624" fg:w="8"/><text x="90.3359%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.15%)</title><rect x="89.9743%" y="677" width="0.1489%" height="15" fill="rgb(212,87,7)" fg:x="26591" fg:w="44"/><text x="90.2243%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.12%)</title><rect x="90.0047%" y="661" width="0.1184%" height="15" fill="rgb(245,114,25)" fg:x="26600" fg:w="35"/><text x="90.2547%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="90.1130%" y="645" width="0.0102%" height="15" fill="rgb(210,61,42)" fg:x="26632" fg:w="3"/><text x="90.3630%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.10%)</title><rect x="90.1265%" y="677" width="0.1049%" height="15" fill="rgb(211,52,33)" fg:x="26636" fg:w="31"/><text x="90.3765%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.06%)</title><rect x="90.1739%" y="661" width="0.0575%" height="15" fill="rgb(234,58,33)" fg:x="26650" fg:w="17"/><text x="90.4239%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.04%)</title><rect x="90.2314%" y="677" width="0.0440%" height="15" fill="rgb(220,115,36)" fg:x="26667" fg:w="13"/><text x="90.4814%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,320 samples, 85.67%)</title><rect x="4.6085%" y="709" width="85.6737%" height="15" fill="rgb(243,153,54)" fg:x="1362" fg:w="25320"/><text x="4.8585%" y="719.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (286 samples, 0.97%)</title><rect x="89.3145%" y="693" width="0.9677%" height="15" fill="rgb(251,47,18)" fg:x="26396" fg:w="286"/><text x="89.5645%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (30 samples, 0.10%)</title><rect x="90.7830%" y="693" width="0.1015%" height="15" fill="rgb(242,102,42)" fg:x="26830" fg:w="30"/><text x="91.0330%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (21 samples, 0.07%)</title><rect x="90.8134%" y="677" width="0.0711%" height="15" fill="rgb(234,31,38)" fg:x="26839" fg:w="21"/><text x="91.0634%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.06%)</title><rect x="90.8202%" y="661" width="0.0643%" height="15" fill="rgb(221,117,51)" fg:x="26841" fg:w="19"/><text x="91.0702%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="90.8642%" y="645" width="0.0203%" height="15" fill="rgb(212,20,18)" fg:x="26854" fg:w="6"/><text x="91.1142%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.07%)</title><rect x="90.8912%" y="693" width="0.0744%" height="15" fill="rgb(245,133,36)" fg:x="26862" fg:w="22"/><text x="91.1412%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="90.9251%" y="677" width="0.0406%" height="15" fill="rgb(212,6,19)" fg:x="26872" fg:w="12"/><text x="91.1751%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="90.9725%" y="693" width="0.0169%" height="15" fill="rgb(218,1,36)" fg:x="26886" fg:w="5"/><text x="91.2225%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,579 samples, 86.55%)</title><rect x="4.4427%" y="725" width="86.5500%" height="15" fill="rgb(246,84,54)" fg:x="1313" fg:w="25579"/><text x="4.6927%" y="735.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (210 samples, 0.71%)</title><rect x="90.2822%" y="709" width="0.7106%" height="15" fill="rgb(242,110,6)" fg:x="26682" fg:w="210"/><text x="90.5322%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.04%)</title><rect x="91.3345%" y="677" width="0.0372%" height="15" fill="rgb(214,47,5)" fg:x="26993" fg:w="11"/><text x="91.5845%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="91.3548%" y="661" width="0.0169%" height="15" fill="rgb(218,159,25)" fg:x="26999" fg:w="5"/><text x="91.6048%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.06%)</title><rect x="91.3142%" y="709" width="0.0643%" height="15" fill="rgb(215,211,28)" fg:x="26987" fg:w="19"/><text x="91.5642%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.05%)</title><rect x="91.3277%" y="693" width="0.0508%" height="15" fill="rgb(238,59,32)" fg:x="26991" fg:w="15"/><text x="91.5777%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="91.4022%" y="693" width="0.0169%" height="15" fill="rgb(226,82,3)" fg:x="27013" fg:w="5"/><text x="91.6522%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.04%)</title><rect x="91.3785%" y="709" width="0.0440%" height="15" fill="rgb(240,164,32)" fg:x="27006" fg:w="13"/><text x="91.6285%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,735 samples, 87.08%)</title><rect x="4.3581%" y="741" width="87.0779%" height="15" fill="rgb(232,46,7)" fg:x="1288" fg:w="25735"/><text x="4.6081%" y="751.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (131 samples, 0.44%)</title><rect x="90.9928%" y="725" width="0.4433%" height="15" fill="rgb(229,129,53)" fg:x="26892" fg:w="131"/><text x="91.2428%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.04%)</title><rect x="91.6153%" y="725" width="0.0372%" height="15" fill="rgb(234,188,29)" fg:x="27076" fg:w="11"/><text x="91.8653%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="91.6221%" y="709" width="0.0305%" height="15" fill="rgb(246,141,4)" fg:x="27078" fg:w="9"/><text x="91.8721%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="91.6289%" y="693" width="0.0237%" height="15" fill="rgb(229,23,39)" fg:x="27080" fg:w="7"/><text x="91.8789%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="91.6424%" y="677" width="0.0102%" height="15" fill="rgb(206,12,3)" fg:x="27084" fg:w="3"/><text x="91.8924%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="91.6526%" y="725" width="0.0237%" height="15" fill="rgb(252,226,20)" fg:x="27087" fg:w="7"/><text x="91.9026%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="91.6560%" y="709" width="0.0203%" height="15" fill="rgb(216,123,35)" fg:x="27088" fg:w="6"/><text x="91.9060%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,826 samples, 87.39%)</title><rect x="4.2938%" y="757" width="87.3858%" height="15" fill="rgb(212,68,40)" fg:x="1269" fg:w="25826"/><text x="4.5438%" y="767.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (72 samples, 0.24%)</title><rect x="91.4360%" y="741" width="0.2436%" height="15" fill="rgb(254,125,32)" fg:x="27023" fg:w="72"/><text x="91.6860%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="91.8184%" y="725" width="0.0102%" height="15" fill="rgb(253,97,22)" fg:x="27136" fg:w="3"/><text x="92.0684%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="91.8150%" y="741" width="0.0169%" height="15" fill="rgb(241,101,14)" fg:x="27135" fg:w="5"/><text x="92.0650%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="91.8319%" y="741" width="0.0169%" height="15" fill="rgb(238,103,29)" fg:x="27140" fg:w="5"/><text x="92.0819%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,888 samples, 87.60%)</title><rect x="4.2566%" y="773" width="87.5956%" height="15" fill="rgb(233,195,47)" fg:x="1258" fg:w="25888"/><text x="4.5066%" y="783.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (51 samples, 0.17%)</title><rect x="91.6796%" y="757" width="0.1726%" height="15" fill="rgb(246,218,30)" fg:x="27095" fg:w="51"/><text x="91.9296%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.03%)</title><rect x="91.9672%" y="757" width="0.0305%" height="15" fill="rgb(219,145,47)" fg:x="27180" fg:w="9"/><text x="92.2172%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="91.9774%" y="741" width="0.0203%" height="15" fill="rgb(243,12,26)" fg:x="27183" fg:w="6"/><text x="92.2274%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="91.9808%" y="725" width="0.0169%" height="15" fill="rgb(214,87,16)" fg:x="27184" fg:w="5"/><text x="92.2308%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="91.9977%" y="757" width="0.0135%" height="15" fill="rgb(208,99,42)" fg:x="27189" fg:w="4"/><text x="92.2477%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,951 samples, 87.81%)</title><rect x="4.2126%" y="789" width="87.8088%" height="15" fill="rgb(253,99,2)" fg:x="1245" fg:w="25951"/><text x="4.4626%" y="799.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (50 samples, 0.17%)</title><rect x="91.8522%" y="773" width="0.1692%" height="15" fill="rgb(220,168,23)" fg:x="27146" fg:w="50"/><text x="92.1022%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="92.0112%" y="757" width="0.0102%" height="15" fill="rgb(242,38,24)" fg:x="27193" fg:w="3"/><text x="92.2612%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="92.1432%" y="773" width="0.0102%" height="15" fill="rgb(225,182,9)" fg:x="27232" fg:w="3"/><text x="92.3932%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,003 samples, 87.98%)</title><rect x="4.1822%" y="805" width="87.9847%" height="15" fill="rgb(243,178,37)" fg:x="1236" fg:w="26003"/><text x="4.4322%" y="815.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (43 samples, 0.15%)</title><rect x="92.0214%" y="789" width="0.1455%" height="15" fill="rgb(232,139,19)" fg:x="27196" fg:w="43"/><text x="92.2714%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,026 samples, 88.06%)</title><rect x="4.1450%" y="821" width="88.0625%" height="15" fill="rgb(225,201,24)" fg:x="1225" fg:w="26026"/><text x="4.3950%" y="831.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (12 samples, 0.04%)</title><rect x="92.1669%" y="805" width="0.0406%" height="15" fill="rgb(221,47,46)" fg:x="27239" fg:w="12"/><text x="92.4169%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="92.1940%" y="789" width="0.0135%" height="15" fill="rgb(249,23,13)" fg:x="27247" fg:w="4"/><text x="92.4440%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="92.1940%" y="773" width="0.0135%" height="15" fill="rgb(219,9,5)" fg:x="27247" fg:w="4"/><text x="92.4440%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,044 samples, 88.12%)</title><rect x="4.1314%" y="837" width="88.1234%" height="15" fill="rgb(254,171,16)" fg:x="1221" fg:w="26044"/><text x="4.3814%" y="847.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (14 samples, 0.05%)</title><rect x="92.2075%" y="821" width="0.0474%" height="15" fill="rgb(230,171,20)" fg:x="27251" fg:w="14"/><text x="92.4575%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="92.2447%" y="805" width="0.0102%" height="15" fill="rgb(210,71,41)" fg:x="27262" fg:w="3"/><text x="92.4947%" y="815.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,048 samples, 88.14%)</title><rect x="4.1280%" y="853" width="88.1370%" height="15" fill="rgb(206,173,20)" fg:x="1220" fg:w="26048"/><text x="4.3780%" y="863.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.01%)</title><rect x="92.2549%" y="837" width="0.0102%" height="15" fill="rgb(233,88,34)" fg:x="27265" fg:w="3"/><text x="92.5049%" y="847.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,050 samples, 88.14%)</title><rect x="4.1247%" y="869" width="88.1437%" height="15" fill="rgb(223,209,46)" fg:x="1219" fg:w="26050"/><text x="4.3747%" y="879.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="95.0328%" y="837" width="0.0237%" height="15" fill="rgb(250,43,18)" fg:x="28086" fg:w="7"/><text x="95.2828%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.18%)</title><rect x="95.0768%" y="821" width="0.1759%" height="15" fill="rgb(208,13,10)" fg:x="28099" fg:w="52"/><text x="95.3268%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.05%)</title><rect x="95.1986%" y="805" width="0.0541%" height="15" fill="rgb(212,200,36)" fg:x="28135" fg:w="16"/><text x="95.4486%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (95 samples, 0.32%)</title><rect x="94.9482%" y="853" width="0.3214%" height="15" fill="rgb(225,90,30)" fg:x="28061" fg:w="95"/><text x="95.1982%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (63 samples, 0.21%)</title><rect x="95.0565%" y="837" width="0.2132%" height="15" fill="rgb(236,182,39)" fg:x="28093" fg:w="63"/><text x="95.3065%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="95.2528%" y="821" width="0.0169%" height="15" fill="rgb(212,144,35)" fg:x="28151" fg:w="5"/><text x="95.5028%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="95.2697%" y="853" width="0.0102%" height="15" fill="rgb(228,63,44)" fg:x="28156" fg:w="3"/><text x="95.5197%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (47 samples, 0.16%)</title><rect x="95.2798%" y="853" width="0.1590%" height="15" fill="rgb(228,109,6)" fg:x="28159" fg:w="47"/><text x="95.5298%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (31 samples, 0.10%)</title><rect x="95.3340%" y="837" width="0.1049%" height="15" fill="rgb(238,117,24)" fg:x="28175" fg:w="31"/><text x="95.5840%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`malloc (4 samples, 0.01%)</title><rect x="95.4389%" y="853" width="0.0135%" height="15" fill="rgb(242,26,26)" fg:x="28206" fg:w="4"/><text x="95.6889%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.03%)</title><rect x="95.4592%" y="853" width="0.0338%" height="15" fill="rgb(221,92,48)" fg:x="28212" fg:w="10"/><text x="95.7092%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="95.4964%" y="853" width="0.0237%" height="15" fill="rgb(209,209,32)" fg:x="28223" fg:w="7"/><text x="95.7464%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.10%)</title><rect x="95.5201%" y="853" width="0.1049%" height="15" fill="rgb(221,70,22)" fg:x="28230" fg:w="31"/><text x="95.7701%" y="863.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="95.6317%" y="853" width="0.0203%" height="15" fill="rgb(248,145,5)" fg:x="28263" fg:w="6"/><text x="95.8817%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="95.7705%" y="821" width="0.0305%" height="15" fill="rgb(226,116,26)" fg:x="28304" fg:w="9"/><text x="96.0205%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (64 samples, 0.22%)</title><rect x="95.8212%" y="805" width="0.2166%" height="15" fill="rgb(244,5,17)" fg:x="28319" fg:w="64"/><text x="96.0712%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.09%)</title><rect x="95.9430%" y="789" width="0.0947%" height="15" fill="rgb(252,159,33)" fg:x="28355" fg:w="28"/><text x="96.1930%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (77 samples, 0.26%)</title><rect x="95.8009%" y="821" width="0.2605%" height="15" fill="rgb(206,71,0)" fg:x="28313" fg:w="77"/><text x="96.0509%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="96.0378%" y="805" width="0.0237%" height="15" fill="rgb(233,118,54)" fg:x="28383" fg:w="7"/><text x="96.2878%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (109 samples, 0.37%)</title><rect x="95.7062%" y="837" width="0.3688%" height="15" fill="rgb(234,83,48)" fg:x="28285" fg:w="109"/><text x="95.9562%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.01%)</title><rect x="96.0614%" y="821" width="0.0135%" height="15" fill="rgb(228,3,54)" fg:x="28390" fg:w="4"/><text x="96.3114%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (4 samples, 0.01%)</title><rect x="96.0614%" y="805" width="0.0135%" height="15" fill="rgb(226,155,13)" fg:x="28390" fg:w="4"/><text x="96.3114%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="96.0750%" y="837" width="0.0135%" height="15" fill="rgb(241,28,37)" fg:x="28394" fg:w="4"/><text x="96.3250%" y="847.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,131 samples, 3.83%)</title><rect x="92.2684%" y="869" width="3.8269%" height="15" fill="rgb(233,93,10)" fg:x="27269" fg:w="1131"/><text x="92.5184%" y="879.50">sudo..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (131 samples, 0.44%)</title><rect x="95.6520%" y="853" width="0.4433%" height="15" fill="rgb(225,113,19)" fg:x="28269" fg:w="131"/><text x="95.9020%" y="863.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (7 samples, 0.02%)</title><rect x="96.1866%" y="837" width="0.0237%" height="15" fill="rgb(241,2,18)" fg:x="28427" fg:w="7"/><text x="96.4366%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (13 samples, 0.04%)</title><rect x="96.2103%" y="837" width="0.0440%" height="15" fill="rgb(228,207,21)" fg:x="28434" fg:w="13"/><text x="96.4603%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (19 samples, 0.06%)</title><rect x="96.2543%" y="837" width="0.0643%" height="15" fill="rgb(213,211,35)" fg:x="28447" fg:w="19"/><text x="96.5043%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (14 samples, 0.05%)</title><rect x="96.3186%" y="837" width="0.0474%" height="15" fill="rgb(209,83,10)" fg:x="28466" fg:w="14"/><text x="96.5686%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (298 samples, 1.01%)</title><rect x="96.4743%" y="805" width="1.0083%" height="15" fill="rgb(209,164,1)" fg:x="28512" fg:w="298"/><text x="96.7243%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (317 samples, 1.07%)</title><rect x="96.4235%" y="821" width="1.0726%" height="15" fill="rgb(213,184,43)" fg:x="28497" fg:w="317"/><text x="96.6735%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_wait (4 samples, 0.01%)</title><rect x="97.4826%" y="805" width="0.0135%" height="15" fill="rgb(231,61,34)" fg:x="28810" fg:w="4"/><text x="97.7326%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (209 samples, 0.71%)</title><rect x="97.4961%" y="821" width="0.7072%" height="15" fill="rgb(235,75,3)" fg:x="28814" fg:w="209"/><text x="97.7461%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (199 samples, 0.67%)</title><rect x="97.5299%" y="805" width="0.6733%" height="15" fill="rgb(220,106,47)" fg:x="28824" fg:w="199"/><text x="97.7799%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_unlock_init_slow (3 samples, 0.01%)</title><rect x="98.2101%" y="821" width="0.0102%" height="15" fill="rgb(210,196,33)" fg:x="29025" fg:w="3"/><text x="98.4601%" y="831.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (25 samples, 0.08%)</title><rect x="98.2405%" y="821" width="0.0846%" height="15" fill="rgb(229,154,42)" fg:x="29034" fg:w="25"/><text x="98.4905%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`write (10 samples, 0.03%)</title><rect x="98.4198%" y="789" width="0.0338%" height="15" fill="rgb(228,114,26)" fg:x="29087" fg:w="10"/><text x="98.6698%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.02%)</title><rect x="98.4537%" y="789" width="0.0203%" height="15" fill="rgb(208,144,1)" fg:x="29097" fg:w="6"/><text x="98.7037%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`write (367 samples, 1.24%)</title><rect x="98.5653%" y="773" width="1.2418%" height="15" fill="rgb(239,112,37)" fg:x="29130" fg:w="367"/><text x="98.8153%" y="783.50"></text></g><g><title>sudoku-solver`core::slice::memchr::memrchr (6 samples, 0.02%)</title><rect x="99.8071%" y="773" width="0.0203%" height="15" fill="rgb(210,96,50)" fg:x="29497" fg:w="6"/><text x="100.0571%" y="783.50"></text></g><g><title>sudoku-solver`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (403 samples, 1.36%)</title><rect x="98.4740%" y="789" width="1.3636%" height="15" fill="rgb(222,178,2)" fg:x="29103" fg:w="403"/><text x="98.7240%" y="799.50"></text></g><g><title>sudoku-solver`std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (3 samples, 0.01%)</title><rect x="99.8274%" y="773" width="0.0102%" height="15" fill="rgb(226,74,18)" fg:x="29503" fg:w="3"/><text x="100.0774%" y="783.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (433 samples, 1.47%)</title><rect x="98.3860%" y="805" width="1.4651%" height="15" fill="rgb(225,67,54)" fg:x="29077" fg:w="433"/><text x="98.6360%" y="815.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (4 samples, 0.01%)</title><rect x="99.8376%" y="789" width="0.0135%" height="15" fill="rgb(251,92,32)" fg:x="29506" fg:w="4"/><text x="100.0876%" y="799.50"></text></g><g><title>sudoku-solver`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 0.02%)</title><rect x="99.8511%" y="805" width="0.0203%" height="15" fill="rgb(228,149,22)" fg:x="29510" fg:w="6"/><text x="100.1011%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.01%)</title><rect x="99.8951%" y="773" width="0.0135%" height="15" fill="rgb(243,54,13)" fg:x="29523" fg:w="4"/><text x="100.1451%" y="783.50"></text></g><g><title>sudoku-solver`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (20 samples, 0.07%)</title><rect x="99.9086%" y="773" width="0.0677%" height="15" fill="rgb(243,180,28)" fg:x="29527" fg:w="20"/><text x="100.1586%" y="783.50"></text></g><g><title>sudoku-solver`core::slice::memchr::memrchr (7 samples, 0.02%)</title><rect x="99.9526%" y="757" width="0.0237%" height="15" fill="rgb(208,167,24)" fg:x="29540" fg:w="7"/><text x="100.2026%" y="767.50"></text></g><g><title>sudoku-solver`&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (30 samples, 0.10%)</title><rect x="99.8782%" y="789" width="0.1015%" height="15" fill="rgb(245,73,45)" fg:x="29518" fg:w="30"/><text x="100.1282%" y="799.50"></text></g><g><title>sudoku-solver`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (1,069 samples, 3.62%)</title><rect x="96.3660%" y="837" width="3.6171%" height="15" fill="rgb(237,203,48)" fg:x="28480" fg:w="1069"/><text x="96.6160%" y="847.50">sudo..</text></g><g><title>sudoku-solver`core::fmt::write (490 samples, 1.66%)</title><rect x="98.3251%" y="821" width="1.6580%" height="15" fill="rgb(211,197,16)" fg:x="29059" fg:w="490"/><text x="98.5751%" y="831.50"></text></g><g><title>sudoku-solver`core::fmt::Write::write_char (33 samples, 0.11%)</title><rect x="99.8714%" y="805" width="0.1117%" height="15" fill="rgb(243,99,51)" fg:x="29516" fg:w="33"/><text x="100.1214%" y="815.50"></text></g><g><title>all (29,554 samples, 100%)</title><rect x="0.0000%" y="981" width="100.0000%" height="15" fill="rgb(215,123,29)" fg:x="0" fg:w="29554"/><text x="0.2500%" y="991.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (29,546 samples, 99.97%)</title><rect x="0.0271%" y="965" width="99.9729%" height="15" fill="rgb(239,186,37)" fg:x="8" fg:w="29546"/><text x="0.2771%" y="975.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (29,546 samples, 99.97%)</title><rect x="0.0271%" y="949" width="99.9729%" height="15" fill="rgb(252,136,39)" fg:x="8" fg:w="29546"/><text x="0.2771%" y="959.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>sudoku-solver`std::sys::unix::thread::Thread::new::thread_start (29,545 samples, 99.97%)</title><rect x="0.0305%" y="933" width="99.9695%" height="15" fill="rgb(223,213,32)" fg:x="9" fg:w="29545"/><text x="0.2805%" y="943.50">sudoku-solver`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}} (29,545 samples, 99.97%)</title><rect x="0.0305%" y="917" width="99.9695%" height="15" fill="rgb(233,115,5)" fg:x="9" fg:w="29545"/><text x="0.2805%" y="927.50">sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (29,545 samples, 99.97%)</title><rect x="0.0305%" y="901" width="99.9695%" height="15" fill="rgb(207,226,44)" fg:x="9" fg:w="29545"/><text x="0.2805%" y="911.50">sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sudoku-solver`sudoku_solver::solve_sudoku (29,477 samples, 99.74%)</title><rect x="0.2605%" y="885" width="99.7395%" height="15" fill="rgb(208,126,0)" fg:x="77" fg:w="29477"/><text x="0.5105%" y="895.50">sudoku-solver`sudoku_solver::solve_sudoku</text></g><g><title>sudoku-solver`sudoku_solver::print_sudoku (1,154 samples, 3.90%)</title><rect x="96.0953%" y="869" width="3.9047%" height="15" fill="rgb(244,66,21)" fg:x="28400" fg:w="1154"/><text x="96.3453%" y="879.50">sudo..</text></g><g><title>sudoku-solver`std::io::stdio::_print (1,139 samples, 3.85%)</title><rect x="96.1460%" y="853" width="3.8540%" height="15" fill="rgb(222,97,12)" fg:x="28415" fg:w="1139"/><text x="96.3960%" y="863.50">sudo..</text></g><g><title>sudoku-solver`core::fmt::write (3 samples, 0.01%)</title><rect x="99.9898%" y="837" width="0.0102%" height="15" fill="rgb(219,213,19)" fg:x="29551" fg:w="3"/><text x="100.2398%" y="847.50"></text></g></svg></svg>