<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1029.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="28505"><g><title>dyld`start (7 samples, 0.02%)</title><rect x="0.0000%" y="981" width="0.0246%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="7"/><text x="0.2500%" y="991.50"></text></g><g><title>sudoku-solver`main (7 samples, 0.02%)</title><rect x="0.0000%" y="965" width="0.0246%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="7"/><text x="0.2500%" y="975.50"></text></g><g><title>sudoku-solver`std::rt::lang_start_internal (7 samples, 0.02%)</title><rect x="0.0000%" y="949" width="0.0246%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="7"/><text x="0.2500%" y="959.50"></text></g><g><title>sudoku-solver`std::rt::lang_start::_{{closure}} (6 samples, 0.02%)</title><rect x="0.0035%" y="933" width="0.0210%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="6"/><text x="0.2535%" y="943.50"></text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.02%)</title><rect x="0.0035%" y="917" width="0.0210%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="6"/><text x="0.2535%" y="927.50"></text></g><g><title>sudoku-solver`sudoku_solver::main (6 samples, 0.02%)</title><rect x="0.0035%" y="901" width="0.0210%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="6"/><text x="0.2535%" y="911.50"></text></g><g><title>sudoku-solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="0.0105%" y="885" width="0.0140%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="4"/><text x="0.2605%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="0.0281%" y="901" width="0.0246%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="7"/><text x="0.2781%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.01%)</title><rect x="0.0526%" y="901" width="0.0105%" height="15" fill="rgb(218,30,26)" fg:x="15" fg:w="3"/><text x="0.3026%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.06%)</title><rect x="0.0631%" y="901" width="0.0631%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="18"/><text x="0.3131%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="0.1263%" y="901" width="0.0105%" height="15" fill="rgb(250,228,42)" fg:x="36" fg:w="3"/><text x="0.3763%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="0.2701%" y="885" width="0.0105%" height="15" fill="rgb(240,193,28)" fg:x="77" fg:w="3"/><text x="0.5201%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (23 samples, 0.08%)</title><rect x="0.3754%" y="869" width="0.0807%" height="15" fill="rgb(216,20,37)" fg:x="107" fg:w="23"/><text x="0.6254%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (52 samples, 0.18%)</title><rect x="0.2807%" y="885" width="0.1824%" height="15" fill="rgb(206,188,39)" fg:x="80" fg:w="52"/><text x="0.5307%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.04%)</title><rect x="0.4666%" y="885" width="0.0351%" height="15" fill="rgb(217,207,13)" fg:x="133" fg:w="10"/><text x="0.7166%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="0.5017%" y="885" width="0.0246%" height="15" fill="rgb(231,73,38)" fg:x="143" fg:w="7"/><text x="0.7517%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="0.5262%" y="885" width="0.0105%" height="15" fill="rgb(225,20,46)" fg:x="150" fg:w="3"/><text x="0.7762%" y="895.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="0.5367%" y="885" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="153" fg:w="3"/><text x="0.7867%" y="895.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (77 samples, 0.27%)</title><rect x="0.5508%" y="885" width="0.2701%" height="15" fill="rgb(221,200,47)" fg:x="157" fg:w="77"/><text x="0.8008%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="0.9437%" y="789" width="0.0105%" height="15" fill="rgb(226,26,5)" fg:x="269" fg:w="3"/><text x="1.1937%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="1.1121%" y="741" width="0.0105%" height="15" fill="rgb(249,33,26)" fg:x="317" fg:w="3"/><text x="1.3621%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="1.1331%" y="741" width="0.0175%" height="15" fill="rgb(235,183,28)" fg:x="323" fg:w="5"/><text x="1.3831%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="1.2594%" y="725" width="0.0246%" height="15" fill="rgb(221,5,38)" fg:x="359" fg:w="7"/><text x="1.5094%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="1.4489%" y="709" width="0.0105%" height="15" fill="rgb(247,18,42)" fg:x="413" fg:w="3"/><text x="1.6989%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="1.4594%" y="709" width="0.0210%" height="15" fill="rgb(241,131,45)" fg:x="416" fg:w="6"/><text x="1.7094%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="1.4804%" y="709" width="0.0105%" height="15" fill="rgb(249,31,29)" fg:x="422" fg:w="3"/><text x="1.7304%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="1.6734%" y="693" width="0.0246%" height="15" fill="rgb(225,111,53)" fg:x="477" fg:w="7"/><text x="1.9234%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="1.7120%" y="693" width="0.0140%" height="15" fill="rgb(238,160,17)" fg:x="488" fg:w="4"/><text x="1.9620%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="1.9470%" y="677" width="0.0105%" height="15" fill="rgb(214,148,48)" fg:x="555" fg:w="3"/><text x="2.1970%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="1.9576%" y="677" width="0.0105%" height="15" fill="rgb(232,36,49)" fg:x="558" fg:w="3"/><text x="2.2076%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="1.9681%" y="677" width="0.0210%" height="15" fill="rgb(209,103,24)" fg:x="561" fg:w="6"/><text x="2.2181%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="2.1365%" y="661" width="0.0175%" height="15" fill="rgb(229,88,8)" fg:x="609" fg:w="5"/><text x="2.3865%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="2.1540%" y="661" width="0.0105%" height="15" fill="rgb(213,181,19)" fg:x="614" fg:w="3"/><text x="2.4040%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="2.3014%" y="645" width="0.0105%" height="15" fill="rgb(254,191,54)" fg:x="656" fg:w="3"/><text x="2.5514%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.04%)</title><rect x="2.3119%" y="645" width="0.0386%" height="15" fill="rgb(241,83,37)" fg:x="659" fg:w="11"/><text x="2.5619%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="2.3540%" y="645" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="671" fg:w="3"/><text x="2.6040%" y="655.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="2.3645%" y="645" width="0.0140%" height="15" fill="rgb(226,3,54)" fg:x="674" fg:w="4"/><text x="2.6145%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="2.5118%" y="629" width="0.0105%" height="15" fill="rgb(245,192,40)" fg:x="716" fg:w="3"/><text x="2.7618%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.03%)</title><rect x="2.5224%" y="629" width="0.0316%" height="15" fill="rgb(238,167,29)" fg:x="719" fg:w="9"/><text x="2.7724%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="2.5539%" y="629" width="0.0175%" height="15" fill="rgb(232,182,51)" fg:x="728" fg:w="5"/><text x="2.8039%" y="639.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="2.5785%" y="629" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="735" fg:w="3"/><text x="2.8285%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="2.6908%" y="613" width="0.0140%" height="15" fill="rgb(208,69,12)" fg:x="767" fg:w="4"/><text x="2.9408%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.03%)</title><rect x="2.7048%" y="613" width="0.0281%" height="15" fill="rgb(235,93,37)" fg:x="771" fg:w="8"/><text x="2.9548%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="2.7399%" y="613" width="0.0105%" height="15" fill="rgb(213,116,39)" fg:x="781" fg:w="3"/><text x="2.9899%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="2.9258%" y="597" width="0.0105%" height="15" fill="rgb(222,207,29)" fg:x="834" fg:w="3"/><text x="3.1758%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="2.9363%" y="597" width="0.0175%" height="15" fill="rgb(206,96,30)" fg:x="837" fg:w="5"/><text x="3.1863%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.02%)</title><rect x="3.1293%" y="581" width="0.0175%" height="15" fill="rgb(218,138,4)" fg:x="892" fg:w="5"/><text x="3.3793%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="3.1538%" y="581" width="0.0140%" height="15" fill="rgb(250,191,14)" fg:x="899" fg:w="4"/><text x="3.4038%" y="591.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="3.1749%" y="581" width="0.0105%" height="15" fill="rgb(239,60,40)" fg:x="905" fg:w="3"/><text x="3.4249%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="3.3678%" y="565" width="0.0105%" height="15" fill="rgb(206,27,48)" fg:x="960" fg:w="3"/><text x="3.6178%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="3.3784%" y="565" width="0.0175%" height="15" fill="rgb(225,35,8)" fg:x="963" fg:w="5"/><text x="3.6284%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="3.3959%" y="565" width="0.0140%" height="15" fill="rgb(250,213,24)" fg:x="968" fg:w="4"/><text x="3.6459%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="3.4099%" y="565" width="0.0175%" height="15" fill="rgb(247,123,22)" fg:x="972" fg:w="5"/><text x="3.6599%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="3.4275%" y="565" width="0.0140%" height="15" fill="rgb(231,138,38)" fg:x="977" fg:w="4"/><text x="3.6775%" y="575.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="3.4450%" y="565" width="0.0140%" height="15" fill="rgb(231,145,46)" fg:x="982" fg:w="4"/><text x="3.6950%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="3.6520%" y="549" width="0.0491%" height="15" fill="rgb(251,118,11)" fg:x="1041" fg:w="14"/><text x="3.9020%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (21 samples, 0.07%)</title><rect x="3.7011%" y="549" width="0.0737%" height="15" fill="rgb(217,147,25)" fg:x="1055" fg:w="21"/><text x="3.9511%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="3.7818%" y="549" width="0.0105%" height="15" fill="rgb(247,81,37)" fg:x="1078" fg:w="3"/><text x="4.0318%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="4.1747%" y="533" width="0.0210%" height="15" fill="rgb(209,12,38)" fg:x="1190" fg:w="6"/><text x="4.4247%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.05%)</title><rect x="4.1958%" y="533" width="0.0456%" height="15" fill="rgb(227,1,9)" fg:x="1196" fg:w="13"/><text x="4.4458%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (20 samples, 0.07%)</title><rect x="4.2414%" y="533" width="0.0702%" height="15" fill="rgb(248,47,43)" fg:x="1209" fg:w="20"/><text x="4.4914%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="4.3115%" y="533" width="0.0210%" height="15" fill="rgb(221,10,30)" fg:x="1229" fg:w="6"/><text x="4.5615%" y="543.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="4.3326%" y="533" width="0.0105%" height="15" fill="rgb(210,229,1)" fg:x="1235" fg:w="3"/><text x="4.5826%" y="543.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="4.3466%" y="533" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="1239" fg:w="3"/><text x="4.5966%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.03%)</title><rect x="4.8588%" y="517" width="0.0281%" height="15" fill="rgb(234,67,33)" fg:x="1385" fg:w="8"/><text x="5.1088%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.06%)</title><rect x="4.8869%" y="517" width="0.0596%" height="15" fill="rgb(247,98,35)" fg:x="1393" fg:w="17"/><text x="5.1369%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (30 samples, 0.11%)</title><rect x="4.9500%" y="517" width="0.1052%" height="15" fill="rgb(247,138,52)" fg:x="1411" fg:w="30"/><text x="5.2000%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="5.0553%" y="517" width="0.0246%" height="15" fill="rgb(213,79,30)" fg:x="1441" fg:w="7"/><text x="5.3053%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="5.0798%" y="517" width="0.0140%" height="15" fill="rgb(246,177,23)" fg:x="1448" fg:w="4"/><text x="5.3298%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="5.0938%" y="517" width="0.0210%" height="15" fill="rgb(230,62,27)" fg:x="1452" fg:w="6"/><text x="5.3438%" y="527.50"></text></g><g><title>sudoku-solver`__rdl_alloc (9 samples, 0.03%)</title><rect x="5.1149%" y="517" width="0.0316%" height="15" fill="rgb(216,154,8)" fg:x="1458" fg:w="9"/><text x="5.3649%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="5.8691%" y="501" width="0.0210%" height="15" fill="rgb(244,35,45)" fg:x="1673" fg:w="6"/><text x="6.1191%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (21 samples, 0.07%)</title><rect x="5.8902%" y="501" width="0.0737%" height="15" fill="rgb(251,115,12)" fg:x="1679" fg:w="21"/><text x="6.1402%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.05%)</title><rect x="5.9639%" y="501" width="0.0456%" height="15" fill="rgb(240,54,50)" fg:x="1700" fg:w="13"/><text x="6.2139%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (34 samples, 0.12%)</title><rect x="6.0130%" y="501" width="0.1193%" height="15" fill="rgb(233,84,52)" fg:x="1714" fg:w="34"/><text x="6.2630%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.04%)</title><rect x="6.1323%" y="501" width="0.0421%" height="15" fill="rgb(207,117,47)" fg:x="1748" fg:w="12"/><text x="6.3823%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (7 samples, 0.02%)</title><rect x="6.1744%" y="501" width="0.0246%" height="15" fill="rgb(249,43,39)" fg:x="1760" fg:w="7"/><text x="6.4244%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="6.1989%" y="501" width="0.0140%" height="15" fill="rgb(209,38,44)" fg:x="1767" fg:w="4"/><text x="6.4489%" y="511.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="6.2129%" y="501" width="0.0140%" height="15" fill="rgb(236,212,23)" fg:x="1771" fg:w="4"/><text x="6.4629%" y="511.50"></text></g><g><title>sudoku-solver`__rdl_dealloc (3 samples, 0.01%)</title><rect x="6.2270%" y="501" width="0.0105%" height="15" fill="rgb(242,79,21)" fg:x="1775" fg:w="3"/><text x="6.4770%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="6.9847%" y="485" width="0.0316%" height="15" fill="rgb(211,96,35)" fg:x="1991" fg:w="9"/><text x="7.2347%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.07%)</title><rect x="7.0163%" y="485" width="0.0737%" height="15" fill="rgb(253,215,40)" fg:x="2000" fg:w="21"/><text x="7.2663%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.11%)</title><rect x="7.0935%" y="485" width="0.1123%" height="15" fill="rgb(211,81,21)" fg:x="2022" fg:w="32"/><text x="7.3435%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="7.2058%" y="485" width="0.0281%" height="15" fill="rgb(208,190,38)" fg:x="2054" fg:w="8"/><text x="7.4558%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (13 samples, 0.05%)</title><rect x="7.2338%" y="485" width="0.0456%" height="15" fill="rgb(235,213,38)" fg:x="2062" fg:w="13"/><text x="7.4838%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (7 samples, 0.02%)</title><rect x="7.2794%" y="485" width="0.0246%" height="15" fill="rgb(237,122,38)" fg:x="2075" fg:w="7"/><text x="7.5294%" y="495.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.02%)</title><rect x="7.3040%" y="485" width="0.0175%" height="15" fill="rgb(244,218,35)" fg:x="2082" fg:w="5"/><text x="7.5540%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="8.0898%" y="469" width="0.0140%" height="15" fill="rgb(240,68,47)" fg:x="2306" fg:w="4"/><text x="8.3398%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.05%)</title><rect x="8.1038%" y="469" width="0.0491%" height="15" fill="rgb(210,16,53)" fg:x="2310" fg:w="14"/><text x="8.3538%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="8.1530%" y="469" width="0.0807%" height="15" fill="rgb(235,124,12)" fg:x="2324" fg:w="23"/><text x="8.4030%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (37 samples, 0.13%)</title><rect x="8.2336%" y="469" width="0.1298%" height="15" fill="rgb(224,169,11)" fg:x="2347" fg:w="37"/><text x="8.4836%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.04%)</title><rect x="8.3634%" y="469" width="0.0386%" height="15" fill="rgb(250,166,2)" fg:x="2384" fg:w="11"/><text x="8.6134%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="8.4020%" y="469" width="0.0140%" height="15" fill="rgb(242,216,29)" fg:x="2395" fg:w="4"/><text x="8.6520%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="8.4161%" y="469" width="0.0210%" height="15" fill="rgb(230,116,27)" fg:x="2399" fg:w="6"/><text x="8.6661%" y="479.50"></text></g><g><title>sudoku-solver`__rdl_alloc (9 samples, 0.03%)</title><rect x="8.4371%" y="469" width="0.0316%" height="15" fill="rgb(228,99,48)" fg:x="2405" fg:w="9"/><text x="8.6871%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="9.1493%" y="453" width="0.0246%" height="15" fill="rgb(253,11,6)" fg:x="2608" fg:w="7"/><text x="9.3993%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.04%)</title><rect x="9.1738%" y="453" width="0.0386%" height="15" fill="rgb(247,143,39)" fg:x="2615" fg:w="11"/><text x="9.4238%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="9.2124%" y="453" width="0.0912%" height="15" fill="rgb(236,97,10)" fg:x="2626" fg:w="26"/><text x="9.4624%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (30 samples, 0.11%)</title><rect x="9.3071%" y="453" width="0.1052%" height="15" fill="rgb(233,208,19)" fg:x="2653" fg:w="30"/><text x="9.5571%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="9.4124%" y="453" width="0.0246%" height="15" fill="rgb(216,164,2)" fg:x="2683" fg:w="7"/><text x="9.6624%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (8 samples, 0.03%)</title><rect x="9.4369%" y="453" width="0.0281%" height="15" fill="rgb(220,129,5)" fg:x="2690" fg:w="8"/><text x="9.6869%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (11 samples, 0.04%)</title><rect x="9.4650%" y="453" width="0.0386%" height="15" fill="rgb(242,17,10)" fg:x="2698" fg:w="11"/><text x="9.7150%" y="463.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="9.5036%" y="453" width="0.0210%" height="15" fill="rgb(242,107,0)" fg:x="2709" fg:w="6"/><text x="9.7536%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.04%)</title><rect x="10.2649%" y="437" width="0.0351%" height="15" fill="rgb(251,28,31)" fg:x="2926" fg:w="10"/><text x="10.5149%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.04%)</title><rect x="10.2999%" y="437" width="0.0386%" height="15" fill="rgb(233,223,10)" fg:x="2936" fg:w="11"/><text x="10.5499%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.07%)</title><rect x="10.3385%" y="437" width="0.0702%" height="15" fill="rgb(215,21,27)" fg:x="2947" fg:w="20"/><text x="10.5885%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.11%)</title><rect x="10.4157%" y="437" width="0.1123%" height="15" fill="rgb(232,23,21)" fg:x="2969" fg:w="32"/><text x="10.6657%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="10.5280%" y="437" width="0.0246%" height="15" fill="rgb(244,5,23)" fg:x="3001" fg:w="7"/><text x="10.7780%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (11 samples, 0.04%)</title><rect x="10.5525%" y="437" width="0.0386%" height="15" fill="rgb(226,81,46)" fg:x="3008" fg:w="11"/><text x="10.8025%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="10.5911%" y="437" width="0.0210%" height="15" fill="rgb(247,70,30)" fg:x="3019" fg:w="6"/><text x="10.8411%" y="447.50"></text></g><g><title>sudoku-solver`__rdl_alloc (11 samples, 0.04%)</title><rect x="10.6122%" y="437" width="0.0386%" height="15" fill="rgb(212,68,19)" fg:x="3025" fg:w="11"/><text x="10.8622%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="11.3243%" y="421" width="0.0105%" height="15" fill="rgb(240,187,13)" fg:x="3228" fg:w="3"/><text x="11.5743%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.04%)</title><rect x="11.3349%" y="421" width="0.0421%" height="15" fill="rgb(223,113,26)" fg:x="3231" fg:w="12"/><text x="11.5849%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.09%)</title><rect x="11.3770%" y="421" width="0.0947%" height="15" fill="rgb(206,192,2)" fg:x="3243" fg:w="27"/><text x="11.6270%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (31 samples, 0.11%)</title><rect x="11.4752%" y="421" width="0.1088%" height="15" fill="rgb(241,108,4)" fg:x="3271" fg:w="31"/><text x="11.7252%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.05%)</title><rect x="11.5839%" y="421" width="0.0456%" height="15" fill="rgb(247,173,49)" fg:x="3302" fg:w="13"/><text x="11.8339%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="11.6295%" y="421" width="0.0175%" height="15" fill="rgb(224,114,35)" fg:x="3315" fg:w="5"/><text x="11.8795%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="11.6471%" y="421" width="0.0105%" height="15" fill="rgb(245,159,27)" fg:x="3320" fg:w="3"/><text x="11.8971%" y="431.50"></text></g><g><title>sudoku-solver`__rdl_alloc (7 samples, 0.02%)</title><rect x="11.6576%" y="421" width="0.0246%" height="15" fill="rgb(245,172,44)" fg:x="3323" fg:w="7"/><text x="11.9076%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="12.4083%" y="405" width="0.0140%" height="15" fill="rgb(236,23,11)" fg:x="3537" fg:w="4"/><text x="12.6583%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.02%)</title><rect x="12.4224%" y="405" width="0.0246%" height="15" fill="rgb(205,117,38)" fg:x="3541" fg:w="7"/><text x="12.6724%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="12.4469%" y="405" width="0.0807%" height="15" fill="rgb(237,72,25)" fg:x="3548" fg:w="23"/><text x="12.6969%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (28 samples, 0.10%)</title><rect x="12.5276%" y="405" width="0.0982%" height="15" fill="rgb(244,70,9)" fg:x="3571" fg:w="28"/><text x="12.7776%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="12.6259%" y="405" width="0.0281%" height="15" fill="rgb(217,125,39)" fg:x="3599" fg:w="8"/><text x="12.8759%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (13 samples, 0.05%)</title><rect x="12.6539%" y="405" width="0.0456%" height="15" fill="rgb(235,36,10)" fg:x="3607" fg:w="13"/><text x="12.9039%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (9 samples, 0.03%)</title><rect x="12.6995%" y="405" width="0.0316%" height="15" fill="rgb(251,123,47)" fg:x="3620" fg:w="9"/><text x="12.9495%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="13.2503%" y="389" width="0.0140%" height="15" fill="rgb(221,13,13)" fg:x="3777" fg:w="4"/><text x="13.5003%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (8 samples, 0.03%)</title><rect x="13.2643%" y="389" width="0.0281%" height="15" fill="rgb(238,131,9)" fg:x="3781" fg:w="8"/><text x="13.5143%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.05%)</title><rect x="13.2924%" y="389" width="0.0526%" height="15" fill="rgb(211,50,8)" fg:x="3789" fg:w="15"/><text x="13.5424%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (21 samples, 0.07%)</title><rect x="13.3450%" y="389" width="0.0737%" height="15" fill="rgb(245,182,24)" fg:x="3804" fg:w="21"/><text x="13.5950%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="13.4187%" y="389" width="0.0175%" height="15" fill="rgb(242,14,37)" fg:x="3825" fg:w="5"/><text x="13.6687%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="13.4362%" y="389" width="0.0175%" height="15" fill="rgb(246,228,12)" fg:x="3830" fg:w="5"/><text x="13.6862%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (7 samples, 0.02%)</title><rect x="13.4538%" y="389" width="0.0246%" height="15" fill="rgb(213,55,15)" fg:x="3835" fg:w="7"/><text x="13.7038%" y="399.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.02%)</title><rect x="13.4783%" y="389" width="0.0175%" height="15" fill="rgb(209,9,3)" fg:x="3842" fg:w="5"/><text x="13.7283%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="13.8993%" y="373" width="0.0316%" height="15" fill="rgb(230,59,30)" fg:x="3962" fg:w="9"/><text x="14.1493%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.05%)</title><rect x="13.9309%" y="373" width="0.0526%" height="15" fill="rgb(209,121,21)" fg:x="3971" fg:w="15"/><text x="14.1809%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="13.9835%" y="373" width="0.0105%" height="15" fill="rgb(220,109,13)" fg:x="3986" fg:w="3"/><text x="14.2335%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="13.9940%" y="373" width="0.0105%" height="15" fill="rgb(232,18,1)" fg:x="3989" fg:w="3"/><text x="14.2440%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="14.0046%" y="373" width="0.0140%" height="15" fill="rgb(215,41,42)" fg:x="3992" fg:w="4"/><text x="14.2546%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="14.3589%" y="357" width="0.0105%" height="15" fill="rgb(224,123,36)" fg:x="4093" fg:w="3"/><text x="14.6089%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="14.3694%" y="357" width="0.0210%" height="15" fill="rgb(240,125,3)" fg:x="4096" fg:w="6"/><text x="14.6194%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="14.3905%" y="357" width="0.0316%" height="15" fill="rgb(205,98,50)" fg:x="4102" fg:w="9"/><text x="14.6405%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.03%)</title><rect x="14.4255%" y="357" width="0.0316%" height="15" fill="rgb(205,185,37)" fg:x="4112" fg:w="9"/><text x="14.6755%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="14.4606%" y="357" width="0.0175%" height="15" fill="rgb(238,207,15)" fg:x="4122" fg:w="5"/><text x="14.7106%" y="367.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="14.4852%" y="357" width="0.0105%" height="15" fill="rgb(213,199,42)" fg:x="4129" fg:w="3"/><text x="14.7352%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="14.7097%" y="341" width="0.0140%" height="15" fill="rgb(235,201,11)" fg:x="4193" fg:w="4"/><text x="14.9597%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="14.7237%" y="341" width="0.0210%" height="15" fill="rgb(207,46,11)" fg:x="4197" fg:w="6"/><text x="14.9737%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="14.7448%" y="341" width="0.0175%" height="15" fill="rgb(241,35,35)" fg:x="4203" fg:w="5"/><text x="14.9948%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="14.7658%" y="341" width="0.0105%" height="15" fill="rgb(243,32,47)" fg:x="4209" fg:w="3"/><text x="15.0158%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="14.9202%" y="325" width="0.0105%" height="15" fill="rgb(247,202,23)" fg:x="4253" fg:w="3"/><text x="15.1702%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="14.9307%" y="325" width="0.0210%" height="15" fill="rgb(219,102,11)" fg:x="4256" fg:w="6"/><text x="15.1807%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="14.9518%" y="325" width="0.0105%" height="15" fill="rgb(243,110,44)" fg:x="4262" fg:w="3"/><text x="15.2018%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="15.0851%" y="309" width="0.0105%" height="15" fill="rgb(222,74,54)" fg:x="4300" fg:w="3"/><text x="15.3351%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="15.0956%" y="309" width="0.0140%" height="15" fill="rgb(216,99,12)" fg:x="4303" fg:w="4"/><text x="15.3456%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="15.2044%" y="293" width="0.0175%" height="15" fill="rgb(226,22,26)" fg:x="4334" fg:w="5"/><text x="15.4544%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="15.4815%" y="245" width="0.0140%" height="15" fill="rgb(217,163,10)" fg:x="4413" fg:w="4"/><text x="15.7315%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="15.5762%" y="229" width="0.0105%" height="15" fill="rgb(213,25,53)" fg:x="4440" fg:w="3"/><text x="15.8262%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="15.6499%" y="213" width="0.0140%" height="15" fill="rgb(252,105,26)" fg:x="4461" fg:w="4"/><text x="15.8999%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="15.7200%" y="197" width="0.0140%" height="15" fill="rgb(220,39,43)" fg:x="4481" fg:w="4"/><text x="15.9700%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="15.7937%" y="181" width="0.0140%" height="15" fill="rgb(229,68,48)" fg:x="4502" fg:w="4"/><text x="16.0437%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3 samples, 0.01%)</title><rect x="15.9060%" y="37" width="0.0105%" height="15" fill="rgb(252,8,32)" fg:x="4534" fg:w="3"/><text x="16.1560%" y="47.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4 samples, 0.01%)</title><rect x="15.9060%" y="53" width="0.0140%" height="15" fill="rgb(223,20,43)" fg:x="4534" fg:w="4"/><text x="16.1560%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (5 samples, 0.02%)</title><rect x="15.9060%" y="69" width="0.0175%" height="15" fill="rgb(229,81,49)" fg:x="4534" fg:w="5"/><text x="16.1560%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (6 samples, 0.02%)</title><rect x="15.9060%" y="85" width="0.0210%" height="15" fill="rgb(236,28,36)" fg:x="4534" fg:w="6"/><text x="16.1560%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (8 samples, 0.03%)</title><rect x="15.9060%" y="101" width="0.0281%" height="15" fill="rgb(249,185,26)" fg:x="4534" fg:w="8"/><text x="16.1560%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23 samples, 0.08%)</title><rect x="15.8814%" y="117" width="0.0807%" height="15" fill="rgb(249,174,33)" fg:x="4527" fg:w="23"/><text x="16.1314%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (8 samples, 0.03%)</title><rect x="15.9340%" y="101" width="0.0281%" height="15" fill="rgb(233,201,37)" fg:x="4542" fg:w="8"/><text x="16.1840%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="15.9937%" y="101" width="0.0105%" height="15" fill="rgb(221,78,26)" fg:x="4559" fg:w="3"/><text x="16.2437%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (42 samples, 0.15%)</title><rect x="15.8639%" y="133" width="0.1473%" height="15" fill="rgb(250,127,30)" fg:x="4522" fg:w="42"/><text x="16.1139%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (14 samples, 0.05%)</title><rect x="15.9621%" y="117" width="0.0491%" height="15" fill="rgb(230,49,44)" fg:x="4550" fg:w="14"/><text x="16.2121%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (71 samples, 0.25%)</title><rect x="15.8463%" y="149" width="0.2491%" height="15" fill="rgb(229,67,23)" fg:x="4517" fg:w="71"/><text x="16.0963%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (24 samples, 0.08%)</title><rect x="16.0112%" y="133" width="0.0842%" height="15" fill="rgb(249,83,47)" fg:x="4564" fg:w="24"/><text x="16.2612%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="16.1621%" y="133" width="0.0140%" height="15" fill="rgb(215,43,3)" fg:x="4607" fg:w="4"/><text x="16.4121%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="16.1761%" y="133" width="0.0140%" height="15" fill="rgb(238,154,13)" fg:x="4611" fg:w="4"/><text x="16.4261%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="16.1796%" y="117" width="0.0105%" height="15" fill="rgb(219,56,2)" fg:x="4612" fg:w="3"/><text x="16.4296%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (103 samples, 0.36%)</title><rect x="15.8358%" y="165" width="0.3613%" height="15" fill="rgb(233,0,4)" fg:x="4514" fg:w="103"/><text x="16.0858%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (29 samples, 0.10%)</title><rect x="16.0954%" y="149" width="0.1017%" height="15" fill="rgb(235,30,7)" fg:x="4588" fg:w="29"/><text x="16.3454%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="16.3094%" y="117" width="0.0105%" height="15" fill="rgb(250,79,13)" fg:x="4649" fg:w="3"/><text x="16.5594%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="16.3059%" y="149" width="0.0210%" height="15" fill="rgb(211,146,34)" fg:x="4648" fg:w="6"/><text x="16.5559%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="16.3094%" y="133" width="0.0175%" height="15" fill="rgb(228,22,38)" fg:x="4649" fg:w="5"/><text x="16.5594%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (151 samples, 0.53%)</title><rect x="15.8113%" y="181" width="0.5297%" height="15" fill="rgb(235,168,5)" fg:x="4507" fg:w="151"/><text x="16.0613%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (41 samples, 0.14%)</title><rect x="16.1972%" y="165" width="0.1438%" height="15" fill="rgb(221,155,16)" fg:x="4617" fg:w="41"/><text x="16.4472%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="16.5480%" y="165" width="0.0140%" height="15" fill="rgb(215,215,53)" fg:x="4717" fg:w="4"/><text x="16.7980%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="16.5515%" y="149" width="0.0105%" height="15" fill="rgb(223,4,10)" fg:x="4718" fg:w="3"/><text x="16.8015%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="16.5515%" y="133" width="0.0105%" height="15" fill="rgb(234,103,6)" fg:x="4718" fg:w="3"/><text x="16.8015%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="16.5620%" y="165" width="0.0175%" height="15" fill="rgb(227,97,0)" fg:x="4721" fg:w="5"/><text x="16.8120%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="16.5655%" y="149" width="0.0140%" height="15" fill="rgb(234,150,53)" fg:x="4722" fg:w="4"/><text x="16.8155%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (242 samples, 0.85%)</title><rect x="15.7411%" y="197" width="0.8490%" height="15" fill="rgb(228,201,54)" fg:x="4487" fg:w="242"/><text x="15.9911%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (71 samples, 0.25%)</title><rect x="16.3410%" y="181" width="0.2491%" height="15" fill="rgb(222,22,37)" fg:x="4658" fg:w="71"/><text x="16.5910%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="16.9269%" y="181" width="0.0210%" height="15" fill="rgb(237,53,32)" fg:x="4825" fg:w="6"/><text x="17.1769%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="16.9304%" y="165" width="0.0175%" height="15" fill="rgb(233,25,53)" fg:x="4826" fg:w="5"/><text x="17.1804%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="16.9339%" y="149" width="0.0140%" height="15" fill="rgb(210,40,34)" fg:x="4827" fg:w="4"/><text x="17.1839%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="16.9479%" y="181" width="0.0386%" height="15" fill="rgb(241,220,44)" fg:x="4831" fg:w="11"/><text x="17.1979%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="16.9760%" y="165" width="0.0105%" height="15" fill="rgb(235,28,35)" fg:x="4839" fg:w="3"/><text x="17.2260%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (377 samples, 1.32%)</title><rect x="15.6780%" y="213" width="1.3226%" height="15" fill="rgb(210,56,17)" fg:x="4469" fg:w="377"/><text x="15.9280%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (117 samples, 0.41%)</title><rect x="16.5901%" y="197" width="0.4105%" height="15" fill="rgb(224,130,29)" fg:x="4729" fg:w="117"/><text x="16.8401%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="16.9865%" y="181" width="0.0140%" height="15" fill="rgb(235,212,8)" fg:x="4842" fg:w="4"/><text x="17.2365%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.05%)</title><rect x="17.4496%" y="197" width="0.0491%" height="15" fill="rgb(223,33,50)" fg:x="4974" fg:w="14"/><text x="17.6996%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="17.4741%" y="181" width="0.0246%" height="15" fill="rgb(219,149,13)" fg:x="4981" fg:w="7"/><text x="17.7241%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="17.4776%" y="165" width="0.0210%" height="15" fill="rgb(250,156,29)" fg:x="4982" fg:w="6"/><text x="17.7276%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="17.4811%" y="149" width="0.0175%" height="15" fill="rgb(216,193,19)" fg:x="4983" fg:w="5"/><text x="17.7311%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.04%)</title><rect x="17.5022%" y="197" width="0.0351%" height="15" fill="rgb(216,135,14)" fg:x="4989" fg:w="10"/><text x="17.7522%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="17.5197%" y="181" width="0.0175%" height="15" fill="rgb(241,47,5)" fg:x="4994" fg:w="5"/><text x="17.7697%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (560 samples, 1.96%)</title><rect x="15.5867%" y="229" width="1.9646%" height="15" fill="rgb(233,42,35)" fg:x="4443" fg:w="560"/><text x="15.8367%" y="239.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (157 samples, 0.55%)</title><rect x="17.0005%" y="213" width="0.5508%" height="15" fill="rgb(231,13,6)" fg:x="4846" fg:w="157"/><text x="17.2505%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="17.5373%" y="197" width="0.0140%" height="15" fill="rgb(207,181,40)" fg:x="4999" fg:w="4"/><text x="17.7873%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.05%)</title><rect x="17.9197%" y="213" width="0.0491%" height="15" fill="rgb(254,173,49)" fg:x="5108" fg:w="14"/><text x="18.1697%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.04%)</title><rect x="17.9302%" y="197" width="0.0386%" height="15" fill="rgb(221,1,38)" fg:x="5111" fg:w="11"/><text x="18.1802%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="17.9442%" y="181" width="0.0246%" height="15" fill="rgb(206,124,46)" fg:x="5115" fg:w="7"/><text x="18.1942%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.04%)</title><rect x="17.9723%" y="213" width="0.0351%" height="15" fill="rgb(249,21,11)" fg:x="5123" fg:w="10"/><text x="18.2223%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="17.9863%" y="197" width="0.0210%" height="15" fill="rgb(222,201,40)" fg:x="5127" fg:w="6"/><text x="18.2363%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (718 samples, 2.52%)</title><rect x="15.5061%" y="245" width="2.5189%" height="15" fill="rgb(235,61,29)" fg:x="4420" fg:w="718"/><text x="15.7561%" y="255.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (135 samples, 0.47%)</title><rect x="17.5513%" y="229" width="0.4736%" height="15" fill="rgb(219,207,3)" fg:x="5003" fg:w="135"/><text x="17.8013%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="18.0074%" y="213" width="0.0175%" height="15" fill="rgb(222,56,46)" fg:x="5133" fg:w="5"/><text x="18.2574%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="18.4564%" y="197" width="0.0175%" height="15" fill="rgb(239,76,54)" fg:x="5261" fg:w="5"/><text x="18.7064%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.06%)</title><rect x="18.4248%" y="229" width="0.0561%" height="15" fill="rgb(231,124,27)" fg:x="5252" fg:w="16"/><text x="18.6748%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.04%)</title><rect x="18.4459%" y="213" width="0.0351%" height="15" fill="rgb(249,195,6)" fg:x="5258" fg:w="10"/><text x="18.6959%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.04%)</title><rect x="18.4810%" y="229" width="0.0351%" height="15" fill="rgb(237,174,47)" fg:x="5268" fg:w="10"/><text x="18.7310%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.02%)</title><rect x="18.4915%" y="213" width="0.0246%" height="15" fill="rgb(206,201,31)" fg:x="5271" fg:w="7"/><text x="18.7415%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (891 samples, 3.13%)</title><rect x="15.3938%" y="261" width="3.1258%" height="15" fill="rgb(231,57,52)" fg:x="4388" fg:w="891"/><text x="15.6438%" y="271.50">sud..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (141 samples, 0.49%)</title><rect x="18.0249%" y="245" width="0.4947%" height="15" fill="rgb(248,177,22)" fg:x="5138" fg:w="141"/><text x="18.2749%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="18.8528%" y="213" width="0.0316%" height="15" fill="rgb(215,211,37)" fg:x="5374" fg:w="9"/><text x="19.1028%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.06%)</title><rect x="18.8318%" y="245" width="0.0561%" height="15" fill="rgb(241,128,51)" fg:x="5368" fg:w="16"/><text x="19.0818%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.04%)</title><rect x="18.8458%" y="229" width="0.0421%" height="15" fill="rgb(227,165,31)" fg:x="5372" fg:w="12"/><text x="19.0958%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="18.8879%" y="245" width="0.0316%" height="15" fill="rgb(228,167,24)" fg:x="5384" fg:w="9"/><text x="19.1379%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="18.8984%" y="229" width="0.0210%" height="15" fill="rgb(228,143,12)" fg:x="5387" fg:w="6"/><text x="19.1484%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,034 samples, 3.63%)</title><rect x="15.3131%" y="277" width="3.6274%" height="15" fill="rgb(249,149,8)" fg:x="4365" fg:w="1034"/><text x="15.5631%" y="287.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (120 samples, 0.42%)</title><rect x="18.5196%" y="261" width="0.4210%" height="15" fill="rgb(243,35,44)" fg:x="5279" fg:w="120"/><text x="18.7696%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="18.9265%" y="245" width="0.0140%" height="15" fill="rgb(246,89,9)" fg:x="5395" fg:w="4"/><text x="19.1765%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.06%)</title><rect x="19.2843%" y="261" width="0.0631%" height="15" fill="rgb(233,213,13)" fg:x="5497" fg:w="18"/><text x="19.5343%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.04%)</title><rect x="19.3089%" y="245" width="0.0386%" height="15" fill="rgb(233,141,41)" fg:x="5504" fg:w="11"/><text x="19.5589%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.04%)</title><rect x="19.3124%" y="229" width="0.0351%" height="15" fill="rgb(239,167,4)" fg:x="5505" fg:w="10"/><text x="19.5624%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="19.3335%" y="213" width="0.0140%" height="15" fill="rgb(209,217,16)" fg:x="5511" fg:w="4"/><text x="19.5835%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="19.3791%" y="245" width="0.0210%" height="15" fill="rgb(219,88,35)" fg:x="5524" fg:w="6"/><text x="19.6291%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.06%)</title><rect x="19.3475%" y="261" width="0.0561%" height="15" fill="rgb(220,193,23)" fg:x="5515" fg:w="16"/><text x="19.5975%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,192 samples, 4.18%)</title><rect x="15.2289%" y="293" width="4.1817%" height="15" fill="rgb(230,90,52)" fg:x="4341" fg:w="1192"/><text x="15.4789%" y="303.50">sudok..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (134 samples, 0.47%)</title><rect x="18.9405%" y="277" width="0.4701%" height="15" fill="rgb(252,106,19)" fg:x="5399" fg:w="134"/><text x="19.1905%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.04%)</title><rect x="19.8527%" y="245" width="0.0386%" height="15" fill="rgb(206,74,20)" fg:x="5659" fg:w="11"/><text x="20.1027%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="19.8772%" y="229" width="0.0140%" height="15" fill="rgb(230,138,44)" fg:x="5666" fg:w="4"/><text x="20.1272%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.08%)</title><rect x="19.8176%" y="277" width="0.0842%" height="15" fill="rgb(235,182,43)" fg:x="5649" fg:w="24"/><text x="20.0676%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.06%)</title><rect x="19.8386%" y="261" width="0.0631%" height="15" fill="rgb(242,16,51)" fg:x="5655" fg:w="18"/><text x="20.0886%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="19.8912%" y="245" width="0.0105%" height="15" fill="rgb(248,9,4)" fg:x="5670" fg:w="3"/><text x="20.1412%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="19.9018%" y="277" width="0.0491%" height="15" fill="rgb(210,31,22)" fg:x="5673" fg:w="14"/><text x="20.1518%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.03%)</title><rect x="19.9193%" y="261" width="0.0316%" height="15" fill="rgb(239,54,39)" fg:x="5678" fg:w="9"/><text x="20.1693%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="19.9509%" y="277" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="5687" fg:w="8"/><text x="20.2009%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,388 samples, 4.87%)</title><rect x="15.1131%" y="309" width="4.8693%" height="15" fill="rgb(253,106,12)" fg:x="4308" fg:w="1388"/><text x="15.3631%" y="319.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (163 samples, 0.57%)</title><rect x="19.4106%" y="293" width="0.5718%" height="15" fill="rgb(213,46,41)" fg:x="5533" fg:w="163"/><text x="19.6606%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.04%)</title><rect x="20.6139%" y="261" width="0.0421%" height="15" fill="rgb(215,133,35)" fg:x="5876" fg:w="12"/><text x="20.8639%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="20.6455%" y="245" width="0.0105%" height="15" fill="rgb(213,28,5)" fg:x="5885" fg:w="3"/><text x="20.8955%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.08%)</title><rect x="20.5824%" y="293" width="0.0807%" height="15" fill="rgb(215,77,49)" fg:x="5867" fg:w="23"/><text x="20.8324%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.06%)</title><rect x="20.5999%" y="277" width="0.0631%" height="15" fill="rgb(248,100,22)" fg:x="5872" fg:w="18"/><text x="20.8499%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.07%)</title><rect x="20.6630%" y="293" width="0.0702%" height="15" fill="rgb(208,67,9)" fg:x="5890" fg:w="20"/><text x="20.9130%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="20.6946%" y="277" width="0.0386%" height="15" fill="rgb(219,133,21)" fg:x="5899" fg:w="11"/><text x="20.9446%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="20.7332%" y="293" width="0.0105%" height="15" fill="rgb(246,46,29)" fg:x="5910" fg:w="3"/><text x="20.9832%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,646 samples, 5.77%)</title><rect x="14.9798%" y="325" width="5.7744%" height="15" fill="rgb(246,185,52)" fg:x="4270" fg:w="1646"/><text x="15.2298%" y="335.50">sudoku-..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (220 samples, 0.77%)</title><rect x="19.9825%" y="309" width="0.7718%" height="15" fill="rgb(252,136,11)" fg:x="5696" fg:w="220"/><text x="20.2325%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.06%)</title><rect x="21.6874%" y="277" width="0.0596%" height="15" fill="rgb(219,138,53)" fg:x="6182" fg:w="17"/><text x="21.9374%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="21.7330%" y="261" width="0.0140%" height="15" fill="rgb(211,51,23)" fg:x="6195" fg:w="4"/><text x="21.9830%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.10%)</title><rect x="21.6558%" y="309" width="0.0982%" height="15" fill="rgb(247,221,28)" fg:x="6173" fg:w="28"/><text x="21.9058%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.08%)</title><rect x="21.6734%" y="293" width="0.0807%" height="15" fill="rgb(251,222,45)" fg:x="6178" fg:w="23"/><text x="21.9234%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="21.7541%" y="309" width="0.0140%" height="15" fill="rgb(217,162,53)" fg:x="6201" fg:w="4"/><text x="22.0041%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.04%)</title><rect x="21.8067%" y="293" width="0.0351%" height="15" fill="rgb(229,93,14)" fg:x="6216" fg:w="10"/><text x="22.0567%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="21.7681%" y="309" width="0.0772%" height="15" fill="rgb(209,67,49)" fg:x="6205" fg:w="22"/><text x="22.0181%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.04%)</title><rect x="21.8453%" y="309" width="0.0386%" height="15" fill="rgb(213,87,29)" fg:x="6227" fg:w="11"/><text x="22.0953%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,024 samples, 7.10%)</title><rect x="14.7869%" y="341" width="7.1005%" height="15" fill="rgb(205,151,52)" fg:x="4215" fg:w="2024"/><text x="15.0369%" y="351.50">sudoku-sol..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (323 samples, 1.13%)</title><rect x="20.7543%" y="325" width="1.1331%" height="15" fill="rgb(253,215,39)" fg:x="5916" fg:w="323"/><text x="21.0043%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.08%)</title><rect x="23.2907%" y="293" width="0.0842%" height="15" fill="rgb(221,220,41)" fg:x="6639" fg:w="24"/><text x="23.5407%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="23.3327%" y="277" width="0.0421%" height="15" fill="rgb(218,133,21)" fg:x="6651" fg:w="12"/><text x="23.5827%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.15%)</title><rect x="23.2310%" y="325" width="0.1544%" height="15" fill="rgb(221,193,43)" fg:x="6622" fg:w="44"/><text x="23.4810%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.12%)</title><rect x="23.2626%" y="309" width="0.1228%" height="15" fill="rgb(240,128,52)" fg:x="6631" fg:w="35"/><text x="23.5126%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="23.3748%" y="293" width="0.0105%" height="15" fill="rgb(253,114,12)" fg:x="6663" fg:w="3"/><text x="23.6248%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="23.3854%" y="325" width="0.0105%" height="15" fill="rgb(215,223,47)" fg:x="6666" fg:w="3"/><text x="23.6354%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.06%)</title><rect x="23.4415%" y="309" width="0.0561%" height="15" fill="rgb(248,225,23)" fg:x="6682" fg:w="16"/><text x="23.6915%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.11%)</title><rect x="23.3959%" y="325" width="0.1052%" height="15" fill="rgb(250,108,0)" fg:x="6669" fg:w="30"/><text x="23.6459%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="23.5011%" y="325" width="0.0105%" height="15" fill="rgb(228,208,7)" fg:x="6699" fg:w="3"/><text x="23.7511%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="23.5117%" y="325" width="0.0105%" height="15" fill="rgb(244,45,10)" fg:x="6702" fg:w="3"/><text x="23.7617%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,574 samples, 9.03%)</title><rect x="14.4957%" y="357" width="9.0300%" height="15" fill="rgb(207,125,25)" fg:x="4132" fg:w="2574"/><text x="14.7457%" y="367.50">sudoku-solver..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (467 samples, 1.64%)</title><rect x="21.8874%" y="341" width="1.6383%" height="15" fill="rgb(210,195,18)" fg:x="6239" fg:w="467"/><text x="22.1374%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="25.5043%" y="325" width="0.0210%" height="15" fill="rgb(249,80,12)" fg:x="7270" fg:w="6"/><text x="25.7543%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (38 samples, 0.13%)</title><rect x="25.5429%" y="309" width="0.1333%" height="15" fill="rgb(221,65,9)" fg:x="7281" fg:w="38"/><text x="25.7929%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="25.6376%" y="293" width="0.0386%" height="15" fill="rgb(235,49,36)" fg:x="7308" fg:w="11"/><text x="25.8876%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (71 samples, 0.25%)</title><rect x="25.4341%" y="341" width="0.2491%" height="15" fill="rgb(225,32,20)" fg:x="7250" fg:w="71"/><text x="25.6841%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.16%)</title><rect x="25.5253%" y="325" width="0.1579%" height="15" fill="rgb(215,141,46)" fg:x="7276" fg:w="45"/><text x="25.7753%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="25.6832%" y="341" width="0.0210%" height="15" fill="rgb(250,160,47)" fg:x="7321" fg:w="6"/><text x="25.9332%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (24 samples, 0.08%)</title><rect x="25.7709%" y="325" width="0.0842%" height="15" fill="rgb(216,222,40)" fg:x="7346" fg:w="24"/><text x="26.0209%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (44 samples, 0.15%)</title><rect x="25.7043%" y="341" width="0.1544%" height="15" fill="rgb(234,217,39)" fg:x="7327" fg:w="44"/><text x="25.9543%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="25.8586%" y="341" width="0.0105%" height="15" fill="rgb(207,178,40)" fg:x="7371" fg:w="3"/><text x="26.1086%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.05%)</title><rect x="25.8691%" y="341" width="0.0526%" height="15" fill="rgb(221,136,13)" fg:x="7374" fg:w="15"/><text x="26.1191%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3,395 samples, 11.91%)</title><rect x="14.0186%" y="373" width="11.9102%" height="15" fill="rgb(249,199,10)" fg:x="3996" fg:w="3395"/><text x="14.2686%" y="383.50">sudoku-solver`sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (685 samples, 2.40%)</title><rect x="23.5257%" y="357" width="2.4031%" height="15" fill="rgb(249,222,13)" fg:x="6706" fg:w="685"/><text x="23.7757%" y="367.50">su..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="28.8195%" y="341" width="0.0105%" height="15" fill="rgb(244,185,38)" fg:x="8215" fg:w="3"/><text x="29.0695%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (45 samples, 0.16%)</title><rect x="28.8932%" y="325" width="0.1579%" height="15" fill="rgb(236,202,9)" fg:x="8236" fg:w="45"/><text x="29.1432%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="29.0019%" y="309" width="0.0491%" height="15" fill="rgb(250,229,37)" fg:x="8267" fg:w="14"/><text x="29.2519%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (101 samples, 0.35%)</title><rect x="28.7143%" y="357" width="0.3543%" height="15" fill="rgb(206,174,23)" fg:x="8185" fg:w="101"/><text x="28.9643%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (68 samples, 0.24%)</title><rect x="28.8300%" y="341" width="0.2386%" height="15" fill="rgb(211,33,43)" fg:x="8218" fg:w="68"/><text x="29.0800%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="29.0510%" y="325" width="0.0175%" height="15" fill="rgb(245,58,50)" fg:x="8281" fg:w="5"/><text x="29.3010%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.03%)</title><rect x="29.0686%" y="357" width="0.0316%" height="15" fill="rgb(244,68,36)" fg:x="8286" fg:w="9"/><text x="29.3186%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (41 samples, 0.14%)</title><rect x="29.2335%" y="341" width="0.1438%" height="15" fill="rgb(232,229,15)" fg:x="8333" fg:w="41"/><text x="29.4835%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (80 samples, 0.28%)</title><rect x="29.1002%" y="357" width="0.2807%" height="15" fill="rgb(254,30,23)" fg:x="8295" fg:w="80"/><text x="29.3502%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.04%)</title><rect x="29.3808%" y="357" width="0.0386%" height="15" fill="rgb(235,160,14)" fg:x="8375" fg:w="11"/><text x="29.6308%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (18 samples, 0.06%)</title><rect x="29.4194%" y="357" width="0.0631%" height="15" fill="rgb(212,155,44)" fg:x="8386" fg:w="18"/><text x="29.6694%" y="367.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4,565 samples, 16.01%)</title><rect x="13.4959%" y="389" width="16.0147%" height="15" fill="rgb(226,2,50)" fg:x="3847" fg:w="4565"/><text x="13.7459%" y="399.50">sudoku-solver`sudoku_solv..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,021 samples, 3.58%)</title><rect x="25.9288%" y="373" width="3.5818%" height="15" fill="rgb(234,177,6)" fg:x="7391" fg:w="1021"/><text x="26.1788%" y="383.50">sudo..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="29.4861%" y="357" width="0.0246%" height="15" fill="rgb(217,24,9)" fg:x="8405" fg:w="7"/><text x="29.7361%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="33.1696%" y="357" width="0.0281%" height="15" fill="rgb(220,13,46)" fg:x="9455" fg:w="8"/><text x="33.4196%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (86 samples, 0.30%)</title><rect x="33.2398%" y="341" width="0.3017%" height="15" fill="rgb(239,221,27)" fg:x="9475" fg:w="86"/><text x="33.4898%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.08%)</title><rect x="33.4608%" y="325" width="0.0807%" height="15" fill="rgb(222,198,25)" fg:x="9538" fg:w="23"/><text x="33.7108%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (160 samples, 0.56%)</title><rect x="33.0188%" y="373" width="0.5613%" height="15" fill="rgb(211,99,13)" fg:x="9412" fg:w="160"/><text x="33.2688%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (109 samples, 0.38%)</title><rect x="33.1977%" y="357" width="0.3824%" height="15" fill="rgb(232,111,31)" fg:x="9463" fg:w="109"/><text x="33.4477%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="33.5415%" y="341" width="0.0386%" height="15" fill="rgb(245,82,37)" fg:x="9561" fg:w="11"/><text x="33.7915%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="33.5801%" y="373" width="0.0246%" height="15" fill="rgb(227,149,46)" fg:x="9572" fg:w="7"/><text x="33.8301%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (46 samples, 0.16%)</title><rect x="33.7660%" y="357" width="0.1614%" height="15" fill="rgb(218,36,50)" fg:x="9625" fg:w="46"/><text x="34.0160%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (93 samples, 0.33%)</title><rect x="33.6046%" y="373" width="0.3263%" height="15" fill="rgb(226,80,48)" fg:x="9579" fg:w="93"/><text x="33.8546%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="33.9309%" y="373" width="0.0105%" height="15" fill="rgb(238,224,15)" fg:x="9672" fg:w="3"/><text x="34.1809%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (26 samples, 0.09%)</title><rect x="33.9414%" y="373" width="0.0912%" height="15" fill="rgb(241,136,10)" fg:x="9675" fg:w="26"/><text x="34.1914%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="34.0326%" y="373" width="0.0105%" height="15" fill="rgb(208,32,45)" fg:x="9701" fg:w="3"/><text x="34.2826%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (6,077 samples, 21.32%)</title><rect x="12.7451%" y="405" width="21.3191%" height="15" fill="rgb(207,135,9)" fg:x="3633" fg:w="6077"/><text x="12.9951%" y="415.50">sudoku-solver`sudoku_solver::backt..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,298 samples, 4.55%)</title><rect x="29.5106%" y="389" width="4.5536%" height="15" fill="rgb(206,86,44)" fg:x="8412" fg:w="1298"/><text x="29.7606%" y="399.50">sudok..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="34.0432%" y="373" width="0.0210%" height="15" fill="rgb(245,177,15)" fg:x="9704" fg:w="6"/><text x="34.2932%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="38.7020%" y="373" width="0.0105%" height="15" fill="rgb(206,64,50)" fg:x="11032" fg:w="3"/><text x="38.9520%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (91 samples, 0.32%)</title><rect x="38.8037%" y="357" width="0.3192%" height="15" fill="rgb(234,36,40)" fg:x="11061" fg:w="91"/><text x="39.0537%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (32 samples, 0.11%)</title><rect x="39.0107%" y="341" width="0.1123%" height="15" fill="rgb(213,64,8)" fg:x="11120" fg:w="32"/><text x="39.2607%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (167 samples, 0.59%)</title><rect x="38.5546%" y="389" width="0.5859%" height="15" fill="rgb(210,75,36)" fg:x="10990" fg:w="167"/><text x="38.8046%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (122 samples, 0.43%)</title><rect x="38.7125%" y="373" width="0.4280%" height="15" fill="rgb(229,88,21)" fg:x="11035" fg:w="122"/><text x="38.9625%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="39.1230%" y="357" width="0.0175%" height="15" fill="rgb(252,204,47)" fg:x="11152" fg:w="5"/><text x="39.3730%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.03%)</title><rect x="39.1405%" y="389" width="0.0281%" height="15" fill="rgb(208,77,27)" fg:x="11157" fg:w="8"/><text x="39.3905%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (57 samples, 0.20%)</title><rect x="39.4247%" y="373" width="0.2000%" height="15" fill="rgb(221,76,26)" fg:x="11238" fg:w="57"/><text x="39.6747%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (132 samples, 0.46%)</title><rect x="39.1686%" y="389" width="0.4631%" height="15" fill="rgb(225,139,18)" fg:x="11165" fg:w="132"/><text x="39.4186%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="39.6316%" y="389" width="0.0210%" height="15" fill="rgb(230,137,11)" fg:x="11297" fg:w="6"/><text x="39.8816%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (46 samples, 0.16%)</title><rect x="39.6527%" y="389" width="0.1614%" height="15" fill="rgb(212,28,1)" fg:x="11303" fg:w="46"/><text x="39.9027%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="39.8141%" y="389" width="0.0105%" height="15" fill="rgb(248,164,17)" fg:x="11349" fg:w="3"/><text x="40.0641%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (8,027 samples, 28.16%)</title><rect x="11.6857%" y="421" width="28.1600%" height="15" fill="rgb(222,171,42)" fg:x="3331" fg:w="8027"/><text x="11.9357%" y="431.50">sudoku-solver`sudoku_solver::backtraking::bac..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,648 samples, 5.78%)</title><rect x="34.0642%" y="405" width="5.7814%" height="15" fill="rgb(243,84,45)" fg:x="9710" fg:w="1648"/><text x="34.3142%" y="415.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="39.8246%" y="389" width="0.0210%" height="15" fill="rgb(252,49,23)" fg:x="11352" fg:w="6"/><text x="40.0746%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.04%)</title><rect x="44.8658%" y="389" width="0.0351%" height="15" fill="rgb(215,19,7)" fg:x="12789" fg:w="10"/><text x="45.1158%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (95 samples, 0.33%)</title><rect x="44.9956%" y="373" width="0.3333%" height="15" fill="rgb(238,81,41)" fg:x="12826" fg:w="95"/><text x="45.2456%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.10%)</title><rect x="45.2307%" y="357" width="0.0982%" height="15" fill="rgb(210,199,37)" fg:x="12893" fg:w="28"/><text x="45.4807%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (198 samples, 0.69%)</title><rect x="44.6799%" y="405" width="0.6946%" height="15" fill="rgb(244,192,49)" fg:x="12736" fg:w="198"/><text x="44.9299%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (135 samples, 0.47%)</title><rect x="44.9009%" y="389" width="0.4736%" height="15" fill="rgb(226,211,11)" fg:x="12799" fg:w="135"/><text x="45.1509%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="45.3289%" y="373" width="0.0456%" height="15" fill="rgb(236,162,54)" fg:x="12921" fg:w="13"/><text x="45.5789%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.05%)</title><rect x="45.3745%" y="405" width="0.0526%" height="15" fill="rgb(220,229,9)" fg:x="12934" fg:w="15"/><text x="45.6245%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (77 samples, 0.27%)</title><rect x="45.6692%" y="389" width="0.2701%" height="15" fill="rgb(250,87,22)" fg:x="13018" fg:w="77"/><text x="45.9192%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (151 samples, 0.53%)</title><rect x="45.4271%" y="405" width="0.5297%" height="15" fill="rgb(239,43,17)" fg:x="12949" fg:w="151"/><text x="45.6771%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="45.9393%" y="389" width="0.0175%" height="15" fill="rgb(231,177,25)" fg:x="13095" fg:w="5"/><text x="46.1893%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="45.9568%" y="405" width="0.0105%" height="15" fill="rgb(219,179,1)" fg:x="13100" fg:w="3"/><text x="46.2068%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (56 samples, 0.20%)</title><rect x="45.9674%" y="405" width="0.1965%" height="15" fill="rgb(238,219,53)" fg:x="13103" fg:w="56"/><text x="46.2174%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="46.1638%" y="405" width="0.0316%" height="15" fill="rgb(232,167,36)" fg:x="13159" fg:w="9"/><text x="46.4138%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (10,141 samples, 35.58%)</title><rect x="10.6578%" y="437" width="35.5762%" height="15" fill="rgb(244,19,51)" fg:x="3038" fg:w="10141"/><text x="10.9078%" y="447.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recu..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,821 samples, 6.39%)</title><rect x="39.8456%" y="421" width="6.3884%" height="15" fill="rgb(224,6,22)" fg:x="11358" fg:w="1821"/><text x="40.0956%" y="431.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.04%)</title><rect x="46.1954%" y="405" width="0.0386%" height="15" fill="rgb(224,145,5)" fg:x="13168" fg:w="11"/><text x="46.4454%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.04%)</title><rect x="50.9525%" y="405" width="0.0386%" height="15" fill="rgb(234,130,49)" fg:x="14524" fg:w="11"/><text x="51.2025%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (113 samples, 0.40%)</title><rect x="51.0893%" y="389" width="0.3964%" height="15" fill="rgb(254,6,2)" fg:x="14563" fg:w="113"/><text x="51.3393%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (42 samples, 0.15%)</title><rect x="51.3384%" y="373" width="0.1473%" height="15" fill="rgb(208,96,46)" fg:x="14634" fg:w="42"/><text x="51.5884%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (225 samples, 0.79%)</title><rect x="50.7420%" y="421" width="0.7893%" height="15" fill="rgb(239,3,39)" fg:x="14464" fg:w="225"/><text x="50.9920%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (154 samples, 0.54%)</title><rect x="50.9911%" y="405" width="0.5403%" height="15" fill="rgb(233,210,1)" fg:x="14535" fg:w="154"/><text x="51.2411%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="51.4857%" y="389" width="0.0456%" height="15" fill="rgb(244,137,37)" fg:x="14676" fg:w="13"/><text x="51.7357%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="51.5313%" y="421" width="0.0175%" height="15" fill="rgb(240,136,2)" fg:x="14689" fg:w="5"/><text x="51.7813%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (66 samples, 0.23%)</title><rect x="51.7944%" y="405" width="0.2315%" height="15" fill="rgb(239,18,37)" fg:x="14764" fg:w="66"/><text x="52.0444%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (139 samples, 0.49%)</title><rect x="51.5489%" y="421" width="0.4876%" height="15" fill="rgb(218,185,22)" fg:x="14694" fg:w="139"/><text x="51.7989%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="52.0260%" y="405" width="0.0105%" height="15" fill="rgb(225,218,4)" fg:x="14830" fg:w="3"/><text x="52.2760%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="52.0365%" y="421" width="0.0175%" height="15" fill="rgb(230,182,32)" fg:x="14833" fg:w="5"/><text x="52.2865%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (47 samples, 0.16%)</title><rect x="52.0540%" y="421" width="0.1649%" height="15" fill="rgb(242,56,43)" fg:x="14838" fg:w="47"/><text x="52.3040%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="52.2189%" y="421" width="0.0105%" height="15" fill="rgb(233,99,24)" fg:x="14885" fg:w="3"/><text x="52.4689%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (12,182 samples, 42.74%)</title><rect x="9.5282%" y="453" width="42.7364%" height="15" fill="rgb(234,209,42)" fg:x="2716" fg:w="12182"/><text x="9.7782%" y="463.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,719 samples, 6.03%)</title><rect x="46.2340%" y="437" width="6.0305%" height="15" fill="rgb(227,7,12)" fg:x="13179" fg:w="1719"/><text x="46.4840%" y="447.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.04%)</title><rect x="52.2294%" y="421" width="0.0351%" height="15" fill="rgb(245,203,43)" fg:x="14888" fg:w="10"/><text x="52.4794%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (118 samples, 0.41%)</title><rect x="57.1093%" y="405" width="0.4140%" height="15" fill="rgb(238,205,33)" fg:x="16279" fg:w="118"/><text x="57.3593%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (43 samples, 0.15%)</title><rect x="57.3724%" y="389" width="0.1509%" height="15" fill="rgb(231,56,7)" fg:x="16354" fg:w="43"/><text x="57.6224%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (204 samples, 0.72%)</title><rect x="56.8321%" y="437" width="0.7157%" height="15" fill="rgb(244,186,29)" fg:x="16200" fg:w="204"/><text x="57.0821%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (147 samples, 0.52%)</title><rect x="57.0321%" y="421" width="0.5157%" height="15" fill="rgb(234,111,31)" fg:x="16257" fg:w="147"/><text x="57.2821%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="57.5232%" y="405" width="0.0246%" height="15" fill="rgb(241,149,10)" fg:x="16397" fg:w="7"/><text x="57.7732%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.03%)</title><rect x="57.5478%" y="437" width="0.0281%" height="15" fill="rgb(249,206,44)" fg:x="16404" fg:w="8"/><text x="57.7978%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (54 samples, 0.19%)</title><rect x="57.8074%" y="421" width="0.1894%" height="15" fill="rgb(251,153,30)" fg:x="16478" fg:w="54"/><text x="58.0574%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (126 samples, 0.44%)</title><rect x="57.5759%" y="437" width="0.4420%" height="15" fill="rgb(239,152,38)" fg:x="16412" fg:w="126"/><text x="57.8259%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="57.9968%" y="421" width="0.0210%" height="15" fill="rgb(249,139,47)" fg:x="16532" fg:w="6"/><text x="58.2468%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="58.0179%" y="437" width="0.0246%" height="15" fill="rgb(244,64,35)" fg:x="16538" fg:w="7"/><text x="58.2679%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (38 samples, 0.13%)</title><rect x="58.0424%" y="437" width="0.1333%" height="15" fill="rgb(216,46,15)" fg:x="16545" fg:w="38"/><text x="58.2924%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="58.1758%" y="437" width="0.0175%" height="15" fill="rgb(250,74,19)" fg:x="16583" fg:w="5"/><text x="58.4258%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,179 samples, 49.74%)</title><rect x="8.4722%" y="469" width="49.7422%" height="15" fill="rgb(249,42,33)" fg:x="2415" fg:w="14179"/><text x="8.7222%" y="479.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,696 samples, 5.95%)</title><rect x="52.2645%" y="453" width="5.9498%" height="15" fill="rgb(242,149,17)" fg:x="14898" fg:w="1696"/><text x="52.5145%" y="463.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="58.1933%" y="437" width="0.0210%" height="15" fill="rgb(244,29,21)" fg:x="16588" fg:w="6"/><text x="58.4433%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="63.0065%" y="437" width="0.0246%" height="15" fill="rgb(220,130,37)" fg:x="17960" fg:w="7"/><text x="63.2565%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (109 samples, 0.38%)</title><rect x="63.1117%" y="421" width="0.3824%" height="15" fill="rgb(211,67,2)" fg:x="17990" fg:w="109"/><text x="63.3617%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (38 samples, 0.13%)</title><rect x="63.3608%" y="405" width="0.1333%" height="15" fill="rgb(235,68,52)" fg:x="18061" fg:w="38"/><text x="63.6108%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (207 samples, 0.73%)</title><rect x="62.7960%" y="453" width="0.7262%" height="15" fill="rgb(246,142,3)" fg:x="17900" fg:w="207"/><text x="63.0460%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (140 samples, 0.49%)</title><rect x="63.0310%" y="437" width="0.4911%" height="15" fill="rgb(241,25,7)" fg:x="17967" fg:w="140"/><text x="63.2810%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="63.4941%" y="421" width="0.0281%" height="15" fill="rgb(242,119,39)" fg:x="18099" fg:w="8"/><text x="63.7441%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="63.5222%" y="453" width="0.0246%" height="15" fill="rgb(241,98,45)" fg:x="18107" fg:w="7"/><text x="63.7722%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (66 samples, 0.23%)</title><rect x="63.8134%" y="437" width="0.2315%" height="15" fill="rgb(254,28,30)" fg:x="18190" fg:w="66"/><text x="64.0634%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (148 samples, 0.52%)</title><rect x="63.5467%" y="453" width="0.5192%" height="15" fill="rgb(241,142,54)" fg:x="18114" fg:w="148"/><text x="63.7967%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="64.0449%" y="437" width="0.0210%" height="15" fill="rgb(222,85,15)" fg:x="18256" fg:w="6"/><text x="64.2949%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="64.0660%" y="453" width="0.0140%" height="15" fill="rgb(210,85,47)" fg:x="18262" fg:w="4"/><text x="64.3160%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (40 samples, 0.14%)</title><rect x="64.0800%" y="453" width="0.1403%" height="15" fill="rgb(224,206,25)" fg:x="18266" fg:w="40"/><text x="64.3300%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.02%)</title><rect x="64.2203%" y="453" width="0.0210%" height="15" fill="rgb(243,201,19)" fg:x="18306" fg:w="6"/><text x="64.4703%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,233 samples, 56.95%)</title><rect x="7.3250%" y="485" width="56.9479%" height="15" fill="rgb(236,59,4)" fg:x="2088" fg:w="16233"/><text x="7.5750%" y="495.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,727 samples, 6.06%)</title><rect x="58.2143%" y="469" width="6.0586%" height="15" fill="rgb(254,179,45)" fg:x="16594" fg:w="1727"/><text x="58.4643%" y="479.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.03%)</title><rect x="64.2414%" y="453" width="0.0316%" height="15" fill="rgb(226,14,10)" fg:x="18312" fg:w="9"/><text x="64.4914%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="68.8721%" y="453" width="0.0246%" height="15" fill="rgb(244,27,41)" fg:x="19632" fg:w="7"/><text x="69.1221%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (110 samples, 0.39%)</title><rect x="68.9774%" y="437" width="0.3859%" height="15" fill="rgb(235,35,32)" fg:x="19662" fg:w="110"/><text x="69.2274%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.10%)</title><rect x="69.2615%" y="421" width="0.1017%" height="15" fill="rgb(218,68,31)" fg:x="19743" fg:w="29"/><text x="69.5115%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (202 samples, 0.71%)</title><rect x="68.6792%" y="469" width="0.7086%" height="15" fill="rgb(207,120,37)" fg:x="19577" fg:w="202"/><text x="68.9292%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (140 samples, 0.49%)</title><rect x="68.8967%" y="453" width="0.4911%" height="15" fill="rgb(227,98,0)" fg:x="19639" fg:w="140"/><text x="69.1467%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="69.3633%" y="437" width="0.0246%" height="15" fill="rgb(207,7,3)" fg:x="19772" fg:w="7"/><text x="69.6133%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.03%)</title><rect x="69.3878%" y="469" width="0.0281%" height="15" fill="rgb(206,98,19)" fg:x="19779" fg:w="8"/><text x="69.6378%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (55 samples, 0.19%)</title><rect x="69.6930%" y="453" width="0.1929%" height="15" fill="rgb(217,5,26)" fg:x="19866" fg:w="55"/><text x="69.9430%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (136 samples, 0.48%)</title><rect x="69.4159%" y="469" width="0.4771%" height="15" fill="rgb(235,190,38)" fg:x="19787" fg:w="136"/><text x="69.6659%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="69.8930%" y="469" width="0.0105%" height="15" fill="rgb(247,86,24)" fg:x="19923" fg:w="3"/><text x="70.1430%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (47 samples, 0.16%)</title><rect x="69.9035%" y="469" width="0.1649%" height="15" fill="rgb(205,101,16)" fg:x="19926" fg:w="47"/><text x="70.1535%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.03%)</title><rect x="70.0684%" y="469" width="0.0281%" height="15" fill="rgb(246,168,33)" fg:x="19973" fg:w="8"/><text x="70.3184%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (18,211 samples, 63.89%)</title><rect x="6.2375%" y="501" width="63.8870%" height="15" fill="rgb(231,114,1)" fg:x="1778" fg:w="18211"/><text x="6.4875%" y="511.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,668 samples, 5.85%)</title><rect x="64.2729%" y="485" width="5.8516%" height="15" fill="rgb(207,184,53)" fg:x="18321" fg:w="1668"/><text x="64.5229%" y="495.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.03%)</title><rect x="70.0965%" y="469" width="0.0281%" height="15" fill="rgb(224,95,51)" fg:x="19981" fg:w="8"/><text x="70.3465%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.04%)</title><rect x="74.2186%" y="469" width="0.0351%" height="15" fill="rgb(212,188,45)" fg:x="21156" fg:w="10"/><text x="74.4686%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (90 samples, 0.32%)</title><rect x="74.3308%" y="453" width="0.3157%" height="15" fill="rgb(223,154,38)" fg:x="21188" fg:w="90"/><text x="74.5808%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.09%)</title><rect x="74.5518%" y="437" width="0.0947%" height="15" fill="rgb(251,22,52)" fg:x="21251" fg:w="27"/><text x="74.8018%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (182 samples, 0.64%)</title><rect x="74.0572%" y="485" width="0.6385%" height="15" fill="rgb(229,209,22)" fg:x="21110" fg:w="182"/><text x="74.3072%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (126 samples, 0.44%)</title><rect x="74.2536%" y="469" width="0.4420%" height="15" fill="rgb(234,138,34)" fg:x="21166" fg:w="126"/><text x="74.5036%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="74.6466%" y="453" width="0.0491%" height="15" fill="rgb(212,95,11)" fg:x="21278" fg:w="14"/><text x="74.8966%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.04%)</title><rect x="74.6957%" y="485" width="0.0386%" height="15" fill="rgb(240,179,47)" fg:x="21292" fg:w="11"/><text x="74.9457%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (65 samples, 0.23%)</title><rect x="75.0325%" y="469" width="0.2280%" height="15" fill="rgb(240,163,11)" fg:x="21388" fg:w="65"/><text x="75.2825%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (153 samples, 0.54%)</title><rect x="74.7343%" y="485" width="0.5367%" height="15" fill="rgb(236,37,12)" fg:x="21303" fg:w="153"/><text x="74.9843%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="75.2605%" y="469" width="0.0105%" height="15" fill="rgb(232,164,16)" fg:x="21453" fg:w="3"/><text x="75.5105%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="75.2710%" y="485" width="0.0210%" height="15" fill="rgb(244,205,15)" fg:x="21456" fg:w="6"/><text x="75.5210%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (42 samples, 0.15%)</title><rect x="75.2921%" y="485" width="0.1473%" height="15" fill="rgb(223,117,47)" fg:x="21462" fg:w="42"/><text x="75.5421%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="75.4394%" y="485" width="0.0246%" height="15" fill="rgb(244,107,35)" fg:x="21504" fg:w="7"/><text x="75.6894%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (20,049 samples, 70.34%)</title><rect x="5.1500%" y="517" width="70.3350%" height="15" fill="rgb(205,140,8)" fg:x="1468" fg:w="20049"/><text x="5.4000%" y="527.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,528 samples, 5.36%)</title><rect x="70.1245%" y="501" width="5.3605%" height="15" fill="rgb(228,84,46)" fg:x="19989" fg:w="1528"/><text x="70.3745%" y="511.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="75.4640%" y="485" width="0.0210%" height="15" fill="rgb(254,188,9)" fg:x="21511" fg:w="6"/><text x="75.7140%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="78.7651%" y="485" width="0.0281%" height="15" fill="rgb(206,112,54)" fg:x="22452" fg:w="8"/><text x="79.0151%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (92 samples, 0.32%)</title><rect x="78.8493%" y="469" width="0.3228%" height="15" fill="rgb(216,84,49)" fg:x="22476" fg:w="92"/><text x="79.0993%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (34 samples, 0.12%)</title><rect x="79.0528%" y="453" width="0.1193%" height="15" fill="rgb(214,194,35)" fg:x="22534" fg:w="34"/><text x="79.3028%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (159 samples, 0.56%)</title><rect x="78.6459%" y="501" width="0.5578%" height="15" fill="rgb(249,28,3)" fg:x="22418" fg:w="159"/><text x="78.8959%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (117 samples, 0.41%)</title><rect x="78.7932%" y="485" width="0.4105%" height="15" fill="rgb(222,56,52)" fg:x="22460" fg:w="117"/><text x="79.0432%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.03%)</title><rect x="79.1721%" y="469" width="0.0316%" height="15" fill="rgb(245,217,50)" fg:x="22568" fg:w="9"/><text x="79.4221%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="79.2036%" y="501" width="0.0210%" height="15" fill="rgb(213,201,24)" fg:x="22577" fg:w="6"/><text x="79.4536%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (53 samples, 0.19%)</title><rect x="79.4597%" y="485" width="0.1859%" height="15" fill="rgb(248,116,28)" fg:x="22650" fg:w="53"/><text x="79.7097%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (122 samples, 0.43%)</title><rect x="79.2247%" y="501" width="0.4280%" height="15" fill="rgb(219,72,43)" fg:x="22583" fg:w="122"/><text x="79.4747%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="79.6527%" y="501" width="0.0210%" height="15" fill="rgb(209,138,14)" fg:x="22705" fg:w="6"/><text x="79.9027%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (40 samples, 0.14%)</title><rect x="79.6737%" y="501" width="0.1403%" height="15" fill="rgb(222,18,33)" fg:x="22711" fg:w="40"/><text x="79.9237%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="79.8141%" y="501" width="0.0105%" height="15" fill="rgb(213,199,7)" fg:x="22751" fg:w="3"/><text x="80.0641%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (21,520 samples, 75.50%)</title><rect x="4.3641%" y="533" width="75.4955%" height="15" fill="rgb(250,110,10)" fg:x="1244" fg:w="21520"/><text x="4.6141%" y="543.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,247 samples, 4.37%)</title><rect x="75.4850%" y="517" width="4.3747%" height="15" fill="rgb(248,123,6)" fg:x="21517" fg:w="1247"/><text x="75.7350%" y="527.50">sudok..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (10 samples, 0.04%)</title><rect x="79.8246%" y="501" width="0.0351%" height="15" fill="rgb(206,91,31)" fg:x="22754" fg:w="10"/><text x="80.0746%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="82.1891%" y="501" width="0.0246%" height="15" fill="rgb(211,154,13)" fg:x="23428" fg:w="7"/><text x="82.4391%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (60 samples, 0.21%)</title><rect x="82.2417%" y="485" width="0.2105%" height="15" fill="rgb(225,148,7)" fg:x="23443" fg:w="60"/><text x="82.4917%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.07%)</title><rect x="82.3785%" y="469" width="0.0737%" height="15" fill="rgb(220,160,43)" fg:x="23482" fg:w="21"/><text x="82.6285%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (99 samples, 0.35%)</title><rect x="82.1119%" y="517" width="0.3473%" height="15" fill="rgb(213,52,39)" fg:x="23406" fg:w="99"/><text x="82.3619%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (70 samples, 0.25%)</title><rect x="82.2136%" y="501" width="0.2456%" height="15" fill="rgb(243,137,7)" fg:x="23435" fg:w="70"/><text x="82.4636%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="82.4592%" y="517" width="0.0246%" height="15" fill="rgb(230,79,13)" fg:x="23505" fg:w="7"/><text x="82.7092%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (38 samples, 0.13%)</title><rect x="82.6662%" y="501" width="0.1333%" height="15" fill="rgb(247,105,23)" fg:x="23564" fg:w="38"/><text x="82.9162%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (92 samples, 0.32%)</title><rect x="82.4838%" y="517" width="0.3228%" height="15" fill="rgb(223,179,41)" fg:x="23512" fg:w="92"/><text x="82.7338%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="82.8065%" y="517" width="0.0210%" height="15" fill="rgb(218,9,34)" fg:x="23604" fg:w="6"/><text x="83.0565%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (24 samples, 0.08%)</title><rect x="82.8276%" y="517" width="0.0842%" height="15" fill="rgb(222,106,8)" fg:x="23610" fg:w="24"/><text x="83.0776%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="82.9118%" y="517" width="0.0246%" height="15" fill="rgb(211,220,0)" fg:x="23634" fg:w="7"/><text x="83.1618%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (22,557 samples, 79.13%)</title><rect x="3.8099%" y="549" width="79.1335%" height="15" fill="rgb(229,52,16)" fg:x="1086" fg:w="22557"/><text x="4.0599%" y="559.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (879 samples, 3.08%)</title><rect x="79.8597%" y="533" width="3.0837%" height="15" fill="rgb(212,155,18)" fg:x="22764" fg:w="879"/><text x="80.1097%" y="543.50">sud..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="84.5150%" y="517" width="0.0175%" height="15" fill="rgb(242,21,14)" fg:x="24091" fg:w="5"/><text x="84.7650%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.14%)</title><rect x="84.5501%" y="501" width="0.1403%" height="15" fill="rgb(222,19,48)" fg:x="24101" fg:w="40"/><text x="84.8001%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="84.6448%" y="485" width="0.0456%" height="15" fill="rgb(232,45,27)" fg:x="24128" fg:w="13"/><text x="84.8948%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (69 samples, 0.24%)</title><rect x="84.4519%" y="533" width="0.2421%" height="15" fill="rgb(249,103,42)" fg:x="24073" fg:w="69"/><text x="84.7019%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.16%)</title><rect x="84.5325%" y="517" width="0.1614%" height="15" fill="rgb(246,81,33)" fg:x="24096" fg:w="46"/><text x="84.7825%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="84.6939%" y="533" width="0.0175%" height="15" fill="rgb(252,33,42)" fg:x="24142" fg:w="5"/><text x="84.9439%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (34 samples, 0.12%)</title><rect x="84.8097%" y="517" width="0.1193%" height="15" fill="rgb(209,212,41)" fg:x="24175" fg:w="34"/><text x="85.0597%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.23%)</title><rect x="84.7115%" y="533" width="0.2280%" height="15" fill="rgb(207,154,6)" fg:x="24147" fg:w="65"/><text x="84.9615%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="84.9290%" y="517" width="0.0105%" height="15" fill="rgb(223,64,47)" fg:x="24209" fg:w="3"/><text x="85.1790%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.05%)</title><rect x="84.9465%" y="533" width="0.0526%" height="15" fill="rgb(211,161,38)" fg:x="24214" fg:w="15"/><text x="85.1965%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,247 samples, 81.55%)</title><rect x="3.4590%" y="565" width="81.5541%" height="15" fill="rgb(219,138,40)" fg:x="986" fg:w="23247"/><text x="3.7090%" y="575.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (590 samples, 2.07%)</title><rect x="82.9433%" y="549" width="2.0698%" height="15" fill="rgb(241,228,46)" fg:x="23643" fg:w="590"/><text x="83.1933%" y="559.50">s..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="86.0551%" y="533" width="0.0105%" height="15" fill="rgb(223,209,38)" fg:x="24530" fg:w="3"/><text x="86.3051%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.10%)</title><rect x="86.0902%" y="517" width="0.0982%" height="15" fill="rgb(236,164,45)" fg:x="24540" fg:w="28"/><text x="86.3402%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="86.1498%" y="501" width="0.0386%" height="15" fill="rgb(231,15,5)" fg:x="24557" fg:w="11"/><text x="86.3998%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.16%)</title><rect x="86.0375%" y="549" width="0.1614%" height="15" fill="rgb(252,35,15)" fg:x="24525" fg:w="46"/><text x="86.2875%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.13%)</title><rect x="86.0656%" y="533" width="0.1333%" height="15" fill="rgb(248,181,18)" fg:x="24533" fg:w="38"/><text x="86.3156%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="86.1884%" y="517" width="0.0105%" height="15" fill="rgb(233,39,42)" fg:x="24568" fg:w="3"/><text x="86.4384%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="86.1989%" y="549" width="0.0140%" height="15" fill="rgb(238,110,33)" fg:x="24571" fg:w="4"/><text x="86.4489%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.11%)</title><rect x="86.2129%" y="549" width="0.1123%" height="15" fill="rgb(233,195,10)" fg:x="24575" fg:w="32"/><text x="86.4629%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="86.2831%" y="533" width="0.0421%" height="15" fill="rgb(254,105,3)" fg:x="24595" fg:w="12"/><text x="86.5331%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="86.3252%" y="549" width="0.0351%" height="15" fill="rgb(221,225,9)" fg:x="24607" fg:w="10"/><text x="86.5752%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,710 samples, 83.18%)</title><rect x="3.1924%" y="581" width="83.1784%" height="15" fill="rgb(224,227,45)" fg:x="910" fg:w="23710"/><text x="3.4424%" y="591.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (387 samples, 1.36%)</title><rect x="85.0132%" y="565" width="1.3577%" height="15" fill="rgb(229,198,43)" fg:x="24233" fg:w="387"/><text x="85.2632%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.08%)</title><rect x="87.1742%" y="533" width="0.0807%" height="15" fill="rgb(206,209,35)" fg:x="24849" fg:w="23"/><text x="87.4242%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="87.2303%" y="517" width="0.0246%" height="15" fill="rgb(245,195,53)" fg:x="24865" fg:w="7"/><text x="87.4803%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (41 samples, 0.14%)</title><rect x="87.1145%" y="565" width="0.1438%" height="15" fill="rgb(240,92,26)" fg:x="24832" fg:w="41"/><text x="87.3645%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.12%)</title><rect x="87.1426%" y="549" width="0.1158%" height="15" fill="rgb(207,40,23)" fg:x="24840" fg:w="33"/><text x="87.3926%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.04%)</title><rect x="87.3145%" y="549" width="0.0351%" height="15" fill="rgb(223,111,35)" fg:x="24889" fg:w="10"/><text x="87.5645%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.09%)</title><rect x="87.2654%" y="565" width="0.0877%" height="15" fill="rgb(229,147,28)" fg:x="24875" fg:w="25"/><text x="87.5154%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="87.3566%" y="565" width="0.0105%" height="15" fill="rgb(211,29,28)" fg:x="24901" fg:w="3"/><text x="87.6066%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,059 samples, 84.40%)</title><rect x="2.9714%" y="597" width="84.4027%" height="15" fill="rgb(228,72,33)" fg:x="847" fg:w="24059"/><text x="3.2214%" y="607.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (286 samples, 1.00%)</title><rect x="86.3708%" y="581" width="1.0033%" height="15" fill="rgb(205,214,31)" fg:x="24620" fg:w="286"/><text x="86.6208%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.08%)</title><rect x="88.0863%" y="549" width="0.0807%" height="15" fill="rgb(224,111,15)" fg:x="25109" fg:w="23"/><text x="88.3363%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="88.1284%" y="533" width="0.0386%" height="15" fill="rgb(253,21,26)" fg:x="25121" fg:w="11"/><text x="88.3784%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.13%)</title><rect x="88.0407%" y="581" width="0.1333%" height="15" fill="rgb(245,139,43)" fg:x="25096" fg:w="38"/><text x="88.2907%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.10%)</title><rect x="88.0723%" y="565" width="0.1017%" height="15" fill="rgb(252,170,7)" fg:x="25105" fg:w="29"/><text x="88.3223%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="88.2161%" y="565" width="0.0421%" height="15" fill="rgb(231,118,14)" fg:x="25146" fg:w="12"/><text x="88.4661%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.08%)</title><rect x="88.1775%" y="581" width="0.0842%" height="15" fill="rgb(238,83,0)" fg:x="25135" fg:w="24"/><text x="88.4275%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,384 samples, 85.54%)</title><rect x="2.7504%" y="613" width="85.5429%" height="15" fill="rgb(221,39,39)" fg:x="784" fg:w="24384"/><text x="3.0004%" y="623.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (262 samples, 0.92%)</title><rect x="87.3741%" y="597" width="0.9191%" height="15" fill="rgb(222,119,46)" fg:x="24906" fg:w="262"/><text x="87.6241%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="88.2617%" y="581" width="0.0316%" height="15" fill="rgb(222,165,49)" fg:x="25159" fg:w="9"/><text x="88.5117%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.07%)</title><rect x="89.0686%" y="565" width="0.0737%" height="15" fill="rgb(219,113,52)" fg:x="25389" fg:w="21"/><text x="89.3186%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="89.1142%" y="549" width="0.0281%" height="15" fill="rgb(214,7,15)" fg:x="25402" fg:w="8"/><text x="89.3642%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.16%)</title><rect x="88.9844%" y="597" width="0.1649%" height="15" fill="rgb(235,32,4)" fg:x="25365" fg:w="47"/><text x="89.2344%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.12%)</title><rect x="89.0335%" y="581" width="0.1158%" height="15" fill="rgb(238,90,54)" fg:x="25379" fg:w="33"/><text x="89.2835%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.05%)</title><rect x="89.1844%" y="581" width="0.0526%" height="15" fill="rgb(213,208,19)" fg:x="25422" fg:w="15"/><text x="89.4344%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="89.1493%" y="597" width="0.0912%" height="15" fill="rgb(233,156,4)" fg:x="25412" fg:w="26"/><text x="89.3993%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,711 samples, 86.69%)</title><rect x="2.5890%" y="629" width="86.6901%" height="15" fill="rgb(207,194,5)" fg:x="738" fg:w="24711"/><text x="2.8390%" y="639.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (281 samples, 0.99%)</title><rect x="88.2933%" y="613" width="0.9858%" height="15" fill="rgb(206,111,30)" fg:x="25168" fg:w="281"/><text x="88.5433%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="89.2440%" y="597" width="0.0351%" height="15" fill="rgb(243,70,54)" fg:x="25439" fg:w="10"/><text x="89.4940%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.08%)</title><rect x="90.0053%" y="581" width="0.0772%" height="15" fill="rgb(242,28,8)" fg:x="25656" fg:w="22"/><text x="90.2553%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="90.0579%" y="565" width="0.0246%" height="15" fill="rgb(219,106,18)" fg:x="25671" fg:w="7"/><text x="90.3079%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.15%)</title><rect x="89.9491%" y="613" width="0.1509%" height="15" fill="rgb(244,222,10)" fg:x="25640" fg:w="43"/><text x="90.1991%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.11%)</title><rect x="89.9912%" y="597" width="0.1088%" height="15" fill="rgb(236,179,52)" fg:x="25652" fg:w="31"/><text x="90.2412%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="90.0824%" y="581" width="0.0175%" height="15" fill="rgb(213,23,39)" fg:x="25678" fg:w="5"/><text x="90.3324%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="90.1000%" y="613" width="0.0140%" height="15" fill="rgb(238,48,10)" fg:x="25683" fg:w="4"/><text x="90.3500%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (46 samples, 0.16%)</title><rect x="90.1140%" y="613" width="0.1614%" height="15" fill="rgb(251,196,23)" fg:x="25687" fg:w="46"/><text x="90.3640%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (25 samples, 0.09%)</title><rect x="90.1877%" y="597" width="0.0877%" height="15" fill="rgb(250,152,24)" fg:x="25708" fg:w="25"/><text x="90.4377%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="90.2754%" y="613" width="0.0175%" height="15" fill="rgb(209,150,17)" fg:x="25733" fg:w="5"/><text x="90.5254%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,061 samples, 87.92%)</title><rect x="2.3785%" y="645" width="87.9179%" height="15" fill="rgb(234,202,34)" fg:x="678" fg:w="25061"/><text x="2.6285%" y="655.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (290 samples, 1.02%)</title><rect x="89.2791%" y="629" width="1.0174%" height="15" fill="rgb(253,148,53)" fg:x="25449" fg:w="290"/><text x="89.5291%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.07%)</title><rect x="91.0261%" y="597" width="0.0737%" height="15" fill="rgb(218,129,16)" fg:x="25947" fg:w="21"/><text x="91.2761%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="91.0717%" y="581" width="0.0281%" height="15" fill="rgb(216,85,19)" fg:x="25960" fg:w="8"/><text x="91.3217%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.15%)</title><rect x="90.9560%" y="629" width="0.1544%" height="15" fill="rgb(235,228,7)" fg:x="25927" fg:w="44"/><text x="91.2060%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.11%)</title><rect x="91.0051%" y="613" width="0.1052%" height="15" fill="rgb(245,175,0)" fg:x="25941" fg:w="30"/><text x="91.2551%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="91.0998%" y="597" width="0.0105%" height="15" fill="rgb(208,168,36)" fg:x="25968" fg:w="3"/><text x="91.3498%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="91.1103%" y="629" width="0.0210%" height="15" fill="rgb(246,171,24)" fg:x="25971" fg:w="6"/><text x="91.3603%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.05%)</title><rect x="91.1559%" y="613" width="0.0456%" height="15" fill="rgb(215,142,24)" fg:x="25984" fg:w="13"/><text x="91.4059%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.07%)</title><rect x="91.1314%" y="629" width="0.0737%" height="15" fill="rgb(250,187,7)" fg:x="25977" fg:w="21"/><text x="91.3814%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="91.2121%" y="629" width="0.0210%" height="15" fill="rgb(228,66,33)" fg:x="26000" fg:w="6"/><text x="91.4621%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,387 samples, 89.06%)</title><rect x="2.1786%" y="661" width="89.0616%" height="15" fill="rgb(234,215,21)" fg:x="621" fg:w="25387"/><text x="2.4286%" y="671.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (269 samples, 0.94%)</title><rect x="90.2964%" y="645" width="0.9437%" height="15" fill="rgb(222,191,20)" fg:x="25739" fg:w="269"/><text x="90.5464%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (38 samples, 0.13%)</title><rect x="91.9768%" y="645" width="0.1333%" height="15" fill="rgb(245,79,54)" fg:x="26218" fg:w="38"/><text x="92.2268%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.09%)</title><rect x="92.0225%" y="629" width="0.0877%" height="15" fill="rgb(240,10,37)" fg:x="26231" fg:w="25"/><text x="92.2725%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.08%)</title><rect x="92.0330%" y="613" width="0.0772%" height="15" fill="rgb(214,192,32)" fg:x="26234" fg:w="22"/><text x="92.2830%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.04%)</title><rect x="92.0751%" y="597" width="0.0351%" height="15" fill="rgb(209,36,54)" fg:x="26246" fg:w="10"/><text x="92.3251%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="92.1102%" y="645" width="0.0105%" height="15" fill="rgb(220,10,11)" fg:x="26256" fg:w="3"/><text x="92.3602%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (19 samples, 0.07%)</title><rect x="92.1698%" y="629" width="0.0667%" height="15" fill="rgb(221,106,17)" fg:x="26273" fg:w="19"/><text x="92.4198%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.12%)</title><rect x="92.1207%" y="645" width="0.1193%" height="15" fill="rgb(251,142,44)" fg:x="26259" fg:w="34"/><text x="92.3707%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.05%)</title><rect x="92.2400%" y="645" width="0.0456%" height="15" fill="rgb(238,13,15)" fg:x="26293" fg:w="13"/><text x="92.4900%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,735 samples, 90.28%)</title><rect x="2.0067%" y="677" width="90.2824%" height="15" fill="rgb(208,107,27)" fg:x="572" fg:w="25735"/><text x="2.2567%" y="687.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (299 samples, 1.05%)</title><rect x="91.2401%" y="661" width="1.0489%" height="15" fill="rgb(205,136,37)" fg:x="26008" fg:w="299"/><text x="91.4901%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.09%)</title><rect x="93.2608%" y="629" width="0.0947%" height="15" fill="rgb(250,205,27)" fg:x="26584" fg:w="27"/><text x="93.5108%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="93.3099%" y="613" width="0.0456%" height="15" fill="rgb(210,80,43)" fg:x="26598" fg:w="13"/><text x="93.5599%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.16%)</title><rect x="93.2012%" y="661" width="0.1649%" height="15" fill="rgb(247,160,36)" fg:x="26567" fg:w="47"/><text x="93.4512%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.12%)</title><rect x="93.2468%" y="645" width="0.1193%" height="15" fill="rgb(234,13,49)" fg:x="26580" fg:w="34"/><text x="93.4968%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="93.3556%" y="629" width="0.0105%" height="15" fill="rgb(234,122,0)" fg:x="26611" fg:w="3"/><text x="93.6056%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="93.3661%" y="661" width="0.0105%" height="15" fill="rgb(207,146,38)" fg:x="26614" fg:w="3"/><text x="93.6161%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="93.3766%" y="661" width="0.0807%" height="15" fill="rgb(207,177,25)" fg:x="26617" fg:w="23"/><text x="93.6266%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.05%)</title><rect x="93.4047%" y="645" width="0.0526%" height="15" fill="rgb(211,178,42)" fg:x="26625" fg:w="15"/><text x="93.6547%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="93.4573%" y="661" width="0.0105%" height="15" fill="rgb(230,69,54)" fg:x="26640" fg:w="3"/><text x="93.7073%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.06%)</title><rect x="93.4678%" y="661" width="0.0561%" height="15" fill="rgb(214,135,41)" fg:x="26643" fg:w="16"/><text x="93.7178%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,169 samples, 91.80%)</title><rect x="1.7295%" y="693" width="91.8049%" height="15" fill="rgb(237,67,25)" fg:x="493" fg:w="26169"/><text x="1.9795%" y="703.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (355 samples, 1.25%)</title><rect x="92.2891%" y="677" width="1.2454%" height="15" fill="rgb(222,189,50)" fg:x="26307" fg:w="355"/><text x="92.5391%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.08%)</title><rect x="94.4290%" y="645" width="0.0842%" height="15" fill="rgb(245,148,34)" fg:x="26917" fg:w="24"/><text x="94.6790%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="94.4852%" y="629" width="0.0281%" height="15" fill="rgb(222,29,6)" fg:x="26933" fg:w="8"/><text x="94.7352%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.15%)</title><rect x="94.3764%" y="677" width="0.1473%" height="15" fill="rgb(221,189,43)" fg:x="26902" fg:w="42"/><text x="94.6264%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.11%)</title><rect x="94.4115%" y="661" width="0.1123%" height="15" fill="rgb(207,36,27)" fg:x="26912" fg:w="32"/><text x="94.6615%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="94.5132%" y="645" width="0.0105%" height="15" fill="rgb(217,90,24)" fg:x="26941" fg:w="3"/><text x="94.7632%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.05%)</title><rect x="94.5659%" y="661" width="0.0456%" height="15" fill="rgb(224,66,35)" fg:x="26956" fg:w="13"/><text x="94.8159%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.09%)</title><rect x="94.5273%" y="677" width="0.0877%" height="15" fill="rgb(221,13,50)" fg:x="26945" fg:w="25"/><text x="94.7773%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,557 samples, 93.17%)</title><rect x="1.5050%" y="709" width="93.1661%" height="15" fill="rgb(236,68,49)" fg:x="429" fg:w="26557"/><text x="1.7550%" y="719.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (324 samples, 1.14%)</title><rect x="93.5345%" y="693" width="1.1366%" height="15" fill="rgb(229,146,28)" fg:x="26662" fg:w="324"/><text x="93.7845%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.05%)</title><rect x="94.6220%" y="677" width="0.0491%" height="15" fill="rgb(225,31,38)" fg:x="26972" fg:w="14"/><text x="94.8720%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.08%)</title><rect x="95.4745%" y="661" width="0.0842%" height="15" fill="rgb(250,208,3)" fg:x="27215" fg:w="24"/><text x="95.7245%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.04%)</title><rect x="95.5201%" y="645" width="0.0386%" height="15" fill="rgb(246,54,23)" fg:x="27228" fg:w="11"/><text x="95.7701%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (46 samples, 0.16%)</title><rect x="95.4008%" y="693" width="0.1614%" height="15" fill="rgb(243,76,11)" fg:x="27194" fg:w="46"/><text x="95.6508%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (31 samples, 0.11%)</title><rect x="95.4534%" y="677" width="0.1088%" height="15" fill="rgb(245,21,50)" fg:x="27209" fg:w="31"/><text x="95.7034%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (5 samples, 0.02%)</title><rect x="95.5622%" y="693" width="0.0175%" height="15" fill="rgb(228,9,43)" fg:x="27240" fg:w="5"/><text x="95.8122%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.09%)</title><rect x="95.5797%" y="693" width="0.0877%" height="15" fill="rgb(208,100,47)" fg:x="27245" fg:w="25"/><text x="95.8297%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.04%)</title><rect x="95.6323%" y="677" width="0.0351%" height="15" fill="rgb(232,26,8)" fg:x="27260" fg:w="10"/><text x="95.8823%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,905 samples, 94.39%)</title><rect x="1.3015%" y="725" width="94.3869%" height="15" fill="rgb(216,166,38)" fg:x="371" fg:w="26905"/><text x="1.5515%" y="735.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (290 samples, 1.02%)</title><rect x="94.6711%" y="709" width="1.0174%" height="15" fill="rgb(251,202,51)" fg:x="26986" fg:w="290"/><text x="94.9211%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="95.6674%" y="693" width="0.0210%" height="15" fill="rgb(254,216,34)" fg:x="27270" fg:w="6"/><text x="95.9174%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.04%)</title><rect x="96.1621%" y="677" width="0.0386%" height="15" fill="rgb(251,32,27)" fg:x="27411" fg:w="11"/><text x="96.4121%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.07%)</title><rect x="96.1410%" y="709" width="0.0702%" height="15" fill="rgb(208,127,28)" fg:x="27405" fg:w="20"/><text x="96.3910%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (15 samples, 0.05%)</title><rect x="96.1586%" y="693" width="0.0526%" height="15" fill="rgb(224,137,22)" fg:x="27410" fg:w="15"/><text x="96.4086%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="96.2007%" y="677" width="0.0105%" height="15" fill="rgb(254,70,32)" fg:x="27422" fg:w="3"/><text x="96.4507%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.07%)</title><rect x="96.2287%" y="693" width="0.0737%" height="15" fill="rgb(229,75,37)" fg:x="27430" fg:w="21"/><text x="96.4787%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="96.2147%" y="709" width="0.0912%" height="15" fill="rgb(252,64,23)" fg:x="27426" fg:w="26"/><text x="96.4647%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,132 samples, 95.18%)</title><rect x="1.1612%" y="741" width="95.1833%" height="15" fill="rgb(232,162,48)" fg:x="331" fg:w="27132"/><text x="1.4112%" y="751.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (187 samples, 0.66%)</title><rect x="95.6885%" y="725" width="0.6560%" height="15" fill="rgb(246,160,12)" fg:x="27276" fg:w="187"/><text x="95.9385%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.03%)</title><rect x="96.3129%" y="709" width="0.0316%" height="15" fill="rgb(247,166,0)" fg:x="27454" fg:w="9"/><text x="96.5629%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.04%)</title><rect x="96.7093%" y="693" width="0.0386%" height="15" fill="rgb(249,219,21)" fg:x="27567" fg:w="11"/><text x="96.9593%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="96.7304%" y="677" width="0.0175%" height="15" fill="rgb(205,209,3)" fg:x="27573" fg:w="5"/><text x="96.9804%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.07%)</title><rect x="96.6918%" y="725" width="0.0737%" height="15" fill="rgb(243,44,1)" fg:x="27562" fg:w="21"/><text x="96.9418%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.07%)</title><rect x="96.6988%" y="709" width="0.0667%" height="15" fill="rgb(206,159,16)" fg:x="27564" fg:w="19"/><text x="96.9488%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="96.7479%" y="693" width="0.0175%" height="15" fill="rgb(244,77,30)" fg:x="27578" fg:w="5"/><text x="96.9979%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.06%)</title><rect x="96.7690%" y="725" width="0.0631%" height="15" fill="rgb(218,69,12)" fg:x="27584" fg:w="18"/><text x="97.0190%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="96.8041%" y="709" width="0.0281%" height="15" fill="rgb(212,87,7)" fg:x="27594" fg:w="8"/><text x="97.0541%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="96.8392%" y="725" width="0.0210%" height="15" fill="rgb(245,114,25)" fg:x="27604" fg:w="6"/><text x="97.0892%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,308 samples, 95.80%)</title><rect x="1.0665%" y="757" width="95.8007%" height="15" fill="rgb(210,61,42)" fg:x="304" fg:w="27308"/><text x="1.3165%" y="767.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (149 samples, 0.52%)</title><rect x="96.3445%" y="741" width="0.5227%" height="15" fill="rgb(211,52,33)" fg:x="27463" fg:w="149"/><text x="96.5945%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.03%)</title><rect x="97.0321%" y="741" width="0.0316%" height="15" fill="rgb(234,58,33)" fg:x="27659" fg:w="9"/><text x="97.2821%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="97.0391%" y="725" width="0.0246%" height="15" fill="rgb(220,115,36)" fg:x="27661" fg:w="7"/><text x="97.2891%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="97.0391%" y="709" width="0.0246%" height="15" fill="rgb(243,153,54)" fg:x="27661" fg:w="7"/><text x="97.2891%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="97.0637%" y="741" width="0.0386%" height="15" fill="rgb(251,47,18)" fg:x="27668" fg:w="11"/><text x="97.3137%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="97.0882%" y="725" width="0.0140%" height="15" fill="rgb(242,102,42)" fg:x="27675" fg:w="4"/><text x="97.3382%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,397 samples, 96.11%)</title><rect x="0.9998%" y="773" width="96.1130%" height="15" fill="rgb(234,31,38)" fg:x="285" fg:w="27397"/><text x="1.2498%" y="783.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (70 samples, 0.25%)</title><rect x="96.8672%" y="757" width="0.2456%" height="15" fill="rgb(221,117,51)" fg:x="27612" fg:w="70"/><text x="97.1172%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="97.2531%" y="725" width="0.0140%" height="15" fill="rgb(212,20,18)" fg:x="27722" fg:w="4"/><text x="97.5031%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="97.2496%" y="757" width="0.0210%" height="15" fill="rgb(245,133,36)" fg:x="27721" fg:w="6"/><text x="97.4996%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="97.2531%" y="741" width="0.0175%" height="15" fill="rgb(212,6,19)" fg:x="27722" fg:w="5"/><text x="97.5031%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="97.2707%" y="757" width="0.0105%" height="15" fill="rgb(218,1,36)" fg:x="27727" fg:w="3"/><text x="97.5207%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,458 samples, 96.33%)</title><rect x="0.9647%" y="789" width="96.3270%" height="15" fill="rgb(246,84,54)" fg:x="275" fg:w="27458"/><text x="1.2147%" y="799.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (51 samples, 0.18%)</title><rect x="97.1128%" y="773" width="0.1789%" height="15" fill="rgb(242,110,6)" fg:x="27682" fg:w="51"/><text x="97.3628%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="97.4566%" y="741" width="0.0316%" height="15" fill="rgb(214,47,5)" fg:x="27780" fg:w="9"/><text x="97.7066%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="97.4706%" y="725" width="0.0175%" height="15" fill="rgb(218,159,25)" fg:x="27784" fg:w="5"/><text x="97.7206%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.06%)</title><rect x="97.4320%" y="773" width="0.0596%" height="15" fill="rgb(215,211,28)" fg:x="27773" fg:w="17"/><text x="97.6820%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (12 samples, 0.04%)</title><rect x="97.4496%" y="757" width="0.0421%" height="15" fill="rgb(238,59,32)" fg:x="27778" fg:w="12"/><text x="97.6996%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="97.4987%" y="757" width="0.0105%" height="15" fill="rgb(226,82,3)" fg:x="27792" fg:w="3"/><text x="97.7487%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="97.4917%" y="773" width="0.0246%" height="15" fill="rgb(240,164,32)" fg:x="27790" fg:w="7"/><text x="97.7417%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,541 samples, 96.62%)</title><rect x="0.9051%" y="805" width="96.6181%" height="15" fill="rgb(232,46,7)" fg:x="258" fg:w="27541"/><text x="1.1551%" y="815.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (66 samples, 0.23%)</title><rect x="97.2917%" y="789" width="0.2315%" height="15" fill="rgb(229,129,53)" fg:x="27733" fg:w="66"/><text x="97.5417%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="97.6425%" y="789" width="0.0140%" height="15" fill="rgb(234,188,29)" fg:x="27833" fg:w="4"/><text x="97.8925%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,596 samples, 96.81%)</title><rect x="0.8490%" y="821" width="96.8111%" height="15" fill="rgb(246,141,4)" fg:x="242" fg:w="27596"/><text x="1.0990%" y="831.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (39 samples, 0.14%)</title><rect x="97.5232%" y="805" width="0.1368%" height="15" fill="rgb(229,23,39)" fg:x="27799" fg:w="39"/><text x="97.7732%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="97.7267%" y="805" width="0.0140%" height="15" fill="rgb(206,12,3)" fg:x="27857" fg:w="4"/><text x="97.9767%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="97.7443%" y="805" width="0.0105%" height="15" fill="rgb(252,226,20)" fg:x="27862" fg:w="3"/><text x="97.9943%" y="815.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,627 samples, 96.92%)</title><rect x="0.8384%" y="837" width="96.9198%" height="15" fill="rgb(216,123,35)" fg:x="239" fg:w="27627"/><text x="1.0884%" y="847.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (28 samples, 0.10%)</title><rect x="97.6601%" y="821" width="0.0982%" height="15" fill="rgb(212,68,40)" fg:x="27838" fg:w="28"/><text x="97.9101%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="97.7934%" y="821" width="0.0105%" height="15" fill="rgb(254,125,32)" fg:x="27876" fg:w="3"/><text x="98.0434%" y="831.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,647 samples, 96.99%)</title><rect x="0.8209%" y="853" width="96.9900%" height="15" fill="rgb(253,97,22)" fg:x="234" fg:w="27647"/><text x="1.0709%" y="863.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (15 samples, 0.05%)</title><rect x="97.7583%" y="837" width="0.0526%" height="15" fill="rgb(241,101,14)" fg:x="27866" fg:w="15"/><text x="98.0083%" y="847.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,653 samples, 97.01%)</title><rect x="0.8209%" y="869" width="97.0111%" height="15" fill="rgb(238,103,29)" fg:x="234" fg:w="27653"/><text x="1.0709%" y="879.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (6 samples, 0.02%)</title><rect x="97.8109%" y="853" width="0.0210%" height="15" fill="rgb(233,195,47)" fg:x="27881" fg:w="6"/><text x="98.0609%" y="863.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,655 samples, 97.02%)</title><rect x="0.8209%" y="885" width="97.0181%" height="15" fill="rgb(246,218,30)" fg:x="234" fg:w="27655"/><text x="1.0709%" y="895.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="99.5229%" y="837" width="0.0316%" height="15" fill="rgb(219,145,47)" fg:x="28369" fg:w="9"/><text x="99.7729%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="99.5439%" y="821" width="0.0105%" height="15" fill="rgb(243,12,26)" fg:x="28375" fg:w="3"/><text x="99.7939%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.10%)</title><rect x="99.4738%" y="869" width="0.0982%" height="15" fill="rgb(214,87,16)" fg:x="28355" fg:w="28"/><text x="99.7238%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.06%)</title><rect x="99.5159%" y="853" width="0.0561%" height="15" fill="rgb(208,99,42)" fg:x="28367" fg:w="16"/><text x="99.7659%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="99.5545%" y="837" width="0.0175%" height="15" fill="rgb(253,99,2)" fg:x="28378" fg:w="5"/><text x="99.8045%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="99.5755%" y="869" width="0.0772%" height="15" fill="rgb(220,168,23)" fg:x="28384" fg:w="22"/><text x="99.8255%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.06%)</title><rect x="99.5966%" y="853" width="0.0561%" height="15" fill="rgb(242,38,24)" fg:x="28390" fg:w="16"/><text x="99.8466%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="99.6527%" y="869" width="0.0105%" height="15" fill="rgb(225,182,9)" fg:x="28406" fg:w="3"/><text x="99.9027%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="99.6632%" y="869" width="0.0351%" height="15" fill="rgb(243,178,37)" fg:x="28409" fg:w="10"/><text x="99.9132%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="99.7018%" y="869" width="0.0105%" height="15" fill="rgb(232,139,19)" fg:x="28420" fg:w="3"/><text x="99.9518%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (16 samples, 0.06%)</title><rect x="99.7123%" y="869" width="0.0561%" height="15" fill="rgb(225,201,24)" fg:x="28423" fg:w="16"/><text x="99.9623%" y="879.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="99.7685%" y="869" width="0.0140%" height="15" fill="rgb(221,47,46)" fg:x="28439" fg:w="4"/><text x="100.0185%" y="879.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="99.7860%" y="869" width="0.0140%" height="15" fill="rgb(249,23,13)" fg:x="28444" fg:w="4"/><text x="100.0360%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="99.8562%" y="837" width="0.0175%" height="15" fill="rgb(219,9,5)" fg:x="28464" fg:w="5"/><text x="100.1062%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.09%)</title><rect x="99.8948%" y="821" width="0.0877%" height="15" fill="rgb(254,171,16)" fg:x="28475" fg:w="25"/><text x="100.1448%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="99.9614%" y="805" width="0.0210%" height="15" fill="rgb(230,171,20)" fg:x="28494" fg:w="6"/><text x="100.2114%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.18%)</title><rect x="99.8035%" y="853" width="0.1824%" height="15" fill="rgb(210,71,41)" fg:x="28449" fg:w="52"/><text x="100.0535%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.11%)</title><rect x="99.8737%" y="837" width="0.1123%" height="15" fill="rgb(206,173,20)" fg:x="28469" fg:w="32"/><text x="100.1237%" y="847.50"></text></g><g><title>all (28,505 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(233,88,34)" fg:x="0" fg:w="28505"/><text x="0.2500%" y="1007.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (28,498 samples, 99.98%)</title><rect x="0.0246%" y="981" width="99.9754%" height="15" fill="rgb(223,209,46)" fg:x="7" fg:w="28498"/><text x="0.2746%" y="991.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (28,498 samples, 99.98%)</title><rect x="0.0246%" y="965" width="99.9754%" height="15" fill="rgb(250,43,18)" fg:x="7" fg:w="28498"/><text x="0.2746%" y="975.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>sudoku-solver`std::sys::unix::thread::Thread::new::thread_start (28,498 samples, 99.98%)</title><rect x="0.0246%" y="949" width="99.9754%" height="15" fill="rgb(208,13,10)" fg:x="7" fg:w="28498"/><text x="0.2746%" y="959.50">sudoku-solver`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}} (28,498 samples, 99.98%)</title><rect x="0.0246%" y="933" width="99.9754%" height="15" fill="rgb(212,200,36)" fg:x="7" fg:w="28498"/><text x="0.2746%" y="943.50">sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (28,498 samples, 99.98%)</title><rect x="0.0246%" y="917" width="99.9754%" height="15" fill="rgb(225,90,30)" fg:x="7" fg:w="28498"/><text x="0.2746%" y="927.50">sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sudoku-solver`sudoku_solver::solve_sudoku (28,464 samples, 99.86%)</title><rect x="0.1438%" y="901" width="99.8562%" height="15" fill="rgb(236,182,39)" fg:x="41" fg:w="28464"/><text x="0.3938%" y="911.50">sudoku-solver`sudoku_solver::solve_sudoku</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (616 samples, 2.16%)</title><rect x="97.8390%" y="885" width="2.1610%" height="15" fill="rgb(212,144,35)" fg:x="27889" fg:w="616"/><text x="98.0890%" y="895.50">s..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (57 samples, 0.20%)</title><rect x="99.8000%" y="869" width="0.2000%" height="15" fill="rgb(228,63,44)" fg:x="28448" fg:w="57"/><text x="100.0500%" y="879.50"></text></g></svg></svg>