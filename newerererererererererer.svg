<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="28515"><g><title>sudoku-solver`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="0.0070%" y="853" width="0.0140%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="4"/><text x="0.2570%" y="863.50"></text></g><g><title>dyld`start (8 samples, 0.03%)</title><rect x="0.0000%" y="949" width="0.0281%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8"/><text x="0.2500%" y="959.50"></text></g><g><title>sudoku-solver`main (8 samples, 0.03%)</title><rect x="0.0000%" y="933" width="0.0281%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="8"/><text x="0.2500%" y="943.50"></text></g><g><title>sudoku-solver`std::rt::lang_start_internal (8 samples, 0.03%)</title><rect x="0.0000%" y="917" width="0.0281%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="8"/><text x="0.2500%" y="927.50"></text></g><g><title>sudoku-solver`std::rt::lang_start::_{{closure}} (8 samples, 0.03%)</title><rect x="0.0000%" y="901" width="0.0281%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="8"/><text x="0.2500%" y="911.50"></text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (8 samples, 0.03%)</title><rect x="0.0000%" y="885" width="0.0281%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="8"/><text x="0.2500%" y="895.50"></text></g><g><title>sudoku-solver`sudoku_solver::main (8 samples, 0.03%)</title><rect x="0.0000%" y="869" width="0.0281%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8"/><text x="0.2500%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.02%)</title><rect x="0.0281%" y="869" width="0.0175%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="5"/><text x="0.2781%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="0.0456%" y="869" width="0.0175%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="5"/><text x="0.2956%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (12 samples, 0.04%)</title><rect x="0.0666%" y="869" width="0.0421%" height="15" fill="rgb(220,122,19)" fg:x="19" fg:w="12"/><text x="0.3166%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="0.1087%" y="869" width="0.0105%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="3"/><text x="0.3587%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="0.1999%" y="853" width="0.0105%" height="15" fill="rgb(240,193,28)" fg:x="57" fg:w="3"/><text x="0.4499%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.13%)</title><rect x="0.2104%" y="853" width="0.1262%" height="15" fill="rgb(216,20,37)" fg:x="60" fg:w="36"/><text x="0.4604%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.06%)</title><rect x="0.2735%" y="837" width="0.0631%" height="15" fill="rgb(206,188,39)" fg:x="78" fg:w="18"/><text x="0.5235%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.04%)</title><rect x="0.3402%" y="853" width="0.0386%" height="15" fill="rgb(217,207,13)" fg:x="97" fg:w="11"/><text x="0.5902%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.05%)</title><rect x="0.3787%" y="853" width="0.0491%" height="15" fill="rgb(231,73,38)" fg:x="108" fg:w="14"/><text x="0.6287%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="0.4278%" y="853" width="0.0210%" height="15" fill="rgb(225,20,46)" fg:x="122" fg:w="6"/><text x="0.6778%" y="863.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="0.4489%" y="853" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="128" fg:w="3"/><text x="0.6989%" y="863.50"></text></g><g><title>sudoku-solver`core::slice::sort::recurse (73 samples, 0.26%)</title><rect x="0.4734%" y="853" width="0.2560%" height="15" fill="rgb(221,200,47)" fg:x="135" fg:w="73"/><text x="0.7234%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="1.0381%" y="709" width="0.0175%" height="15" fill="rgb(226,26,5)" fg:x="296" fg:w="5"/><text x="1.2881%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="1.1748%" y="693" width="0.0140%" height="15" fill="rgb(249,33,26)" fg:x="335" fg:w="4"/><text x="1.4248%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="1.1888%" y="693" width="0.0105%" height="15" fill="rgb(235,183,28)" fg:x="339" fg:w="3"/><text x="1.4388%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="1.3256%" y="677" width="0.0105%" height="15" fill="rgb(221,5,38)" fg:x="378" fg:w="3"/><text x="1.5756%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="1.3432%" y="677" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="383" fg:w="7"/><text x="1.5932%" y="687.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="1.3747%" y="677" width="0.0105%" height="15" fill="rgb(241,131,45)" fg:x="392" fg:w="3"/><text x="1.6247%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="1.5606%" y="661" width="0.0316%" height="15" fill="rgb(249,31,29)" fg:x="445" fg:w="9"/><text x="1.8106%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.04%)</title><rect x="1.5921%" y="661" width="0.0386%" height="15" fill="rgb(225,111,53)" fg:x="454" fg:w="11"/><text x="1.8421%" y="671.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="1.6447%" y="661" width="0.0105%" height="15" fill="rgb(238,160,17)" fg:x="469" fg:w="3"/><text x="1.8947%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="1.8341%" y="645" width="0.0245%" height="15" fill="rgb(214,148,48)" fg:x="523" fg:w="7"/><text x="2.0841%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (11 samples, 0.04%)</title><rect x="1.8587%" y="645" width="0.0386%" height="15" fill="rgb(232,36,49)" fg:x="530" fg:w="11"/><text x="2.1087%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="1.9008%" y="645" width="0.0105%" height="15" fill="rgb(209,103,24)" fg:x="542" fg:w="3"/><text x="2.1508%" y="655.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="1.9113%" y="645" width="0.0105%" height="15" fill="rgb(229,88,8)" fg:x="545" fg:w="3"/><text x="2.1613%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="2.0761%" y="629" width="0.0105%" height="15" fill="rgb(213,181,19)" fg:x="592" fg:w="3"/><text x="2.3261%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="2.0866%" y="629" width="0.0245%" height="15" fill="rgb(254,191,54)" fg:x="595" fg:w="7"/><text x="2.3366%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (9 samples, 0.03%)</title><rect x="2.1147%" y="629" width="0.0316%" height="15" fill="rgb(241,83,37)" fg:x="603" fg:w="9"/><text x="2.3647%" y="639.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="2.1497%" y="629" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="613" fg:w="3"/><text x="2.3997%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="2.3146%" y="613" width="0.0245%" height="15" fill="rgb(226,3,54)" fg:x="660" fg:w="7"/><text x="2.5646%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="2.3426%" y="613" width="0.0140%" height="15" fill="rgb(245,192,40)" fg:x="668" fg:w="4"/><text x="2.5926%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="2.3637%" y="613" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="674" fg:w="3"/><text x="2.6137%" y="623.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="2.3777%" y="613" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="678" fg:w="3"/><text x="2.6277%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="2.4759%" y="597" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="706" fg:w="3"/><text x="2.7259%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="2.4864%" y="597" width="0.0210%" height="15" fill="rgb(208,69,12)" fg:x="709" fg:w="6"/><text x="2.7364%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="2.6162%" y="581" width="0.0210%" height="15" fill="rgb(235,93,37)" fg:x="746" fg:w="6"/><text x="2.8662%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.03%)</title><rect x="2.6372%" y="581" width="0.0281%" height="15" fill="rgb(213,116,39)" fg:x="752" fg:w="8"/><text x="2.8872%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="2.7950%" y="565" width="0.0245%" height="15" fill="rgb(222,207,29)" fg:x="797" fg:w="7"/><text x="3.0450%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="2.8196%" y="565" width="0.0105%" height="15" fill="rgb(206,96,30)" fg:x="804" fg:w="3"/><text x="3.0696%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.02%)</title><rect x="2.8371%" y="565" width="0.0175%" height="15" fill="rgb(218,138,4)" fg:x="809" fg:w="5"/><text x="3.0871%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="3.0230%" y="549" width="0.0105%" height="15" fill="rgb(250,191,14)" fg:x="862" fg:w="3"/><text x="3.2730%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (10 samples, 0.04%)</title><rect x="3.0335%" y="549" width="0.0351%" height="15" fill="rgb(239,60,40)" fg:x="865" fg:w="10"/><text x="3.2835%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="3.0686%" y="549" width="0.0105%" height="15" fill="rgb(206,27,48)" fg:x="875" fg:w="3"/><text x="3.3186%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.02%)</title><rect x="3.0791%" y="549" width="0.0175%" height="15" fill="rgb(225,35,8)" fg:x="878" fg:w="5"/><text x="3.3291%" y="559.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="3.0966%" y="549" width="0.0140%" height="15" fill="rgb(250,213,24)" fg:x="883" fg:w="4"/><text x="3.3466%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="3.3070%" y="533" width="0.0245%" height="15" fill="rgb(247,123,22)" fg:x="943" fg:w="7"/><text x="3.5570%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="3.3351%" y="533" width="0.0175%" height="15" fill="rgb(231,138,38)" fg:x="951" fg:w="5"/><text x="3.5851%" y="543.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="3.3596%" y="533" width="0.0140%" height="15" fill="rgb(231,145,46)" fg:x="958" fg:w="4"/><text x="3.6096%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (3 samples, 0.01%)</title><rect x="3.6121%" y="517" width="0.0105%" height="15" fill="rgb(251,118,11)" fg:x="1030" fg:w="3"/><text x="3.8621%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.03%)</title><rect x="3.6227%" y="517" width="0.0281%" height="15" fill="rgb(217,147,25)" fg:x="1033" fg:w="8"/><text x="3.8727%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="3.6507%" y="517" width="0.0175%" height="15" fill="rgb(247,81,37)" fg:x="1041" fg:w="5"/><text x="3.9007%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="3.6682%" y="517" width="0.0105%" height="15" fill="rgb(209,12,38)" fg:x="1046" fg:w="3"/><text x="3.9182%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="3.6788%" y="517" width="0.0105%" height="15" fill="rgb(227,1,9)" fg:x="1049" fg:w="3"/><text x="3.9288%" y="527.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="3.6893%" y="517" width="0.0140%" height="15" fill="rgb(248,47,43)" fg:x="1052" fg:w="4"/><text x="3.9393%" y="527.50"></text></g><g><title>sudoku-solver`__rdl_alloc (3 samples, 0.01%)</title><rect x="3.7033%" y="517" width="0.0105%" height="15" fill="rgb(221,10,30)" fg:x="1056" fg:w="3"/><text x="3.9533%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (7 samples, 0.02%)</title><rect x="4.1206%" y="501" width="0.0245%" height="15" fill="rgb(210,229,1)" fg:x="1175" fg:w="7"/><text x="4.3706%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="4.1452%" y="501" width="0.0245%" height="15" fill="rgb(222,148,37)" fg:x="1182" fg:w="7"/><text x="4.3952%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (15 samples, 0.05%)</title><rect x="4.1697%" y="501" width="0.0526%" height="15" fill="rgb(234,67,33)" fg:x="1189" fg:w="15"/><text x="4.4197%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="4.2223%" y="501" width="0.0105%" height="15" fill="rgb(247,98,35)" fg:x="1204" fg:w="3"/><text x="4.4723%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (5 samples, 0.02%)</title><rect x="4.2329%" y="501" width="0.0175%" height="15" fill="rgb(247,138,52)" fg:x="1207" fg:w="5"/><text x="4.4829%" y="511.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (6 samples, 0.02%)</title><rect x="4.2504%" y="501" width="0.0210%" height="15" fill="rgb(213,79,30)" fg:x="1212" fg:w="6"/><text x="4.5004%" y="511.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.02%)</title><rect x="4.2714%" y="501" width="0.0175%" height="15" fill="rgb(246,177,23)" fg:x="1218" fg:w="5"/><text x="4.5214%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="4.8396%" y="485" width="0.0140%" height="15" fill="rgb(230,62,27)" fg:x="1380" fg:w="4"/><text x="5.0896%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (6 samples, 0.02%)</title><rect x="4.8536%" y="485" width="0.0210%" height="15" fill="rgb(216,154,8)" fg:x="1384" fg:w="6"/><text x="5.1036%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (23 samples, 0.08%)</title><rect x="4.8746%" y="485" width="0.0807%" height="15" fill="rgb(244,35,45)" fg:x="1390" fg:w="23"/><text x="5.1246%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (18 samples, 0.06%)</title><rect x="4.9553%" y="485" width="0.0631%" height="15" fill="rgb(251,115,12)" fg:x="1413" fg:w="18"/><text x="5.2053%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="5.0184%" y="485" width="0.0140%" height="15" fill="rgb(240,54,50)" fg:x="1431" fg:w="4"/><text x="5.2684%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="5.0324%" y="485" width="0.0105%" height="15" fill="rgb(233,84,52)" fg:x="1435" fg:w="3"/><text x="5.2824%" y="495.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="5.0430%" y="485" width="0.0105%" height="15" fill="rgb(207,117,47)" fg:x="1438" fg:w="3"/><text x="5.2930%" y="495.50"></text></g><g><title>sudoku-solver`__rdl_alloc (9 samples, 0.03%)</title><rect x="5.0535%" y="485" width="0.0316%" height="15" fill="rgb(249,43,39)" fg:x="1441" fg:w="9"/><text x="5.3035%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="5.7163%" y="469" width="0.0210%" height="15" fill="rgb(209,38,44)" fg:x="1630" fg:w="6"/><text x="5.9663%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="5.7373%" y="469" width="0.0316%" height="15" fill="rgb(236,212,23)" fg:x="1636" fg:w="9"/><text x="5.9873%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.10%)</title><rect x="5.7689%" y="469" width="0.1017%" height="15" fill="rgb(242,79,21)" fg:x="1645" fg:w="29"/><text x="6.0189%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (27 samples, 0.09%)</title><rect x="5.8776%" y="469" width="0.0947%" height="15" fill="rgb(211,96,35)" fg:x="1676" fg:w="27"/><text x="6.1276%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.04%)</title><rect x="5.9723%" y="469" width="0.0421%" height="15" fill="rgb(253,215,40)" fg:x="1703" fg:w="12"/><text x="6.2223%" y="479.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (12 samples, 0.04%)</title><rect x="6.0144%" y="469" width="0.0421%" height="15" fill="rgb(211,81,21)" fg:x="1715" fg:w="12"/><text x="6.2644%" y="479.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="6.0635%" y="469" width="0.0140%" height="15" fill="rgb(208,190,38)" fg:x="1729" fg:w="4"/><text x="6.3135%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (11 samples, 0.04%)</title><rect x="6.7473%" y="453" width="0.0386%" height="15" fill="rgb(235,213,38)" fg:x="1924" fg:w="11"/><text x="6.9973%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.06%)</title><rect x="6.7859%" y="453" width="0.0631%" height="15" fill="rgb(237,122,38)" fg:x="1935" fg:w="18"/><text x="7.0359%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (37 samples, 0.13%)</title><rect x="6.8490%" y="453" width="0.1298%" height="15" fill="rgb(244,218,35)" fg:x="1953" fg:w="37"/><text x="7.0990%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="6.9788%" y="453" width="0.0210%" height="15" fill="rgb(240,68,47)" fg:x="1990" fg:w="6"/><text x="7.2288%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.03%)</title><rect x="6.9998%" y="453" width="0.0316%" height="15" fill="rgb(210,16,53)" fg:x="1996" fg:w="9"/><text x="7.2498%" y="463.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="7.0314%" y="453" width="0.0140%" height="15" fill="rgb(235,124,12)" fg:x="2005" fg:w="4"/><text x="7.2814%" y="463.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="7.0454%" y="453" width="0.0210%" height="15" fill="rgb(224,169,11)" fg:x="2009" fg:w="6"/><text x="7.2954%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="7.8380%" y="437" width="0.0210%" height="15" fill="rgb(250,166,2)" fg:x="2235" fg:w="6"/><text x="8.0880%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="7.8590%" y="437" width="0.0316%" height="15" fill="rgb(242,216,29)" fg:x="2241" fg:w="9"/><text x="8.1090%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.10%)</title><rect x="7.8906%" y="437" width="0.0982%" height="15" fill="rgb(230,116,27)" fg:x="2250" fg:w="28"/><text x="8.1406%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (41 samples, 0.14%)</title><rect x="7.9923%" y="437" width="0.1438%" height="15" fill="rgb(228,99,48)" fg:x="2279" fg:w="41"/><text x="8.2423%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="8.1361%" y="437" width="0.0281%" height="15" fill="rgb(253,11,6)" fg:x="2320" fg:w="8"/><text x="8.3861%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (10 samples, 0.04%)</title><rect x="8.1641%" y="437" width="0.0351%" height="15" fill="rgb(247,143,39)" fg:x="2328" fg:w="10"/><text x="8.4141%" y="447.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (5 samples, 0.02%)</title><rect x="8.1992%" y="437" width="0.0175%" height="15" fill="rgb(236,97,10)" fg:x="2338" fg:w="5"/><text x="8.4492%" y="447.50"></text></g><g><title>sudoku-solver`__rdl_alloc (9 samples, 0.03%)</title><rect x="8.2167%" y="437" width="0.0316%" height="15" fill="rgb(233,208,19)" fg:x="2343" fg:w="9"/><text x="8.4667%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.03%)</title><rect x="8.9953%" y="421" width="0.0281%" height="15" fill="rgb(216,164,2)" fg:x="2565" fg:w="8"/><text x="9.2453%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (16 samples, 0.06%)</title><rect x="9.0233%" y="421" width="0.0561%" height="15" fill="rgb(220,129,5)" fg:x="2573" fg:w="16"/><text x="9.2733%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.11%)</title><rect x="9.0794%" y="421" width="0.1122%" height="15" fill="rgb(242,17,10)" fg:x="2589" fg:w="32"/><text x="9.3294%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="9.1917%" y="421" width="0.0105%" height="15" fill="rgb(242,107,0)" fg:x="2621" fg:w="3"/><text x="9.4417%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.11%)</title><rect x="9.2022%" y="421" width="0.1122%" height="15" fill="rgb(251,28,31)" fg:x="2624" fg:w="32"/><text x="9.4522%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="9.3144%" y="421" width="0.0245%" height="15" fill="rgb(233,223,10)" fg:x="2656" fg:w="7"/><text x="9.5644%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (8 samples, 0.03%)</title><rect x="9.3389%" y="421" width="0.0281%" height="15" fill="rgb(215,21,27)" fg:x="2663" fg:w="8"/><text x="9.5889%" y="431.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="9.3670%" y="421" width="0.0140%" height="15" fill="rgb(232,23,21)" fg:x="2671" fg:w="4"/><text x="9.6170%" y="431.50"></text></g><g><title>sudoku-solver`__rdl_alloc (7 samples, 0.02%)</title><rect x="9.3810%" y="421" width="0.0245%" height="15" fill="rgb(244,5,23)" fg:x="2675" fg:w="7"/><text x="9.6310%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="10.1596%" y="405" width="0.0140%" height="15" fill="rgb(226,81,46)" fg:x="2897" fg:w="4"/><text x="10.4096%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.04%)</title><rect x="10.1736%" y="405" width="0.0351%" height="15" fill="rgb(247,70,30)" fg:x="2901" fg:w="10"/><text x="10.4236%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.07%)</title><rect x="10.2087%" y="405" width="0.0736%" height="15" fill="rgb(212,68,19)" fg:x="2911" fg:w="21"/><text x="10.4587%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (46 samples, 0.16%)</title><rect x="10.2858%" y="405" width="0.1613%" height="15" fill="rgb(240,187,13)" fg:x="2933" fg:w="46"/><text x="10.5358%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="10.4471%" y="405" width="0.0351%" height="15" fill="rgb(223,113,26)" fg:x="2979" fg:w="10"/><text x="10.6971%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (9 samples, 0.03%)</title><rect x="10.4822%" y="405" width="0.0316%" height="15" fill="rgb(206,192,2)" fg:x="2989" fg:w="9"/><text x="10.7322%" y="415.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="10.5138%" y="405" width="0.0140%" height="15" fill="rgb(241,108,4)" fg:x="2998" fg:w="4"/><text x="10.7638%" y="415.50"></text></g><g><title>sudoku-solver`__rdl_alloc (8 samples, 0.03%)</title><rect x="10.5278%" y="405" width="0.0281%" height="15" fill="rgb(247,173,49)" fg:x="3002" fg:w="8"/><text x="10.7778%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.02%)</title><rect x="11.2678%" y="389" width="0.0210%" height="15" fill="rgb(224,114,35)" fg:x="3213" fg:w="6"/><text x="11.5178%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (12 samples, 0.04%)</title><rect x="11.2888%" y="389" width="0.0421%" height="15" fill="rgb(245,159,27)" fg:x="3219" fg:w="12"/><text x="11.5388%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (26 samples, 0.09%)</title><rect x="11.3309%" y="389" width="0.0912%" height="15" fill="rgb(245,172,44)" fg:x="3231" fg:w="26"/><text x="11.5809%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (41 samples, 0.14%)</title><rect x="11.4256%" y="389" width="0.1438%" height="15" fill="rgb(236,23,11)" fg:x="3258" fg:w="41"/><text x="11.6756%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="11.5693%" y="389" width="0.0175%" height="15" fill="rgb(205,117,38)" fg:x="3299" fg:w="5"/><text x="11.8193%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (13 samples, 0.05%)</title><rect x="11.5869%" y="389" width="0.0456%" height="15" fill="rgb(237,72,25)" fg:x="3304" fg:w="13"/><text x="11.8369%" y="399.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (8 samples, 0.03%)</title><rect x="11.6325%" y="389" width="0.0281%" height="15" fill="rgb(244,70,9)" fg:x="3317" fg:w="8"/><text x="11.8825%" y="399.50"></text></g><g><title>sudoku-solver`__rdl_alloc (8 samples, 0.03%)</title><rect x="11.6605%" y="389" width="0.0281%" height="15" fill="rgb(217,125,39)" fg:x="3325" fg:w="8"/><text x="11.9105%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="12.4145%" y="373" width="0.0140%" height="15" fill="rgb(235,36,10)" fg:x="3540" fg:w="4"/><text x="12.6645%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.03%)</title><rect x="12.4285%" y="373" width="0.0316%" height="15" fill="rgb(251,123,47)" fg:x="3544" fg:w="9"/><text x="12.6785%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.07%)</title><rect x="12.4601%" y="373" width="0.0701%" height="15" fill="rgb(221,13,13)" fg:x="3553" fg:w="20"/><text x="12.7101%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (37 samples, 0.13%)</title><rect x="12.5302%" y="373" width="0.1298%" height="15" fill="rgb(238,131,9)" fg:x="3573" fg:w="37"/><text x="12.7802%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="12.6600%" y="373" width="0.0281%" height="15" fill="rgb(211,50,8)" fg:x="3610" fg:w="8"/><text x="12.9100%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="12.6881%" y="373" width="0.0210%" height="15" fill="rgb(245,182,24)" fg:x="3618" fg:w="6"/><text x="12.9381%" y="383.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (4 samples, 0.01%)</title><rect x="12.7091%" y="373" width="0.0140%" height="15" fill="rgb(242,14,37)" fg:x="3624" fg:w="4"/><text x="12.9591%" y="383.50"></text></g><g><title>sudoku-solver`__rdl_alloc (5 samples, 0.02%)</title><rect x="12.7231%" y="373" width="0.0175%" height="15" fill="rgb(246,228,12)" fg:x="3628" fg:w="5"/><text x="12.9731%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="13.3754%" y="357" width="0.0175%" height="15" fill="rgb(213,55,15)" fg:x="3814" fg:w="5"/><text x="13.6254%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (10 samples, 0.04%)</title><rect x="13.3930%" y="357" width="0.0351%" height="15" fill="rgb(209,9,3)" fg:x="3819" fg:w="10"/><text x="13.6430%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.05%)</title><rect x="13.4280%" y="357" width="0.0526%" height="15" fill="rgb(230,59,30)" fg:x="3829" fg:w="15"/><text x="13.6780%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (25 samples, 0.09%)</title><rect x="13.4841%" y="357" width="0.0877%" height="15" fill="rgb(209,121,21)" fg:x="3845" fg:w="25"/><text x="13.7341%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="13.5718%" y="357" width="0.0105%" height="15" fill="rgb(220,109,13)" fg:x="3870" fg:w="3"/><text x="13.8218%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (6 samples, 0.02%)</title><rect x="13.5823%" y="357" width="0.0210%" height="15" fill="rgb(232,18,1)" fg:x="3873" fg:w="6"/><text x="13.8323%" y="367.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (9 samples, 0.03%)</title><rect x="13.6034%" y="357" width="0.0316%" height="15" fill="rgb(215,41,42)" fg:x="3879" fg:w="9"/><text x="13.8534%" y="367.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="13.6349%" y="357" width="0.0210%" height="15" fill="rgb(224,123,36)" fg:x="3888" fg:w="6"/><text x="13.8849%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="14.1049%" y="341" width="0.0140%" height="15" fill="rgb(240,125,3)" fg:x="4022" fg:w="4"/><text x="14.3549%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="14.1189%" y="341" width="0.0140%" height="15" fill="rgb(205,98,50)" fg:x="4026" fg:w="4"/><text x="14.3689%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="14.1329%" y="341" width="0.0245%" height="15" fill="rgb(205,185,37)" fg:x="4030" fg:w="7"/><text x="14.3829%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (13 samples, 0.05%)</title><rect x="14.1645%" y="341" width="0.0456%" height="15" fill="rgb(238,207,15)" fg:x="4039" fg:w="13"/><text x="14.4145%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="14.2101%" y="341" width="0.0175%" height="15" fill="rgb(213,199,42)" fg:x="4052" fg:w="5"/><text x="14.4601%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="14.2276%" y="341" width="0.0140%" height="15" fill="rgb(235,201,11)" fg:x="4057" fg:w="4"/><text x="14.4776%" y="351.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="14.2416%" y="341" width="0.0105%" height="15" fill="rgb(207,46,11)" fg:x="4061" fg:w="3"/><text x="14.4916%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="14.5432%" y="325" width="0.0316%" height="15" fill="rgb(241,35,35)" fg:x="4147" fg:w="9"/><text x="14.7932%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (14 samples, 0.05%)</title><rect x="14.5783%" y="325" width="0.0491%" height="15" fill="rgb(243,32,47)" fg:x="4157" fg:w="14"/><text x="14.8283%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="14.6274%" y="325" width="0.0105%" height="15" fill="rgb(247,202,23)" fg:x="4171" fg:w="3"/><text x="14.8774%" y="335.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (3 samples, 0.01%)</title><rect x="14.6379%" y="325" width="0.0105%" height="15" fill="rgb(219,102,11)" fg:x="4174" fg:w="3"/><text x="14.8879%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="14.8518%" y="309" width="0.0140%" height="15" fill="rgb(243,110,44)" fg:x="4235" fg:w="4"/><text x="15.1018%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="14.8659%" y="309" width="0.0175%" height="15" fill="rgb(222,74,54)" fg:x="4239" fg:w="5"/><text x="15.1159%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="14.8869%" y="309" width="0.0140%" height="15" fill="rgb(216,99,12)" fg:x="4245" fg:w="4"/><text x="15.1369%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="14.9009%" y="309" width="0.0105%" height="15" fill="rgb(226,22,26)" fg:x="4249" fg:w="3"/><text x="15.1509%" y="319.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="14.9115%" y="309" width="0.0140%" height="15" fill="rgb(217,163,10)" fg:x="4252" fg:w="4"/><text x="15.1615%" y="319.50"></text></g><g><title>sudoku-solver`__rdl_alloc (4 samples, 0.01%)</title><rect x="14.9290%" y="309" width="0.0140%" height="15" fill="rgb(213,25,53)" fg:x="4257" fg:w="4"/><text x="15.1790%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (5 samples, 0.02%)</title><rect x="15.1113%" y="293" width="0.0175%" height="15" fill="rgb(252,105,26)" fg:x="4309" fg:w="5"/><text x="15.3613%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="15.1289%" y="293" width="0.0105%" height="15" fill="rgb(220,39,43)" fg:x="4314" fg:w="3"/><text x="15.3789%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="15.1394%" y="293" width="0.0105%" height="15" fill="rgb(229,68,48)" fg:x="4317" fg:w="3"/><text x="15.3894%" y="303.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (4 samples, 0.01%)</title><rect x="15.1534%" y="293" width="0.0140%" height="15" fill="rgb(252,8,32)" fg:x="4321" fg:w="4"/><text x="15.4034%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (4 samples, 0.01%)</title><rect x="15.2762%" y="277" width="0.0140%" height="15" fill="rgb(223,20,43)" fg:x="4356" fg:w="4"/><text x="15.5262%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="15.2902%" y="277" width="0.0175%" height="15" fill="rgb(229,81,49)" fg:x="4360" fg:w="5"/><text x="15.5402%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="15.4024%" y="261" width="0.0105%" height="15" fill="rgb(236,28,36)" fg:x="4392" fg:w="3"/><text x="15.6524%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="15.4129%" y="261" width="0.0105%" height="15" fill="rgb(249,185,26)" fg:x="4395" fg:w="3"/><text x="15.6629%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="15.5497%" y="245" width="0.0175%" height="15" fill="rgb(249,174,33)" fg:x="4434" fg:w="5"/><text x="15.7997%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="15.6163%" y="229" width="0.0105%" height="15" fill="rgb(233,201,37)" fg:x="4453" fg:w="3"/><text x="15.8663%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (4 samples, 0.01%)</title><rect x="15.8022%" y="197" width="0.0140%" height="15" fill="rgb(221,78,26)" fg:x="4506" fg:w="4"/><text x="16.0522%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="15.8162%" y="197" width="0.0105%" height="15" fill="rgb(250,127,30)" fg:x="4510" fg:w="3"/><text x="16.0662%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4 samples, 0.01%)</title><rect x="16.1845%" y="53" width="0.0140%" height="15" fill="rgb(230,49,44)" fg:x="4615" fg:w="4"/><text x="16.4345%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.01%)</title><rect x="16.1880%" y="37" width="0.0105%" height="15" fill="rgb(229,67,23)" fg:x="4616" fg:w="3"/><text x="16.4380%" y="47.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (10 samples, 0.04%)</title><rect x="16.1775%" y="69" width="0.0351%" height="15" fill="rgb(249,83,47)" fg:x="4613" fg:w="10"/><text x="16.4275%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (4 samples, 0.01%)</title><rect x="16.1985%" y="53" width="0.0140%" height="15" fill="rgb(215,43,3)" fg:x="4619" fg:w="4"/><text x="16.4485%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23 samples, 0.08%)</title><rect x="16.1564%" y="85" width="0.0807%" height="15" fill="rgb(238,154,13)" fg:x="4607" fg:w="23"/><text x="16.4064%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (7 samples, 0.02%)</title><rect x="16.2125%" y="69" width="0.0245%" height="15" fill="rgb(219,56,2)" fg:x="4623" fg:w="7"/><text x="16.4625%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (47 samples, 0.16%)</title><rect x="16.1389%" y="101" width="0.1648%" height="15" fill="rgb(233,0,4)" fg:x="4602" fg:w="47"/><text x="16.3889%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (19 samples, 0.07%)</title><rect x="16.2371%" y="85" width="0.0666%" height="15" fill="rgb(235,30,7)" fg:x="4630" fg:w="19"/><text x="16.4871%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="16.3949%" y="85" width="0.0140%" height="15" fill="rgb(250,79,13)" fg:x="4675" fg:w="4"/><text x="16.6449%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="16.3949%" y="69" width="0.0140%" height="15" fill="rgb(211,146,34)" fg:x="4675" fg:w="4"/><text x="16.6449%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (82 samples, 0.29%)</title><rect x="16.1284%" y="117" width="0.2876%" height="15" fill="rgb(228,22,38)" fg:x="4599" fg:w="82"/><text x="16.3784%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (32 samples, 0.11%)</title><rect x="16.3037%" y="101" width="0.1122%" height="15" fill="rgb(235,168,5)" fg:x="4649" fg:w="32"/><text x="16.5537%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (116 samples, 0.41%)</title><rect x="16.1038%" y="133" width="0.4068%" height="15" fill="rgb(221,155,16)" fg:x="4592" fg:w="116"/><text x="16.3538%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (27 samples, 0.09%)</title><rect x="16.4159%" y="117" width="0.0947%" height="15" fill="rgb(215,215,53)" fg:x="4681" fg:w="27"/><text x="16.6659%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="16.6298%" y="117" width="0.0140%" height="15" fill="rgb(223,4,10)" fg:x="4742" fg:w="4"/><text x="16.8798%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="16.6334%" y="101" width="0.0105%" height="15" fill="rgb(234,103,6)" fg:x="4743" fg:w="3"/><text x="16.8834%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.01%)</title><rect x="16.6439%" y="117" width="0.0105%" height="15" fill="rgb(227,97,0)" fg:x="4746" fg:w="3"/><text x="16.8939%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (168 samples, 0.59%)</title><rect x="16.0687%" y="149" width="0.5892%" height="15" fill="rgb(234,150,53)" fg:x="4582" fg:w="168"/><text x="16.3187%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (42 samples, 0.15%)</title><rect x="16.5106%" y="133" width="0.1473%" height="15" fill="rgb(228,201,54)" fg:x="4708" fg:w="42"/><text x="16.7606%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="16.8297%" y="101" width="0.0140%" height="15" fill="rgb(222,22,37)" fg:x="4799" fg:w="4"/><text x="17.0797%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (5 samples, 0.02%)</title><rect x="16.8297%" y="133" width="0.0175%" height="15" fill="rgb(237,53,32)" fg:x="4799" fg:w="5"/><text x="17.0797%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="16.8297%" y="117" width="0.0175%" height="15" fill="rgb(233,25,53)" fg:x="4799" fg:w="5"/><text x="17.0797%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="16.8473%" y="133" width="0.0175%" height="15" fill="rgb(210,40,34)" fg:x="4804" fg:w="5"/><text x="17.0973%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (254 samples, 0.89%)</title><rect x="15.9846%" y="165" width="0.8908%" height="15" fill="rgb(241,220,44)" fg:x="4558" fg:w="254"/><text x="16.2346%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (62 samples, 0.22%)</title><rect x="16.6579%" y="149" width="0.2174%" height="15" fill="rgb(235,28,35)" fg:x="4750" fg:w="62"/><text x="16.9079%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="16.8648%" y="133" width="0.0105%" height="15" fill="rgb(210,56,17)" fg:x="4809" fg:w="3"/><text x="17.1148%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="17.2190%" y="117" width="0.0281%" height="15" fill="rgb(224,130,29)" fg:x="4910" fg:w="8"/><text x="17.4690%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.04%)</title><rect x="17.2120%" y="149" width="0.0421%" height="15" fill="rgb(235,212,8)" fg:x="4908" fg:w="12"/><text x="17.4620%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.04%)</title><rect x="17.2190%" y="133" width="0.0351%" height="15" fill="rgb(223,33,50)" fg:x="4910" fg:w="10"/><text x="17.4690%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (5 samples, 0.02%)</title><rect x="17.2576%" y="149" width="0.0175%" height="15" fill="rgb(219,149,13)" fg:x="4921" fg:w="5"/><text x="17.5076%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="17.2646%" y="133" width="0.0105%" height="15" fill="rgb(250,156,29)" fg:x="4923" fg:w="3"/><text x="17.5146%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (396 samples, 1.39%)</title><rect x="15.9039%" y="181" width="1.3887%" height="15" fill="rgb(216,193,19)" fg:x="4535" fg:w="396"/><text x="16.1539%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (119 samples, 0.42%)</title><rect x="16.8753%" y="165" width="0.4173%" height="15" fill="rgb(216,135,14)" fg:x="4812" fg:w="119"/><text x="17.1253%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="17.2786%" y="149" width="0.0140%" height="15" fill="rgb(241,47,5)" fg:x="4927" fg:w="4"/><text x="17.5286%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="17.6784%" y="133" width="0.0210%" height="15" fill="rgb(233,42,35)" fg:x="5041" fg:w="6"/><text x="17.9284%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.05%)</title><rect x="17.6574%" y="165" width="0.0456%" height="15" fill="rgb(231,13,6)" fg:x="5035" fg:w="13"/><text x="17.9074%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.03%)</title><rect x="17.6749%" y="149" width="0.0281%" height="15" fill="rgb(207,181,40)" fg:x="5040" fg:w="8"/><text x="17.9249%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="17.7100%" y="165" width="0.0316%" height="15" fill="rgb(254,173,49)" fg:x="5050" fg:w="9"/><text x="17.9600%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="17.7275%" y="149" width="0.0140%" height="15" fill="rgb(221,1,38)" fg:x="5055" fg:w="4"/><text x="17.9775%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="17.7450%" y="165" width="0.0105%" height="15" fill="rgb(206,124,46)" fg:x="5060" fg:w="3"/><text x="17.9950%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (551 samples, 1.93%)</title><rect x="15.8303%" y="197" width="1.9323%" height="15" fill="rgb(249,21,11)" fg:x="4514" fg:w="551"/><text x="16.0803%" y="207.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (134 samples, 0.47%)</title><rect x="17.2927%" y="181" width="0.4699%" height="15" fill="rgb(222,201,40)" fg:x="4931" fg:w="134"/><text x="17.5427%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.05%)</title><rect x="18.1518%" y="181" width="0.0456%" height="15" fill="rgb(235,61,29)" fg:x="5176" fg:w="13"/><text x="18.4018%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="18.1659%" y="165" width="0.0316%" height="15" fill="rgb(219,207,3)" fg:x="5180" fg:w="9"/><text x="18.4159%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="18.1694%" y="149" width="0.0281%" height="15" fill="rgb(222,56,46)" fg:x="5181" fg:w="8"/><text x="18.4194%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="18.2009%" y="181" width="0.0316%" height="15" fill="rgb(239,76,54)" fg:x="5190" fg:w="9"/><text x="18.4509%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="18.2115%" y="165" width="0.0210%" height="15" fill="rgb(231,124,27)" fg:x="5193" fg:w="6"/><text x="18.4615%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (3 samples, 0.01%)</title><rect x="18.2395%" y="181" width="0.0105%" height="15" fill="rgb(249,195,6)" fg:x="5201" fg:w="3"/><text x="18.4895%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (717 samples, 2.51%)</title><rect x="15.7391%" y="213" width="2.5145%" height="15" fill="rgb(237,174,47)" fg:x="4488" fg:w="717"/><text x="15.9891%" y="223.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (140 samples, 0.49%)</title><rect x="17.7626%" y="197" width="0.4910%" height="15" fill="rgb(206,201,31)" fg:x="5065" fg:w="140"/><text x="18.0126%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="18.6919%" y="165" width="0.0105%" height="15" fill="rgb(231,57,52)" fg:x="5330" fg:w="3"/><text x="18.9419%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.04%)</title><rect x="18.6709%" y="197" width="0.0351%" height="15" fill="rgb(248,177,22)" fg:x="5324" fg:w="10"/><text x="18.9209%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.02%)</title><rect x="18.6814%" y="181" width="0.0245%" height="15" fill="rgb(215,211,37)" fg:x="5327" fg:w="7"/><text x="18.9314%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.05%)</title><rect x="18.7130%" y="197" width="0.0491%" height="15" fill="rgb(241,128,51)" fg:x="5336" fg:w="14"/><text x="18.9630%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="18.7340%" y="181" width="0.0281%" height="15" fill="rgb(227,165,31)" fg:x="5342" fg:w="8"/><text x="18.9840%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (895 samples, 3.14%)</title><rect x="15.6409%" y="229" width="3.1387%" height="15" fill="rgb(228,167,24)" fg:x="4460" fg:w="895"/><text x="15.8909%" y="239.50">sud..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (150 samples, 0.53%)</title><rect x="18.2536%" y="213" width="0.5260%" height="15" fill="rgb(228,143,12)" fg:x="5205" fg:w="150"/><text x="18.5036%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="18.7621%" y="197" width="0.0175%" height="15" fill="rgb(249,149,8)" fg:x="5350" fg:w="5"/><text x="19.0121%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (12 samples, 0.04%)</title><rect x="19.1233%" y="213" width="0.0421%" height="15" fill="rgb(243,35,44)" fg:x="5453" fg:w="12"/><text x="19.3733%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="19.1478%" y="197" width="0.0175%" height="15" fill="rgb(246,89,9)" fg:x="5460" fg:w="5"/><text x="19.3978%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="19.1478%" y="181" width="0.0175%" height="15" fill="rgb(233,213,13)" fg:x="5460" fg:w="5"/><text x="19.3978%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.03%)</title><rect x="19.1724%" y="213" width="0.0316%" height="15" fill="rgb(233,141,41)" fg:x="5467" fg:w="9"/><text x="19.4224%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="19.1759%" y="197" width="0.0281%" height="15" fill="rgb(239,167,4)" fg:x="5468" fg:w="8"/><text x="19.4259%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,041 samples, 3.65%)</title><rect x="15.5778%" y="245" width="3.6507%" height="15" fill="rgb(209,217,16)" fg:x="4442" fg:w="1041"/><text x="15.8278%" y="255.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (128 samples, 0.45%)</title><rect x="18.7796%" y="229" width="0.4489%" height="15" fill="rgb(219,88,35)" fg:x="5355" fg:w="128"/><text x="19.0296%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="19.2074%" y="213" width="0.0210%" height="15" fill="rgb(220,193,23)" fg:x="5477" fg:w="6"/><text x="19.4574%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="19.5722%" y="197" width="0.0210%" height="15" fill="rgb(230,90,52)" fg:x="5581" fg:w="6"/><text x="19.8222%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.04%)</title><rect x="19.5616%" y="229" width="0.0351%" height="15" fill="rgb(252,106,19)" fg:x="5578" fg:w="10"/><text x="19.8116%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.03%)</title><rect x="19.5686%" y="213" width="0.0281%" height="15" fill="rgb(206,74,20)" fg:x="5580" fg:w="8"/><text x="19.8186%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (5 samples, 0.02%)</title><rect x="19.6177%" y="213" width="0.0175%" height="15" fill="rgb(230,138,44)" fg:x="5594" fg:w="5"/><text x="19.8677%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.04%)</title><rect x="19.6037%" y="229" width="0.0351%" height="15" fill="rgb(235,182,43)" fg:x="5590" fg:w="10"/><text x="19.8537%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,200 samples, 4.21%)</title><rect x="15.4340%" y="261" width="4.2083%" height="15" fill="rgb(242,16,51)" fg:x="4401" fg:w="1200"/><text x="15.6840%" y="271.50">sudok..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (118 samples, 0.41%)</title><rect x="19.2285%" y="245" width="0.4138%" height="15" fill="rgb(248,9,4)" fg:x="5483" fg:w="118"/><text x="19.4785%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.06%)</title><rect x="20.0807%" y="245" width="0.0561%" height="15" fill="rgb(210,31,22)" fg:x="5726" fg:w="16"/><text x="20.3307%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.04%)</title><rect x="20.0982%" y="229" width="0.0386%" height="15" fill="rgb(239,54,39)" fg:x="5731" fg:w="11"/><text x="20.3482%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="20.1087%" y="213" width="0.0281%" height="15" fill="rgb(230,99,41)" fg:x="5734" fg:w="8"/><text x="20.3587%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.04%)</title><rect x="20.1403%" y="245" width="0.0386%" height="15" fill="rgb(253,106,12)" fg:x="5743" fg:w="11"/><text x="20.3903%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.03%)</title><rect x="20.1473%" y="229" width="0.0316%" height="15" fill="rgb(213,46,41)" fg:x="5745" fg:w="9"/><text x="20.3973%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="20.1789%" y="245" width="0.0281%" height="15" fill="rgb(215,133,35)" fg:x="5754" fg:w="8"/><text x="20.4289%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,398 samples, 4.90%)</title><rect x="15.3147%" y="277" width="4.9027%" height="15" fill="rgb(213,28,5)" fg:x="4367" fg:w="1398"/><text x="15.5647%" y="287.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (164 samples, 0.58%)</title><rect x="19.6423%" y="261" width="0.5751%" height="15" fill="rgb(215,77,49)" fg:x="5601" fg:w="164"/><text x="19.8923%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.07%)</title><rect x="20.8101%" y="229" width="0.0701%" height="15" fill="rgb(248,100,22)" fg:x="5934" fg:w="20"/><text x="21.0601%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="20.8557%" y="213" width="0.0245%" height="15" fill="rgb(208,67,9)" fg:x="5947" fg:w="7"/><text x="21.1057%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (35 samples, 0.12%)</title><rect x="20.7610%" y="261" width="0.1227%" height="15" fill="rgb(219,133,21)" fg:x="5920" fg:w="35"/><text x="21.0110%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.08%)</title><rect x="20.7996%" y="245" width="0.0842%" height="15" fill="rgb(246,46,29)" fg:x="5931" fg:w="24"/><text x="21.0496%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.07%)</title><rect x="20.8837%" y="261" width="0.0736%" height="15" fill="rgb(246,185,52)" fg:x="5955" fg:w="21"/><text x="21.1337%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="20.9188%" y="245" width="0.0386%" height="15" fill="rgb(252,136,11)" fg:x="5965" fg:w="11"/><text x="21.1688%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,660 samples, 5.82%)</title><rect x="15.1745%" y="293" width="5.8215%" height="15" fill="rgb(219,138,53)" fg:x="4327" fg:w="1660"/><text x="15.4245%" y="303.50">sudoku-..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (222 samples, 0.78%)</title><rect x="20.2174%" y="277" width="0.7785%" height="15" fill="rgb(211,51,23)" fg:x="5765" fg:w="222"/><text x="20.4674%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="20.9609%" y="261" width="0.0351%" height="15" fill="rgb(247,221,28)" fg:x="5977" fg:w="10"/><text x="21.2109%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (21 samples, 0.07%)</title><rect x="21.7605%" y="245" width="0.0736%" height="15" fill="rgb(251,222,45)" fg:x="6205" fg:w="21"/><text x="22.0105%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (4 samples, 0.01%)</title><rect x="21.8201%" y="229" width="0.0140%" height="15" fill="rgb(217,162,53)" fg:x="6222" fg:w="4"/><text x="22.0701%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (29 samples, 0.10%)</title><rect x="21.7359%" y="277" width="0.1017%" height="15" fill="rgb(229,93,14)" fg:x="6198" fg:w="29"/><text x="21.9859%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.08%)</title><rect x="21.7535%" y="261" width="0.0842%" height="15" fill="rgb(209,67,49)" fg:x="6203" fg:w="24"/><text x="22.0035%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.11%)</title><rect x="21.8411%" y="277" width="0.1087%" height="15" fill="rgb(213,87,29)" fg:x="6228" fg:w="31"/><text x="22.0911%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.05%)</title><rect x="21.9008%" y="261" width="0.0491%" height="15" fill="rgb(205,151,52)" fg:x="6245" fg:w="14"/><text x="22.1508%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,003 samples, 7.02%)</title><rect x="14.9430%" y="309" width="7.0244%" height="15" fill="rgb(253,215,39)" fg:x="4261" fg:w="2003"/><text x="15.1930%" y="319.50">sudoku-so..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (277 samples, 0.97%)</title><rect x="20.9960%" y="293" width="0.9714%" height="15" fill="rgb(221,220,41)" fg:x="5987" fg:w="277"/><text x="21.2460%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="21.9499%" y="277" width="0.0175%" height="15" fill="rgb(218,133,21)" fg:x="6259" fg:w="5"/><text x="22.1999%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.07%)</title><rect x="23.2579%" y="261" width="0.0701%" height="15" fill="rgb(221,193,43)" fg:x="6632" fg:w="20"/><text x="23.5079%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="23.3070%" y="245" width="0.0210%" height="15" fill="rgb(240,128,52)" fg:x="6646" fg:w="6"/><text x="23.5570%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.14%)</title><rect x="23.2159%" y="293" width="0.1368%" height="15" fill="rgb(253,114,12)" fg:x="6620" fg:w="39"/><text x="23.4659%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.11%)</title><rect x="23.2474%" y="277" width="0.1052%" height="15" fill="rgb(215,223,47)" fg:x="6629" fg:w="30"/><text x="23.4974%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="23.3281%" y="261" width="0.0245%" height="15" fill="rgb(248,225,23)" fg:x="6652" fg:w="7"/><text x="23.5781%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.07%)</title><rect x="23.4157%" y="277" width="0.0736%" height="15" fill="rgb(250,108,0)" fg:x="6677" fg:w="21"/><text x="23.6657%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.14%)</title><rect x="23.3561%" y="293" width="0.1368%" height="15" fill="rgb(228,208,7)" fg:x="6660" fg:w="39"/><text x="23.6061%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.04%)</title><rect x="23.4999%" y="293" width="0.0351%" height="15" fill="rgb(244,45,10)" fg:x="6701" fg:w="10"/><text x="23.7499%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,532 samples, 8.88%)</title><rect x="14.6590%" y="325" width="8.8795%" height="15" fill="rgb(207,125,25)" fg:x="4180" fg:w="2532"/><text x="14.9090%" y="335.50">sudoku-solver..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (448 samples, 1.57%)</title><rect x="21.9674%" y="309" width="1.5711%" height="15" fill="rgb(210,195,18)" fg:x="6264" fg:w="448"/><text x="22.2174%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.23%)</title><rect x="25.3901%" y="309" width="0.2315%" height="15" fill="rgb(249,80,12)" fg:x="7240" fg:w="66"/><text x="25.6401%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.16%)</title><rect x="25.4603%" y="293" width="0.1613%" height="15" fill="rgb(221,65,9)" fg:x="7260" fg:w="46"/><text x="25.7103%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (38 samples, 0.13%)</title><rect x="25.4883%" y="277" width="0.1333%" height="15" fill="rgb(235,49,36)" fg:x="7268" fg:w="38"/><text x="25.7383%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="25.5935%" y="261" width="0.0281%" height="15" fill="rgb(225,32,20)" fg:x="7298" fg:w="8"/><text x="25.8435%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="25.6216%" y="309" width="0.0140%" height="15" fill="rgb(215,141,46)" fg:x="7306" fg:w="4"/><text x="25.8716%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.09%)</title><rect x="25.7233%" y="293" width="0.0947%" height="15" fill="rgb(250,160,47)" fg:x="7335" fg:w="27"/><text x="25.9733%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (54 samples, 0.19%)</title><rect x="25.6356%" y="309" width="0.1894%" height="15" fill="rgb(216,222,40)" fg:x="7310" fg:w="54"/><text x="25.8856%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="25.8285%" y="309" width="0.0210%" height="15" fill="rgb(234,217,39)" fg:x="7365" fg:w="6"/><text x="26.0785%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3,309 samples, 11.60%)</title><rect x="14.2557%" y="341" width="11.6044%" height="15" fill="rgb(207,178,40)" fg:x="4065" fg:w="3309"/><text x="14.5057%" y="351.50">sudoku-solver`sud..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (662 samples, 2.32%)</title><rect x="23.5385%" y="325" width="2.3216%" height="15" fill="rgb(221,136,13)" fg:x="6712" fg:w="662"/><text x="23.7885%" y="335.50">s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="25.8496%" y="309" width="0.0105%" height="15" fill="rgb(249,199,10)" fg:x="7371" fg:w="3"/><text x="26.0996%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="28.4868%" y="309" width="0.0140%" height="15" fill="rgb(249,222,13)" fg:x="8123" fg:w="4"/><text x="28.7368%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (50 samples, 0.18%)</title><rect x="28.5464%" y="293" width="0.1753%" height="15" fill="rgb(244,185,38)" fg:x="8140" fg:w="50"/><text x="28.7964%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (19 samples, 0.07%)</title><rect x="28.6551%" y="277" width="0.0666%" height="15" fill="rgb(236,202,9)" fg:x="8171" fg:w="19"/><text x="28.9051%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (95 samples, 0.33%)</title><rect x="28.3991%" y="325" width="0.3332%" height="15" fill="rgb(250,229,37)" fg:x="8098" fg:w="95"/><text x="28.6491%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.23%)</title><rect x="28.5008%" y="309" width="0.2315%" height="15" fill="rgb(206,174,23)" fg:x="8127" fg:w="66"/><text x="28.7508%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="28.7217%" y="293" width="0.0105%" height="15" fill="rgb(211,33,43)" fg:x="8190" fg:w="3"/><text x="28.9717%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (6 samples, 0.02%)</title><rect x="28.7322%" y="325" width="0.0210%" height="15" fill="rgb(245,58,50)" fg:x="8193" fg:w="6"/><text x="28.9822%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (34 samples, 0.12%)</title><rect x="28.8550%" y="309" width="0.1192%" height="15" fill="rgb(244,68,36)" fg:x="8228" fg:w="34"/><text x="29.1050%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.23%)</title><rect x="28.7533%" y="325" width="0.2280%" height="15" fill="rgb(232,229,15)" fg:x="8199" fg:w="65"/><text x="29.0033%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="28.9812%" y="325" width="0.0105%" height="15" fill="rgb(254,30,23)" fg:x="8264" fg:w="3"/><text x="29.2312%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.06%)</title><rect x="28.9918%" y="325" width="0.0596%" height="15" fill="rgb(235,160,14)" fg:x="8267" fg:w="17"/><text x="29.2418%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (4,391 samples, 15.40%)</title><rect x="13.6595%" y="357" width="15.3989%" height="15" fill="rgb(212,155,44)" fg:x="3895" fg:w="4391"/><text x="13.9095%" y="367.50">sudoku-solver`sudoku_sol..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (912 samples, 3.20%)</title><rect x="25.8601%" y="341" width="3.1983%" height="15" fill="rgb(226,2,50)" fg:x="7374" fg:w="912"/><text x="26.1101%" y="351.50">sud..</text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="32.8073%" y="325" width="0.0105%" height="15" fill="rgb(234,177,6)" fg:x="9355" fg:w="3"/><text x="33.0573%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (77 samples, 0.27%)</title><rect x="32.8564%" y="309" width="0.2700%" height="15" fill="rgb(217,24,9)" fg:x="9369" fg:w="77"/><text x="33.1064%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (25 samples, 0.09%)</title><rect x="33.0388%" y="293" width="0.0877%" height="15" fill="rgb(220,13,46)" fg:x="9421" fg:w="25"/><text x="33.2888%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (137 samples, 0.48%)</title><rect x="32.6670%" y="341" width="0.4804%" height="15" fill="rgb(239,221,27)" fg:x="9315" fg:w="137"/><text x="32.9170%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (94 samples, 0.33%)</title><rect x="32.8178%" y="325" width="0.3297%" height="15" fill="rgb(222,198,25)" fg:x="9358" fg:w="94"/><text x="33.0678%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="33.1264%" y="309" width="0.0210%" height="15" fill="rgb(211,99,13)" fg:x="9446" fg:w="6"/><text x="33.3764%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.02%)</title><rect x="33.1475%" y="341" width="0.0245%" height="15" fill="rgb(232,111,31)" fg:x="9452" fg:w="7"/><text x="33.3975%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (46 samples, 0.16%)</title><rect x="33.3368%" y="325" width="0.1613%" height="15" fill="rgb(245,82,37)" fg:x="9506" fg:w="46"/><text x="33.5868%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (96 samples, 0.34%)</title><rect x="33.1720%" y="341" width="0.3367%" height="15" fill="rgb(227,149,46)" fg:x="9459" fg:w="96"/><text x="33.4220%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="33.4982%" y="325" width="0.0105%" height="15" fill="rgb(218,36,50)" fg:x="9552" fg:w="3"/><text x="33.7482%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="33.5087%" y="341" width="0.0210%" height="15" fill="rgb(226,80,48)" fg:x="9555" fg:w="6"/><text x="33.7587%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.09%)</title><rect x="33.5297%" y="341" width="0.0947%" height="15" fill="rgb(238,224,15)" fg:x="9561" fg:w="27"/><text x="33.7797%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (5,964 samples, 20.92%)</title><rect x="12.7407%" y="373" width="20.9153%" height="15" fill="rgb(241,136,10)" fg:x="3633" fg:w="5964"/><text x="12.9907%" y="383.50">sudoku-solver`sudoku_solver::back..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,311 samples, 4.60%)</title><rect x="29.0584%" y="357" width="4.5976%" height="15" fill="rgb(208,32,45)" fg:x="8286" fg:w="1311"/><text x="29.3084%" y="367.50">sudok..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="33.6314%" y="341" width="0.0245%" height="15" fill="rgb(207,135,9)" fg:x="9590" fg:w="7"/><text x="33.8814%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="38.3763%" y="341" width="0.0316%" height="15" fill="rgb(206,86,44)" fg:x="10943" fg:w="9"/><text x="38.6263%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (79 samples, 0.28%)</title><rect x="38.4640%" y="325" width="0.2770%" height="15" fill="rgb(245,177,15)" fg:x="10968" fg:w="79"/><text x="38.7140%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.08%)</title><rect x="38.6639%" y="309" width="0.0772%" height="15" fill="rgb(206,64,50)" fg:x="11025" fg:w="22"/><text x="38.9139%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (159 samples, 0.56%)</title><rect x="38.2255%" y="357" width="0.5576%" height="15" fill="rgb(234,36,40)" fg:x="10900" fg:w="159"/><text x="38.4755%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (107 samples, 0.38%)</title><rect x="38.4079%" y="341" width="0.3752%" height="15" fill="rgb(213,64,8)" fg:x="10952" fg:w="107"/><text x="38.6579%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="38.7410%" y="325" width="0.0421%" height="15" fill="rgb(210,75,36)" fg:x="11047" fg:w="12"/><text x="38.9910%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.05%)</title><rect x="38.7831%" y="357" width="0.0526%" height="15" fill="rgb(229,88,21)" fg:x="11059" fg:w="15"/><text x="39.0331%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (70 samples, 0.25%)</title><rect x="39.0531%" y="341" width="0.2455%" height="15" fill="rgb(252,204,47)" fg:x="11136" fg:w="70"/><text x="39.3031%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (133 samples, 0.47%)</title><rect x="38.8357%" y="357" width="0.4664%" height="15" fill="rgb(208,77,27)" fg:x="11074" fg:w="133"/><text x="39.0857%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="39.3021%" y="357" width="0.0245%" height="15" fill="rgb(221,76,26)" fg:x="11207" fg:w="7"/><text x="39.5521%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (47 samples, 0.16%)</title><rect x="39.3267%" y="357" width="0.1648%" height="15" fill="rgb(225,139,18)" fg:x="11214" fg:w="47"/><text x="39.5767%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="39.4915%" y="357" width="0.0140%" height="15" fill="rgb(230,137,11)" fg:x="11261" fg:w="4"/><text x="39.7415%" y="367.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (7,941 samples, 27.85%)</title><rect x="11.6956%" y="389" width="27.8485%" height="15" fill="rgb(212,28,1)" fg:x="3335" fg:w="7941"/><text x="11.9456%" y="399.50">sudoku-solver`sudoku_solver::backtraking::bac..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,679 samples, 5.89%)</title><rect x="33.6560%" y="373" width="5.8881%" height="15" fill="rgb(248,164,17)" fg:x="9597" fg:w="1679"/><text x="33.9060%" y="383.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.04%)</title><rect x="39.5055%" y="357" width="0.0386%" height="15" fill="rgb(222,171,42)" fg:x="11265" fg:w="11"/><text x="39.7555%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (5 samples, 0.02%)</title><rect x="44.5169%" y="357" width="0.0175%" height="15" fill="rgb(243,84,45)" fg:x="12694" fg:w="5"/><text x="44.7669%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (116 samples, 0.41%)</title><rect x="44.6151%" y="341" width="0.4068%" height="15" fill="rgb(252,49,23)" fg:x="12722" fg:w="116"/><text x="44.8651%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.11%)</title><rect x="44.9167%" y="325" width="0.1052%" height="15" fill="rgb(215,19,7)" fg:x="12808" fg:w="30"/><text x="45.1667%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (223 samples, 0.78%)</title><rect x="44.2820%" y="373" width="0.7820%" height="15" fill="rgb(238,81,41)" fg:x="12627" fg:w="223"/><text x="44.5320%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (151 samples, 0.53%)</title><rect x="44.5345%" y="357" width="0.5295%" height="15" fill="rgb(210,199,37)" fg:x="12699" fg:w="151"/><text x="44.7845%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (12 samples, 0.04%)</title><rect x="45.0219%" y="341" width="0.0421%" height="15" fill="rgb(244,192,49)" fg:x="12838" fg:w="12"/><text x="45.2719%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (16 samples, 0.06%)</title><rect x="45.0640%" y="373" width="0.0561%" height="15" fill="rgb(226,211,11)" fg:x="12850" fg:w="16"/><text x="45.3140%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (85 samples, 0.30%)</title><rect x="45.4357%" y="357" width="0.2981%" height="15" fill="rgb(236,162,54)" fg:x="12956" fg:w="85"/><text x="45.6857%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (177 samples, 0.62%)</title><rect x="45.1201%" y="373" width="0.6207%" height="15" fill="rgb(220,229,9)" fg:x="12866" fg:w="177"/><text x="45.3701%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="45.7408%" y="373" width="0.0175%" height="15" fill="rgb(250,87,22)" fg:x="13043" fg:w="5"/><text x="45.9908%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (41 samples, 0.14%)</title><rect x="45.7584%" y="373" width="0.1438%" height="15" fill="rgb(239,43,17)" fg:x="13048" fg:w="41"/><text x="46.0084%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="45.9022%" y="373" width="0.0140%" height="15" fill="rgb(231,177,25)" fg:x="13089" fg:w="4"/><text x="46.1522%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (10,100 samples, 35.42%)</title><rect x="10.5558%" y="405" width="35.4200%" height="15" fill="rgb(219,179,1)" fg:x="3010" fg:w="10100"/><text x="10.8058%" y="415.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recu..</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,834 samples, 6.43%)</title><rect x="39.5441%" y="389" width="6.4317%" height="15" fill="rgb(238,219,53)" fg:x="11276" fg:w="1834"/><text x="39.7941%" y="399.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (17 samples, 0.06%)</title><rect x="45.9162%" y="373" width="0.0596%" height="15" fill="rgb(232,167,36)" fg:x="13093" fg:w="17"/><text x="46.1662%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="51.0468%" y="373" width="0.0140%" height="15" fill="rgb(244,19,51)" fg:x="14556" fg:w="4"/><text x="51.2968%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (122 samples, 0.43%)</title><rect x="51.1625%" y="357" width="0.4278%" height="15" fill="rgb(224,6,22)" fg:x="14589" fg:w="122"/><text x="51.4125%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (39 samples, 0.14%)</title><rect x="51.4536%" y="341" width="0.1368%" height="15" fill="rgb(224,145,5)" fg:x="14672" fg:w="39"/><text x="51.7036%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (234 samples, 0.82%)</title><rect x="50.8434%" y="389" width="0.8206%" height="15" fill="rgb(234,130,49)" fg:x="14498" fg:w="234"/><text x="51.0934%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (172 samples, 0.60%)</title><rect x="51.0608%" y="373" width="0.6032%" height="15" fill="rgb(254,6,2)" fg:x="14560" fg:w="172"/><text x="51.3108%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.07%)</title><rect x="51.5904%" y="357" width="0.0736%" height="15" fill="rgb(208,96,46)" fg:x="14711" fg:w="21"/><text x="51.8404%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.05%)</title><rect x="51.6640%" y="389" width="0.0456%" height="15" fill="rgb(239,3,39)" fg:x="14732" fg:w="13"/><text x="51.9140%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (70 samples, 0.25%)</title><rect x="51.9691%" y="373" width="0.2455%" height="15" fill="rgb(233,210,1)" fg:x="14819" fg:w="70"/><text x="52.2191%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (147 samples, 0.52%)</title><rect x="51.7096%" y="389" width="0.5155%" height="15" fill="rgb(244,137,37)" fg:x="14745" fg:w="147"/><text x="51.9596%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="52.2146%" y="373" width="0.0105%" height="15" fill="rgb(240,136,2)" fg:x="14889" fg:w="3"/><text x="52.4646%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (7 samples, 0.02%)</title><rect x="52.2251%" y="389" width="0.0245%" height="15" fill="rgb(239,18,37)" fg:x="14892" fg:w="7"/><text x="52.4751%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (51 samples, 0.18%)</title><rect x="52.2497%" y="389" width="0.1789%" height="15" fill="rgb(218,185,22)" fg:x="14899" fg:w="51"/><text x="52.4997%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="52.4285%" y="389" width="0.0105%" height="15" fill="rgb(225,218,4)" fg:x="14950" fg:w="3"/><text x="52.6785%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (12,281 samples, 43.07%)</title><rect x="9.4161%" y="421" width="43.0686%" height="15" fill="rgb(230,182,32)" fg:x="2685" fg:w="12281"/><text x="9.6661%" y="431.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,856 samples, 6.51%)</title><rect x="45.9758%" y="405" width="6.5089%" height="15" fill="rgb(242,56,43)" fg:x="13110" fg:w="1856"/><text x="46.2258%" y="415.50">sudoku-so..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.05%)</title><rect x="52.4391%" y="389" width="0.0456%" height="15" fill="rgb(233,99,24)" fg:x="14953" fg:w="13"/><text x="52.6891%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="56.9946%" y="389" width="0.0105%" height="15" fill="rgb(234,209,42)" fg:x="16252" fg:w="3"/><text x="57.2446%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (102 samples, 0.36%)</title><rect x="57.0717%" y="373" width="0.3577%" height="15" fill="rgb(227,7,12)" fg:x="16274" fg:w="102"/><text x="57.3217%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (35 samples, 0.12%)</title><rect x="57.3067%" y="357" width="0.1227%" height="15" fill="rgb(245,203,43)" fg:x="16341" fg:w="35"/><text x="57.5567%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (189 samples, 0.66%)</title><rect x="56.8157%" y="405" width="0.6628%" height="15" fill="rgb(238,205,33)" fg:x="16201" fg:w="189"/><text x="57.0657%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (135 samples, 0.47%)</title><rect x="57.0051%" y="389" width="0.4734%" height="15" fill="rgb(231,56,7)" fg:x="16255" fg:w="135"/><text x="57.2551%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (14 samples, 0.05%)</title><rect x="57.4294%" y="373" width="0.0491%" height="15" fill="rgb(244,186,29)" fg:x="16376" fg:w="14"/><text x="57.6794%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.04%)</title><rect x="57.4785%" y="405" width="0.0421%" height="15" fill="rgb(234,111,31)" fg:x="16390" fg:w="12"/><text x="57.7285%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (81 samples, 0.28%)</title><rect x="57.7626%" y="389" width="0.2841%" height="15" fill="rgb(241,149,10)" fg:x="16471" fg:w="81"/><text x="58.0126%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (154 samples, 0.54%)</title><rect x="57.5206%" y="405" width="0.5401%" height="15" fill="rgb(249,206,44)" fg:x="16402" fg:w="154"/><text x="57.7706%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="58.0466%" y="389" width="0.0140%" height="15" fill="rgb(251,153,30)" fg:x="16552" fg:w="4"/><text x="58.2966%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (6 samples, 0.02%)</title><rect x="58.0607%" y="405" width="0.0210%" height="15" fill="rgb(239,152,38)" fg:x="16556" fg:w="6"/><text x="58.3107%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (45 samples, 0.16%)</title><rect x="58.0817%" y="405" width="0.1578%" height="15" fill="rgb(249,139,47)" fg:x="16562" fg:w="45"/><text x="58.3317%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="58.2395%" y="405" width="0.0105%" height="15" fill="rgb(244,64,35)" fg:x="16607" fg:w="3"/><text x="58.4895%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,266 samples, 50.03%)</title><rect x="8.2518%" y="437" width="50.0298%" height="15" fill="rgb(216,46,15)" fg:x="2353" fg:w="14266"/><text x="8.5018%" y="447.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,653 samples, 5.80%)</title><rect x="52.4847%" y="421" width="5.7969%" height="15" fill="rgb(250,74,19)" fg:x="14966" fg:w="1653"/><text x="52.7347%" y="431.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.03%)</title><rect x="58.2500%" y="405" width="0.0316%" height="15" fill="rgb(249,42,33)" fg:x="16610" fg:w="9"/><text x="58.5000%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.03%)</title><rect x="63.1142%" y="405" width="0.0316%" height="15" fill="rgb(242,149,17)" fg:x="17997" fg:w="9"/><text x="63.3642%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (109 samples, 0.38%)</title><rect x="63.2159%" y="389" width="0.3823%" height="15" fill="rgb(244,29,21)" fg:x="18026" fg:w="109"/><text x="63.4659%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.11%)</title><rect x="63.4929%" y="373" width="0.1052%" height="15" fill="rgb(220,130,37)" fg:x="18105" fg:w="30"/><text x="63.7429%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (200 samples, 0.70%)</title><rect x="62.9563%" y="421" width="0.7014%" height="15" fill="rgb(211,67,2)" fg:x="17952" fg:w="200"/><text x="63.2063%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (146 samples, 0.51%)</title><rect x="63.1457%" y="405" width="0.5120%" height="15" fill="rgb(235,68,52)" fg:x="18006" fg:w="146"/><text x="63.3957%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.06%)</title><rect x="63.5981%" y="389" width="0.0596%" height="15" fill="rgb(246,142,3)" fg:x="18135" fg:w="17"/><text x="63.8481%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.04%)</title><rect x="63.6577%" y="421" width="0.0351%" height="15" fill="rgb(241,25,7)" fg:x="18152" fg:w="10"/><text x="63.9077%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (73 samples, 0.26%)</title><rect x="63.9067%" y="405" width="0.2560%" height="15" fill="rgb(242,119,39)" fg:x="18223" fg:w="73"/><text x="64.1567%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (139 samples, 0.49%)</title><rect x="63.6928%" y="421" width="0.4875%" height="15" fill="rgb(241,98,45)" fg:x="18162" fg:w="139"/><text x="63.9428%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="64.1627%" y="405" width="0.0175%" height="15" fill="rgb(254,28,30)" fg:x="18296" fg:w="5"/><text x="64.4127%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="64.1803%" y="421" width="0.0140%" height="15" fill="rgb(241,142,54)" fg:x="18301" fg:w="4"/><text x="64.4303%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (40 samples, 0.14%)</title><rect x="64.1943%" y="421" width="0.1403%" height="15" fill="rgb(222,85,15)" fg:x="18305" fg:w="40"/><text x="64.4443%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="64.3346%" y="421" width="0.0140%" height="15" fill="rgb(210,85,47)" fg:x="18345" fg:w="4"/><text x="64.5846%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,345 samples, 57.32%)</title><rect x="7.0665%" y="453" width="57.3207%" height="15" fill="rgb(224,206,25)" fg:x="2015" fg:w="16345"/><text x="7.3165%" y="463.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,741 samples, 6.11%)</title><rect x="58.2816%" y="437" width="6.1056%" height="15" fill="rgb(243,201,19)" fg:x="16619" fg:w="1741"/><text x="58.5316%" y="447.50">sudoku-s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.04%)</title><rect x="64.3486%" y="421" width="0.0386%" height="15" fill="rgb(236,59,4)" fg:x="18349" fg:w="11"/><text x="64.5986%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.04%)</title><rect x="68.9286%" y="421" width="0.0421%" height="15" fill="rgb(254,179,45)" fg:x="19655" fg:w="12"/><text x="69.1786%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (114 samples, 0.40%)</title><rect x="69.0444%" y="405" width="0.3998%" height="15" fill="rgb(226,14,10)" fg:x="19688" fg:w="114"/><text x="69.2944%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (37 samples, 0.13%)</title><rect x="69.3144%" y="389" width="0.1298%" height="15" fill="rgb(244,27,41)" fg:x="19765" fg:w="37"/><text x="69.5644%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (211 samples, 0.74%)</title><rect x="68.7498%" y="437" width="0.7400%" height="15" fill="rgb(235,35,32)" fg:x="19604" fg:w="211"/><text x="68.9998%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (148 samples, 0.52%)</title><rect x="68.9707%" y="421" width="0.5190%" height="15" fill="rgb(218,68,31)" fg:x="19667" fg:w="148"/><text x="69.2207%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="69.4442%" y="405" width="0.0456%" height="15" fill="rgb(207,120,37)" fg:x="19802" fg:w="13"/><text x="69.6942%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.04%)</title><rect x="69.4897%" y="437" width="0.0386%" height="15" fill="rgb(227,98,0)" fg:x="19815" fg:w="11"/><text x="69.7397%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (76 samples, 0.27%)</title><rect x="69.7633%" y="421" width="0.2665%" height="15" fill="rgb(207,7,3)" fg:x="19893" fg:w="76"/><text x="70.0133%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (145 samples, 0.51%)</title><rect x="69.5283%" y="437" width="0.5085%" height="15" fill="rgb(206,98,19)" fg:x="19826" fg:w="145"/><text x="69.7783%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="70.0368%" y="437" width="0.0175%" height="15" fill="rgb(217,5,26)" fg:x="19971" fg:w="5"/><text x="70.2868%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (42 samples, 0.15%)</title><rect x="70.0544%" y="437" width="0.1473%" height="15" fill="rgb(235,190,38)" fg:x="19976" fg:w="42"/><text x="70.3044%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="70.2016%" y="437" width="0.0105%" height="15" fill="rgb(247,86,24)" fg:x="20018" fg:w="3"/><text x="70.4516%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (18,299 samples, 64.17%)</title><rect x="6.0775%" y="469" width="64.1732%" height="15" fill="rgb(205,101,16)" fg:x="1733" fg:w="18299"/><text x="6.3275%" y="479.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,672 samples, 5.86%)</title><rect x="64.3872%" y="453" width="5.8636%" height="15" fill="rgb(246,168,33)" fg:x="18360" fg:w="1672"/><text x="64.6372%" y="463.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (11 samples, 0.04%)</title><rect x="70.2122%" y="437" width="0.0386%" height="15" fill="rgb(231,114,1)" fg:x="20021" fg:w="11"/><text x="70.4622%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.04%)</title><rect x="74.4345%" y="437" width="0.0351%" height="15" fill="rgb(207,184,53)" fg:x="21225" fg:w="10"/><text x="74.6845%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (91 samples, 0.32%)</title><rect x="74.5117%" y="421" width="0.3191%" height="15" fill="rgb(224,95,51)" fg:x="21247" fg:w="91"/><text x="74.7617%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.12%)</title><rect x="74.7151%" y="405" width="0.1157%" height="15" fill="rgb(212,188,45)" fg:x="21305" fg:w="33"/><text x="74.9651%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (181 samples, 0.63%)</title><rect x="74.2311%" y="453" width="0.6348%" height="15" fill="rgb(223,154,38)" fg:x="21167" fg:w="181"/><text x="74.4811%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (113 samples, 0.40%)</title><rect x="74.4696%" y="437" width="0.3963%" height="15" fill="rgb(251,22,52)" fg:x="21235" fg:w="113"/><text x="74.7196%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.04%)</title><rect x="74.8308%" y="421" width="0.0351%" height="15" fill="rgb(229,209,22)" fg:x="21338" fg:w="10"/><text x="75.0808%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.05%)</title><rect x="74.8659%" y="453" width="0.0526%" height="15" fill="rgb(234,138,34)" fg:x="21348" fg:w="15"/><text x="75.1159%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (60 samples, 0.21%)</title><rect x="75.1780%" y="437" width="0.2104%" height="15" fill="rgb(212,95,11)" fg:x="21437" fg:w="60"/><text x="75.4280%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (142 samples, 0.50%)</title><rect x="74.9185%" y="453" width="0.4980%" height="15" fill="rgb(240,179,47)" fg:x="21363" fg:w="142"/><text x="75.1685%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.03%)</title><rect x="75.3884%" y="437" width="0.0281%" height="15" fill="rgb(240,163,11)" fg:x="21497" fg:w="8"/><text x="75.6384%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (5 samples, 0.02%)</title><rect x="75.4164%" y="453" width="0.0175%" height="15" fill="rgb(236,37,12)" fg:x="21505" fg:w="5"/><text x="75.6664%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (31 samples, 0.11%)</title><rect x="75.4340%" y="453" width="0.1087%" height="15" fill="rgb(232,164,16)" fg:x="21510" fg:w="31"/><text x="75.6840%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="75.5427%" y="453" width="0.0316%" height="15" fill="rgb(244,205,15)" fg:x="21541" fg:w="9"/><text x="75.7927%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (20,106 samples, 70.51%)</title><rect x="5.0850%" y="485" width="70.5103%" height="15" fill="rgb(223,117,47)" fg:x="1450" fg:w="20106"/><text x="5.3350%" y="495.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,524 samples, 5.34%)</title><rect x="70.2507%" y="469" width="5.3446%" height="15" fill="rgb(244,107,35)" fg:x="20032" fg:w="1524"/><text x="70.5007%" y="479.50">sudoku-..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.02%)</title><rect x="75.5743%" y="453" width="0.0210%" height="15" fill="rgb(205,140,8)" fg:x="21550" fg:w="6"/><text x="75.8243%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.03%)</title><rect x="79.0286%" y="453" width="0.0281%" height="15" fill="rgb(228,84,46)" fg:x="22535" fg:w="8"/><text x="79.2786%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (65 samples, 0.23%)</title><rect x="79.1198%" y="437" width="0.2280%" height="15" fill="rgb(254,188,9)" fg:x="22561" fg:w="65"/><text x="79.3698%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (23 samples, 0.08%)</title><rect x="79.2671%" y="421" width="0.0807%" height="15" fill="rgb(206,112,54)" fg:x="22603" fg:w="23"/><text x="79.5171%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (157 samples, 0.55%)</title><rect x="78.8217%" y="469" width="0.5506%" height="15" fill="rgb(216,84,49)" fg:x="22476" fg:w="157"/><text x="79.0717%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (90 samples, 0.32%)</title><rect x="79.0566%" y="453" width="0.3156%" height="15" fill="rgb(214,194,35)" fg:x="22543" fg:w="90"/><text x="79.3066%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (7 samples, 0.02%)</title><rect x="79.3477%" y="437" width="0.0245%" height="15" fill="rgb(249,28,3)" fg:x="22626" fg:w="7"/><text x="79.5977%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.03%)</title><rect x="79.3723%" y="469" width="0.0281%" height="15" fill="rgb(222,56,52)" fg:x="22633" fg:w="8"/><text x="79.6223%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (58 samples, 0.20%)</title><rect x="79.6774%" y="453" width="0.2034%" height="15" fill="rgb(245,217,50)" fg:x="22720" fg:w="58"/><text x="79.9274%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (141 samples, 0.49%)</title><rect x="79.4003%" y="469" width="0.4945%" height="15" fill="rgb(213,201,24)" fg:x="22641" fg:w="141"/><text x="79.6503%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="79.8808%" y="453" width="0.0140%" height="15" fill="rgb(248,116,28)" fg:x="22778" fg:w="4"/><text x="80.1308%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="79.8948%" y="469" width="0.0105%" height="15" fill="rgb(219,72,43)" fg:x="22782" fg:w="3"/><text x="80.1448%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (33 samples, 0.12%)</title><rect x="79.9053%" y="469" width="0.1157%" height="15" fill="rgb(209,138,14)" fg:x="22785" fg:w="33"/><text x="80.1553%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="80.0210%" y="469" width="0.0175%" height="15" fill="rgb(222,18,33)" fg:x="22818" fg:w="5"/><text x="80.2710%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (21,607 samples, 75.77%)</title><rect x="4.2960%" y="501" width="75.7742%" height="15" fill="rgb(213,199,7)" fg:x="1225" fg:w="21607"/><text x="4.5460%" y="511.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (1,276 samples, 4.47%)</title><rect x="75.5953%" y="485" width="4.4748%" height="15" fill="rgb(250,110,10)" fg:x="21556" fg:w="1276"/><text x="75.8453%" y="495.50">sudok..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (9 samples, 0.03%)</title><rect x="80.0386%" y="469" width="0.0316%" height="15" fill="rgb(248,123,6)" fg:x="22823" fg:w="9"/><text x="80.2886%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.02%)</title><rect x="82.2304%" y="469" width="0.0245%" height="15" fill="rgb(206,91,31)" fg:x="23448" fg:w="7"/><text x="82.4804%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (56 samples, 0.20%)</title><rect x="82.3005%" y="453" width="0.1964%" height="15" fill="rgb(211,154,13)" fg:x="23468" fg:w="56"/><text x="82.5505%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.05%)</title><rect x="82.4513%" y="437" width="0.0456%" height="15" fill="rgb(225,148,7)" fg:x="23511" fg:w="13"/><text x="82.7013%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.37%)</title><rect x="82.1497%" y="485" width="0.3682%" height="15" fill="rgb(220,160,43)" fg:x="23425" fg:w="105"/><text x="82.3997%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (75 samples, 0.26%)</title><rect x="82.2550%" y="469" width="0.2630%" height="15" fill="rgb(213,52,39)" fg:x="23455" fg:w="75"/><text x="82.5050%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="82.4969%" y="453" width="0.0210%" height="15" fill="rgb(243,137,7)" fg:x="23524" fg:w="6"/><text x="82.7469%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.04%)</title><rect x="82.5180%" y="485" width="0.0351%" height="15" fill="rgb(230,79,13)" fg:x="23530" fg:w="10"/><text x="82.7680%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (58 samples, 0.20%)</title><rect x="82.6863%" y="469" width="0.2034%" height="15" fill="rgb(247,105,23)" fg:x="23578" fg:w="58"/><text x="82.9363%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (98 samples, 0.34%)</title><rect x="82.5530%" y="485" width="0.3437%" height="15" fill="rgb(223,179,41)" fg:x="23540" fg:w="98"/><text x="82.8030%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="82.8967%" y="485" width="0.0105%" height="15" fill="rgb(218,9,34)" fg:x="23638" fg:w="3"/><text x="83.1467%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (30 samples, 0.11%)</title><rect x="82.9072%" y="485" width="0.1052%" height="15" fill="rgb(222,106,8)" fg:x="23641" fg:w="30"/><text x="83.1572%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.02%)</title><rect x="83.0124%" y="485" width="0.0175%" height="15" fill="rgb(211,220,0)" fg:x="23671" fg:w="5"/><text x="83.2624%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (22,620 samples, 79.33%)</title><rect x="3.7138%" y="517" width="79.3267%" height="15" fill="rgb(229,52,16)" fg:x="1059" fg:w="22620"/><text x="3.9638%" y="527.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (847 samples, 2.97%)</title><rect x="80.0701%" y="501" width="2.9704%" height="15" fill="rgb(212,155,18)" fg:x="22832" fg:w="847"/><text x="80.3201%" y="511.50">sud..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="83.0300%" y="485" width="0.0105%" height="15" fill="rgb(242,21,14)" fg:x="23676" fg:w="3"/><text x="83.2800%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (4 samples, 0.01%)</title><rect x="84.3591%" y="485" width="0.0140%" height="15" fill="rgb(222,19,48)" fg:x="24055" fg:w="4"/><text x="84.6091%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.14%)</title><rect x="84.4047%" y="469" width="0.1403%" height="15" fill="rgb(232,45,27)" fg:x="24068" fg:w="40"/><text x="84.6547%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="84.5239%" y="453" width="0.0210%" height="15" fill="rgb(249,103,42)" fg:x="24102" fg:w="6"/><text x="84.7739%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.27%)</title><rect x="84.2820%" y="501" width="0.2665%" height="15" fill="rgb(246,81,33)" fg:x="24033" fg:w="76"/><text x="84.5320%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (50 samples, 0.18%)</title><rect x="84.3731%" y="485" width="0.1753%" height="15" fill="rgb(252,33,42)" fg:x="24059" fg:w="50"/><text x="84.6231%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="84.5485%" y="501" width="0.0105%" height="15" fill="rgb(209,212,41)" fg:x="24109" fg:w="3"/><text x="84.7985%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.18%)</title><rect x="84.5590%" y="501" width="0.1753%" height="15" fill="rgb(207,154,6)" fg:x="24112" fg:w="50"/><text x="84.8090%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (28 samples, 0.10%)</title><rect x="84.6362%" y="485" width="0.0982%" height="15" fill="rgb(223,64,47)" fg:x="24134" fg:w="28"/><text x="84.8862%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (15 samples, 0.05%)</title><rect x="84.7414%" y="501" width="0.0526%" height="15" fill="rgb(211,161,38)" fg:x="24164" fg:w="15"/><text x="84.9914%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="84.7940%" y="501" width="0.0105%" height="15" fill="rgb(219,138,40)" fg:x="24179" fg:w="3"/><text x="85.0440%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,222 samples, 81.44%)</title><rect x="3.3842%" y="533" width="81.4378%" height="15" fill="rgb(241,228,46)" fg:x="965" fg:w="23222"/><text x="3.6342%" y="543.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (508 samples, 1.78%)</title><rect x="83.0405%" y="517" width="1.7815%" height="15" fill="rgb(223,209,38)" fg:x="23679" fg:w="508"/><text x="83.2905%" y="527.50">s..</text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="84.8045%" y="501" width="0.0175%" height="15" fill="rgb(236,164,45)" fg:x="24182" fg:w="5"/><text x="85.0545%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.08%)</title><rect x="85.8776%" y="485" width="0.0772%" height="15" fill="rgb(231,15,5)" fg:x="24488" fg:w="22"/><text x="86.1276%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="85.9372%" y="469" width="0.0175%" height="15" fill="rgb(252,35,15)" fg:x="24505" fg:w="5"/><text x="86.1872%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.15%)</title><rect x="85.8110%" y="517" width="0.1543%" height="15" fill="rgb(248,181,18)" fg:x="24469" fg:w="44"/><text x="86.0610%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.11%)</title><rect x="85.8601%" y="501" width="0.1052%" height="15" fill="rgb(233,39,42)" fg:x="24483" fg:w="30"/><text x="86.1101%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="85.9548%" y="485" width="0.0105%" height="15" fill="rgb(238,110,33)" fg:x="24510" fg:w="3"/><text x="86.2048%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="85.9653%" y="517" width="0.0140%" height="15" fill="rgb(233,195,10)" fg:x="24513" fg:w="4"/><text x="86.2153%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.12%)</title><rect x="85.9793%" y="517" width="0.1157%" height="15" fill="rgb(254,105,3)" fg:x="24517" fg:w="33"/><text x="86.2293%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (18 samples, 0.06%)</title><rect x="86.0319%" y="501" width="0.0631%" height="15" fill="rgb(221,225,9)" fg:x="24532" fg:w="18"/><text x="86.2819%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="86.0950%" y="517" width="0.0105%" height="15" fill="rgb(224,227,45)" fg:x="24550" fg:w="3"/><text x="86.3450%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="86.1056%" y="517" width="0.0210%" height="15" fill="rgb(229,198,43)" fg:x="24553" fg:w="6"/><text x="86.3556%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (23,675 samples, 83.03%)</title><rect x="3.1142%" y="549" width="83.0265%" height="15" fill="rgb(206,209,35)" fg:x="888" fg:w="23675"/><text x="3.3642%" y="559.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (376 samples, 1.32%)</title><rect x="84.8220%" y="533" width="1.3186%" height="15" fill="rgb(245,195,53)" fg:x="24187" fg:w="376"/><text x="85.0720%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="86.1301%" y="517" width="0.0105%" height="15" fill="rgb(240,92,26)" fg:x="24560" fg:w="3"/><text x="86.3801%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.07%)</title><rect x="86.9507%" y="501" width="0.0666%" height="15" fill="rgb(207,40,23)" fg:x="24794" fg:w="19"/><text x="87.2007%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="86.9893%" y="485" width="0.0281%" height="15" fill="rgb(223,111,35)" fg:x="24805" fg:w="8"/><text x="87.2393%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.15%)</title><rect x="86.8771%" y="533" width="0.1508%" height="15" fill="rgb(229,147,28)" fg:x="24773" fg:w="43"/><text x="87.1271%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.09%)</title><rect x="86.9367%" y="517" width="0.0912%" height="15" fill="rgb(211,29,28)" fg:x="24790" fg:w="26"/><text x="87.1867%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="87.0174%" y="501" width="0.0105%" height="15" fill="rgb(228,72,33)" fg:x="24813" fg:w="3"/><text x="87.2674%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.12%)</title><rect x="87.0314%" y="533" width="0.1192%" height="15" fill="rgb(205,214,31)" fg:x="24817" fg:w="34"/><text x="87.2814%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.05%)</title><rect x="87.0980%" y="517" width="0.0526%" height="15" fill="rgb(224,111,15)" fg:x="24836" fg:w="15"/><text x="87.3480%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (3 samples, 0.01%)</title><rect x="87.1506%" y="533" width="0.0105%" height="15" fill="rgb(253,21,26)" fg:x="24851" fg:w="3"/><text x="87.4006%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="87.1611%" y="533" width="0.0175%" height="15" fill="rgb(245,139,43)" fg:x="24854" fg:w="5"/><text x="87.4111%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,046 samples, 84.33%)</title><rect x="2.8652%" y="565" width="84.3275%" height="15" fill="rgb(252,170,7)" fg:x="817" fg:w="24046"/><text x="3.1152%" y="575.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (300 samples, 1.05%)</title><rect x="86.1406%" y="549" width="1.0521%" height="15" fill="rgb(231,118,14)" fg:x="24563" fg:w="300"/><text x="86.3906%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="87.1822%" y="533" width="0.0105%" height="15" fill="rgb(238,83,0)" fg:x="24860" fg:w="3"/><text x="87.4322%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.06%)</title><rect x="87.9362%" y="517" width="0.0596%" height="15" fill="rgb(221,39,39)" fg:x="25075" fg:w="17"/><text x="88.1862%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="87.9783%" y="501" width="0.0175%" height="15" fill="rgb(222,119,46)" fg:x="25087" fg:w="5"/><text x="88.2283%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.13%)</title><rect x="87.8801%" y="549" width="0.1262%" height="15" fill="rgb(222,165,49)" fg:x="25059" fg:w="36"/><text x="88.1301%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.08%)</title><rect x="87.9221%" y="533" width="0.0842%" height="15" fill="rgb(219,113,52)" fg:x="25071" fg:w="24"/><text x="88.1721%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="87.9958%" y="517" width="0.0105%" height="15" fill="rgb(214,7,15)" fg:x="25092" fg:w="3"/><text x="88.2458%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.10%)</title><rect x="88.0098%" y="549" width="0.0982%" height="15" fill="rgb(235,32,4)" fg:x="25096" fg:w="28"/><text x="88.2598%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.05%)</title><rect x="88.0589%" y="533" width="0.0491%" height="15" fill="rgb(238,90,54)" fg:x="25110" fg:w="14"/><text x="88.3089%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="88.1150%" y="549" width="0.0245%" height="15" fill="rgb(213,208,19)" fg:x="25126" fg:w="7"/><text x="88.3650%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="88.1396%" y="549" width="0.0105%" height="15" fill="rgb(233,156,4)" fg:x="25133" fg:w="3"/><text x="88.3896%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,372 samples, 85.47%)</title><rect x="2.6828%" y="581" width="85.4708%" height="15" fill="rgb(207,194,5)" fg:x="765" fg:w="24372"/><text x="2.9328%" y="591.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (274 samples, 0.96%)</title><rect x="87.1927%" y="565" width="0.9609%" height="15" fill="rgb(206,111,30)" fg:x="24863" fg:w="274"/><text x="87.4427%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="88.8690%" y="549" width="0.0105%" height="15" fill="rgb(243,70,54)" fg:x="25341" fg:w="3"/><text x="89.1190%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.05%)</title><rect x="88.8971%" y="533" width="0.0491%" height="15" fill="rgb(242,28,8)" fg:x="25349" fg:w="14"/><text x="89.1471%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.13%)</title><rect x="88.8304%" y="565" width="0.1262%" height="15" fill="rgb(219,106,18)" fg:x="25330" fg:w="36"/><text x="89.0804%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.08%)</title><rect x="88.8795%" y="549" width="0.0772%" height="15" fill="rgb(244,222,10)" fg:x="25344" fg:w="22"/><text x="89.1295%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="88.9462%" y="533" width="0.0105%" height="15" fill="rgb(236,179,52)" fg:x="25363" fg:w="3"/><text x="89.1962%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.05%)</title><rect x="88.9742%" y="549" width="0.0526%" height="15" fill="rgb(213,23,39)" fg:x="25371" fg:w="15"/><text x="89.2242%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="88.9567%" y="565" width="0.0772%" height="15" fill="rgb(238,48,10)" fg:x="25366" fg:w="22"/><text x="89.2067%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.05%)</title><rect x="89.0409%" y="565" width="0.0491%" height="15" fill="rgb(251,196,23)" fg:x="25390" fg:w="14"/><text x="89.2909%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,692 samples, 86.59%)</title><rect x="2.5250%" y="597" width="86.5930%" height="15" fill="rgb(250,152,24)" fg:x="720" fg:w="24692"/><text x="2.7750%" y="607.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (275 samples, 0.96%)</title><rect x="88.1536%" y="581" width="0.9644%" height="15" fill="rgb(209,150,17)" fg:x="25137" fg:w="275"/><text x="88.4036%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (7 samples, 0.02%)</title><rect x="89.0935%" y="565" width="0.0245%" height="15" fill="rgb(234,202,34)" fg:x="25405" fg:w="7"/><text x="89.3435%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.08%)</title><rect x="89.9211%" y="549" width="0.0842%" height="15" fill="rgb(253,148,53)" fg:x="25641" fg:w="24"/><text x="90.1711%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="89.9842%" y="533" width="0.0210%" height="15" fill="rgb(218,129,16)" fg:x="25659" fg:w="6"/><text x="90.2342%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.15%)</title><rect x="89.8720%" y="581" width="0.1508%" height="15" fill="rgb(216,85,19)" fg:x="25627" fg:w="43"/><text x="90.1220%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.12%)</title><rect x="89.9036%" y="565" width="0.1192%" height="15" fill="rgb(235,228,7)" fg:x="25636" fg:w="34"/><text x="90.1536%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="90.0053%" y="549" width="0.0175%" height="15" fill="rgb(245,175,0)" fg:x="25665" fg:w="5"/><text x="90.2553%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="90.0228%" y="581" width="0.0140%" height="15" fill="rgb(208,168,36)" fg:x="25670" fg:w="4"/><text x="90.2728%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="90.0894%" y="565" width="0.0421%" height="15" fill="rgb(246,171,24)" fg:x="25689" fg:w="12"/><text x="90.3394%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.10%)</title><rect x="90.0368%" y="581" width="0.0982%" height="15" fill="rgb(215,142,24)" fg:x="25674" fg:w="28"/><text x="90.2868%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="90.1350%" y="581" width="0.0245%" height="15" fill="rgb(250,187,7)" fg:x="25702" fg:w="7"/><text x="90.3850%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,034 samples, 87.79%)</title><rect x="2.3882%" y="613" width="87.7924%" height="15" fill="rgb(228,66,33)" fg:x="681" fg:w="25034"/><text x="2.6382%" y="623.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (303 samples, 1.06%)</title><rect x="89.1180%" y="597" width="1.0626%" height="15" fill="rgb(234,215,21)" fg:x="25412" fg:w="303"/><text x="89.3680%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="90.1631%" y="581" width="0.0175%" height="15" fill="rgb(222,191,20)" fg:x="25710" fg:w="5"/><text x="90.4131%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.05%)</title><rect x="90.9627%" y="565" width="0.0526%" height="15" fill="rgb(245,79,54)" fg:x="25938" fg:w="15"/><text x="91.2127%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="91.0047%" y="549" width="0.0105%" height="15" fill="rgb(240,10,37)" fg:x="25950" fg:w="3"/><text x="91.2547%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.11%)</title><rect x="90.9100%" y="597" width="0.1122%" height="15" fill="rgb(214,192,32)" fg:x="25923" fg:w="32"/><text x="91.1600%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.08%)</title><rect x="90.9416%" y="581" width="0.0807%" height="15" fill="rgb(209,36,54)" fg:x="25932" fg:w="23"/><text x="91.1916%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="91.0223%" y="597" width="0.0140%" height="15" fill="rgb(220,10,11)" fg:x="25955" fg:w="4"/><text x="91.2723%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (23 samples, 0.08%)</title><rect x="91.0714%" y="581" width="0.0807%" height="15" fill="rgb(221,106,17)" fg:x="25969" fg:w="23"/><text x="91.3214%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.13%)</title><rect x="91.0363%" y="597" width="0.1262%" height="15" fill="rgb(251,142,44)" fg:x="25959" fg:w="36"/><text x="91.2863%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="91.1520%" y="581" width="0.0105%" height="15" fill="rgb(238,13,15)" fg:x="25992" fg:w="3"/><text x="91.4020%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (4 samples, 0.01%)</title><rect x="91.1625%" y="597" width="0.0140%" height="15" fill="rgb(208,107,27)" fg:x="25995" fg:w="4"/><text x="91.4125%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="91.1766%" y="597" width="0.0245%" height="15" fill="rgb(205,136,37)" fg:x="25999" fg:w="7"/><text x="91.4266%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,393 samples, 89.05%)</title><rect x="2.1708%" y="629" width="89.0514%" height="15" fill="rgb(250,205,27)" fg:x="619" fg:w="25393"/><text x="2.4208%" y="639.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (297 samples, 1.04%)</title><rect x="90.1806%" y="613" width="1.0416%" height="15" fill="rgb(210,80,43)" fg:x="25715" fg:w="297"/><text x="90.4306%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="91.2046%" y="597" width="0.0175%" height="15" fill="rgb(247,160,36)" fg:x="26007" fg:w="5"/><text x="91.4546%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.14%)</title><rect x="91.9937%" y="613" width="0.1403%" height="15" fill="rgb(234,13,49)" fg:x="26232" fg:w="40"/><text x="92.2437%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.10%)</title><rect x="92.0323%" y="597" width="0.1017%" height="15" fill="rgb(234,122,0)" fg:x="26243" fg:w="29"/><text x="92.2823%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.08%)</title><rect x="92.0568%" y="581" width="0.0772%" height="15" fill="rgb(207,146,38)" fg:x="26250" fg:w="22"/><text x="92.3068%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="92.1164%" y="565" width="0.0175%" height="15" fill="rgb(207,177,25)" fg:x="26267" fg:w="5"/><text x="92.3664%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="92.1340%" y="613" width="0.0105%" height="15" fill="rgb(211,178,42)" fg:x="26272" fg:w="3"/><text x="92.3840%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (22 samples, 0.08%)</title><rect x="92.1445%" y="613" width="0.0772%" height="15" fill="rgb(230,69,54)" fg:x="26275" fg:w="22"/><text x="92.3945%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.03%)</title><rect x="92.1936%" y="597" width="0.0281%" height="15" fill="rgb(214,135,41)" fg:x="26289" fg:w="8"/><text x="92.4436%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.05%)</title><rect x="92.2251%" y="613" width="0.0456%" height="15" fill="rgb(237,67,25)" fg:x="26298" fg:w="13"/><text x="92.4751%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (25,766 samples, 90.36%)</title><rect x="1.9253%" y="645" width="90.3595%" height="15" fill="rgb(222,189,50)" fg:x="549" fg:w="25766"/><text x="2.1753%" y="655.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (303 samples, 1.06%)</title><rect x="91.2222%" y="629" width="1.0626%" height="15" fill="rgb(245,148,34)" fg:x="26012" fg:w="303"/><text x="91.4722%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="92.2742%" y="613" width="0.0105%" height="15" fill="rgb(222,29,6)" fg:x="26312" fg:w="3"/><text x="92.5242%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (3 samples, 0.01%)</title><rect x="93.2492%" y="613" width="0.0105%" height="15" fill="rgb(221,189,43)" fg:x="26590" fg:w="3"/><text x="93.4992%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.06%)</title><rect x="93.2807%" y="597" width="0.0561%" height="15" fill="rgb(207,36,27)" fg:x="26599" fg:w="16"/><text x="93.5307%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.03%)</title><rect x="93.3088%" y="581" width="0.0281%" height="15" fill="rgb(217,90,24)" fg:x="26607" fg:w="8"/><text x="93.5588%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (40 samples, 0.14%)</title><rect x="93.2001%" y="629" width="0.1403%" height="15" fill="rgb(224,66,35)" fg:x="26576" fg:w="40"/><text x="93.4501%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.08%)</title><rect x="93.2597%" y="613" width="0.0807%" height="15" fill="rgb(221,13,50)" fg:x="26593" fg:w="23"/><text x="93.5097%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.04%)</title><rect x="93.4140%" y="613" width="0.0386%" height="15" fill="rgb(236,68,49)" fg:x="26637" fg:w="11"/><text x="93.6640%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.11%)</title><rect x="93.3474%" y="629" width="0.1087%" height="15" fill="rgb(229,146,28)" fg:x="26618" fg:w="31"/><text x="93.5974%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (6 samples, 0.02%)</title><rect x="93.4596%" y="629" width="0.0210%" height="15" fill="rgb(225,31,38)" fg:x="26650" fg:w="6"/><text x="93.7096%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,186 samples, 91.83%)</title><rect x="1.6588%" y="661" width="91.8324%" height="15" fill="rgb(250,208,3)" fg:x="473" fg:w="26186"/><text x="1.9088%" y="671.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (344 samples, 1.21%)</title><rect x="92.2848%" y="645" width="1.2064%" height="15" fill="rgb(246,54,23)" fg:x="26315" fg:w="344"/><text x="92.5348%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (3 samples, 0.01%)</title><rect x="93.4806%" y="629" width="0.0105%" height="15" fill="rgb(243,76,11)" fg:x="26656" fg:w="3"/><text x="93.7306%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.11%)</title><rect x="94.4100%" y="613" width="0.1087%" height="15" fill="rgb(245,21,50)" fg:x="26921" fg:w="31"/><text x="94.6600%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="94.4976%" y="597" width="0.0210%" height="15" fill="rgb(228,9,43)" fg:x="26946" fg:w="6"/><text x="94.7476%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.19%)</title><rect x="94.3433%" y="645" width="0.1859%" height="15" fill="rgb(208,100,47)" fg:x="26902" fg:w="53"/><text x="94.5933%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.14%)</title><rect x="94.3924%" y="629" width="0.1368%" height="15" fill="rgb(232,26,8)" fg:x="26916" fg:w="39"/><text x="94.6424%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="94.5187%" y="613" width="0.0105%" height="15" fill="rgb(216,166,38)" fg:x="26952" fg:w="3"/><text x="94.7687%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (3 samples, 0.01%)</title><rect x="94.5292%" y="645" width="0.0105%" height="15" fill="rgb(251,202,51)" fg:x="26955" fg:w="3"/><text x="94.7792%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.05%)</title><rect x="94.6099%" y="629" width="0.0456%" height="15" fill="rgb(254,216,34)" fg:x="26978" fg:w="13"/><text x="94.8599%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.12%)</title><rect x="94.5397%" y="645" width="0.1227%" height="15" fill="rgb(251,32,27)" fg:x="26958" fg:w="35"/><text x="94.7897%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.04%)</title><rect x="94.6660%" y="645" width="0.0421%" height="15" fill="rgb(208,127,28)" fg:x="26994" fg:w="12"/><text x="94.9160%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,616 samples, 93.34%)</title><rect x="1.3852%" y="677" width="93.3403%" height="15" fill="rgb(224,137,22)" fg:x="395" fg:w="26616"/><text x="1.6352%" y="687.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (352 samples, 1.23%)</title><rect x="93.4911%" y="661" width="1.2344%" height="15" fill="rgb(254,70,32)" fg:x="26659" fg:w="352"/><text x="93.7411%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.01%)</title><rect x="94.7116%" y="645" width="0.0140%" height="15" fill="rgb(229,75,37)" fg:x="27007" fg:w="4"/><text x="94.9616%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.08%)</title><rect x="95.5462%" y="629" width="0.0807%" height="15" fill="rgb(252,64,23)" fg:x="27245" fg:w="23"/><text x="95.7962%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (5 samples, 0.02%)</title><rect x="95.6093%" y="613" width="0.0175%" height="15" fill="rgb(232,162,48)" fg:x="27263" fg:w="5"/><text x="95.8593%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (47 samples, 0.16%)</title><rect x="95.4655%" y="661" width="0.1648%" height="15" fill="rgb(246,160,12)" fg:x="27222" fg:w="47"/><text x="95.7155%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.10%)</title><rect x="95.5322%" y="645" width="0.0982%" height="15" fill="rgb(247,166,0)" fg:x="27241" fg:w="28"/><text x="95.7822%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.11%)</title><rect x="95.6339%" y="661" width="0.1122%" height="15" fill="rgb(249,219,21)" fg:x="27270" fg:w="32"/><text x="95.8839%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (15 samples, 0.05%)</title><rect x="95.6935%" y="645" width="0.0526%" height="15" fill="rgb(205,209,3)" fg:x="27287" fg:w="15"/><text x="95.9435%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="95.7461%" y="661" width="0.0281%" height="15" fill="rgb(243,44,1)" fg:x="27302" fg:w="8"/><text x="95.9961%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,970 samples, 94.58%)</title><rect x="1.1994%" y="693" width="94.5818%" height="15" fill="rgb(206,159,16)" fg:x="342" fg:w="26970"/><text x="1.4494%" y="703.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (301 samples, 1.06%)</title><rect x="94.7256%" y="677" width="1.0556%" height="15" fill="rgb(244,77,30)" fg:x="27011" fg:w="301"/><text x="94.9756%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.11%)</title><rect x="96.2616%" y="677" width="0.1087%" height="15" fill="rgb(218,69,12)" fg:x="27449" fg:w="31"/><text x="96.5116%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.08%)</title><rect x="96.2932%" y="661" width="0.0772%" height="15" fill="rgb(212,87,7)" fg:x="27458" fg:w="22"/><text x="96.5432%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.06%)</title><rect x="96.3142%" y="645" width="0.0561%" height="15" fill="rgb(245,114,25)" fg:x="27464" fg:w="16"/><text x="96.5642%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.02%)</title><rect x="96.3949%" y="661" width="0.0210%" height="15" fill="rgb(210,61,42)" fg:x="27487" fg:w="6"/><text x="96.6449%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.05%)</title><rect x="96.3738%" y="677" width="0.0456%" height="15" fill="rgb(211,52,33)" fg:x="27481" fg:w="13"/><text x="96.6238%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,197 samples, 95.38%)</title><rect x="1.0626%" y="709" width="95.3779%" height="15" fill="rgb(234,58,33)" fg:x="303" fg:w="27197"/><text x="1.3126%" y="719.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (188 samples, 0.66%)</title><rect x="95.7812%" y="693" width="0.6593%" height="15" fill="rgb(220,115,36)" fg:x="27312" fg:w="188"/><text x="96.0312%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (5 samples, 0.02%)</title><rect x="96.4229%" y="677" width="0.0175%" height="15" fill="rgb(243,153,54)" fg:x="27495" fg:w="5"/><text x="96.6729%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.04%)</title><rect x="96.6930%" y="661" width="0.0421%" height="15" fill="rgb(251,47,18)" fg:x="27572" fg:w="12"/><text x="96.9430%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.02%)</title><rect x="96.7140%" y="645" width="0.0210%" height="15" fill="rgb(242,102,42)" fg:x="27578" fg:w="6"/><text x="96.9640%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.07%)</title><rect x="96.6719%" y="693" width="0.0736%" height="15" fill="rgb(234,31,38)" fg:x="27566" fg:w="21"/><text x="96.9219%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.06%)</title><rect x="96.6860%" y="677" width="0.0596%" height="15" fill="rgb(221,117,51)" fg:x="27570" fg:w="17"/><text x="96.9360%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="96.7351%" y="661" width="0.0105%" height="15" fill="rgb(212,20,18)" fg:x="27584" fg:w="3"/><text x="96.9851%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.04%)</title><rect x="96.7666%" y="677" width="0.0351%" height="15" fill="rgb(245,133,36)" fg:x="27593" fg:w="10"/><text x="97.0166%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.06%)</title><rect x="96.7456%" y="693" width="0.0596%" height="15" fill="rgb(212,6,19)" fg:x="27587" fg:w="17"/><text x="96.9956%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (7 samples, 0.02%)</title><rect x="96.8087%" y="693" width="0.0245%" height="15" fill="rgb(218,1,36)" fg:x="27605" fg:w="7"/><text x="97.0587%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,342 samples, 95.89%)</title><rect x="0.9504%" y="725" width="95.8864%" height="15" fill="rgb(246,84,54)" fg:x="271" fg:w="27342"/><text x="1.2004%" y="735.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (113 samples, 0.40%)</title><rect x="96.4405%" y="709" width="0.3963%" height="15" fill="rgb(242,110,6)" fg:x="27500" fg:w="113"/><text x="96.6905%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.02%)</title><rect x="97.0331%" y="709" width="0.0245%" height="15" fill="rgb(214,47,5)" fg:x="27669" fg:w="7"/><text x="97.2831%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (4 samples, 0.01%)</title><rect x="97.0437%" y="693" width="0.0140%" height="15" fill="rgb(218,159,25)" fg:x="27672" fg:w="4"/><text x="97.2937%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.02%)</title><rect x="97.0612%" y="709" width="0.0245%" height="15" fill="rgb(215,211,28)" fg:x="27677" fg:w="7"/><text x="97.3112%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.01%)</title><rect x="97.0717%" y="693" width="0.0140%" height="15" fill="rgb(238,59,32)" fg:x="27680" fg:w="4"/><text x="97.3217%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,431 samples, 96.20%)</title><rect x="0.9013%" y="741" width="96.1985%" height="15" fill="rgb(226,82,3)" fg:x="257" fg:w="27431"/><text x="1.1513%" y="751.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (75 samples, 0.26%)</title><rect x="96.8368%" y="725" width="0.2630%" height="15" fill="rgb(240,164,32)" fg:x="27613" fg:w="75"/><text x="97.0868%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (4 samples, 0.01%)</title><rect x="97.0857%" y="709" width="0.0140%" height="15" fill="rgb(232,46,7)" fg:x="27684" fg:w="4"/><text x="97.3357%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="97.2576%" y="725" width="0.0140%" height="15" fill="rgb(229,129,53)" fg:x="27733" fg:w="4"/><text x="97.5076%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="97.2716%" y="725" width="0.0210%" height="15" fill="rgb(234,188,29)" fg:x="27737" fg:w="6"/><text x="97.5216%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="97.2821%" y="709" width="0.0105%" height="15" fill="rgb(246,141,4)" fg:x="27740" fg:w="3"/><text x="97.5321%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,498 samples, 96.43%)</title><rect x="0.8627%" y="757" width="96.4335%" height="15" fill="rgb(229,23,39)" fg:x="246" fg:w="27498"/><text x="1.1127%" y="767.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (56 samples, 0.20%)</title><rect x="97.0998%" y="741" width="0.1964%" height="15" fill="rgb(206,12,3)" fg:x="27688" fg:w="56"/><text x="97.3498%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="97.4049%" y="741" width="0.0105%" height="15" fill="rgb(252,226,20)" fg:x="27775" fg:w="3"/><text x="97.6549%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.02%)</title><rect x="97.4189%" y="741" width="0.0210%" height="15" fill="rgb(216,123,35)" fg:x="27779" fg:w="6"/><text x="97.6689%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.01%)</title><rect x="97.4294%" y="725" width="0.0105%" height="15" fill="rgb(212,68,40)" fg:x="27782" fg:w="3"/><text x="97.6794%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,552 samples, 96.62%)</title><rect x="0.8241%" y="773" width="96.6228%" height="15" fill="rgb(254,125,32)" fg:x="235" fg:w="27552"/><text x="1.0741%" y="783.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (43 samples, 0.15%)</title><rect x="97.2962%" y="757" width="0.1508%" height="15" fill="rgb(253,97,22)" fg:x="27744" fg:w="43"/><text x="97.5462%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.02%)</title><rect x="97.5276%" y="725" width="0.0210%" height="15" fill="rgb(241,101,14)" fg:x="27810" fg:w="6"/><text x="97.7776%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.03%)</title><rect x="97.5241%" y="757" width="0.0316%" height="15" fill="rgb(238,103,29)" fg:x="27809" fg:w="9"/><text x="97.7741%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.03%)</title><rect x="97.5241%" y="741" width="0.0316%" height="15" fill="rgb(233,195,47)" fg:x="27809" fg:w="9"/><text x="97.7741%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,600 samples, 96.79%)</title><rect x="0.7785%" y="789" width="96.7912%" height="15" fill="rgb(246,218,30)" fg:x="222" fg:w="27600"/><text x="1.0285%" y="799.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (35 samples, 0.12%)</title><rect x="97.4470%" y="773" width="0.1227%" height="15" fill="rgb(219,145,47)" fg:x="27787" fg:w="35"/><text x="97.6970%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (4 samples, 0.01%)</title><rect x="97.6223%" y="773" width="0.0140%" height="15" fill="rgb(243,12,26)" fg:x="27837" fg:w="4"/><text x="97.8723%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,632 samples, 96.90%)</title><rect x="0.7435%" y="805" width="96.9034%" height="15" fill="rgb(214,87,16)" fg:x="212" fg:w="27632"/><text x="0.9935%" y="815.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (22 samples, 0.08%)</title><rect x="97.5697%" y="789" width="0.0772%" height="15" fill="rgb(208,99,42)" fg:x="27822" fg:w="22"/><text x="97.8197%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,644 samples, 96.95%)</title><rect x="0.7294%" y="821" width="96.9455%" height="15" fill="rgb(253,99,2)" fg:x="208" fg:w="27644"/><text x="0.9794%" y="831.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (8 samples, 0.03%)</title><rect x="97.6469%" y="805" width="0.0281%" height="15" fill="rgb(220,168,23)" fg:x="27844" fg:w="8"/><text x="97.8969%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.01%)</title><rect x="97.6644%" y="789" width="0.0105%" height="15" fill="rgb(242,38,24)" fg:x="27849" fg:w="3"/><text x="97.9144%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.01%)</title><rect x="97.6644%" y="773" width="0.0105%" height="15" fill="rgb(225,182,9)" fg:x="27849" fg:w="3"/><text x="97.9144%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,647 samples, 96.96%)</title><rect x="0.7294%" y="853" width="96.9560%" height="15" fill="rgb(243,178,37)" fg:x="208" fg:w="27647"/><text x="0.9794%" y="863.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27,647 samples, 96.96%)</title><rect x="0.7294%" y="837" width="96.9560%" height="15" fill="rgb(232,139,19)" fg:x="208" fg:w="27647"/><text x="0.9794%" y="847.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (3 samples, 0.01%)</title><rect x="97.6749%" y="821" width="0.0105%" height="15" fill="rgb(225,201,24)" fg:x="27852" fg:w="3"/><text x="97.9249%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.06%)</title><rect x="99.4284%" y="805" width="0.0631%" height="15" fill="rgb(221,47,46)" fg:x="28352" fg:w="18"/><text x="99.6784%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (3 samples, 0.01%)</title><rect x="99.4810%" y="789" width="0.0105%" height="15" fill="rgb(249,23,13)" fg:x="28367" fg:w="3"/><text x="99.7310%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.16%)</title><rect x="99.3407%" y="837" width="0.1578%" height="15" fill="rgb(219,9,5)" fg:x="28327" fg:w="45"/><text x="99.5907%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (25 samples, 0.09%)</title><rect x="99.4108%" y="821" width="0.0877%" height="15" fill="rgb(254,171,16)" fg:x="28347" fg:w="25"/><text x="99.6608%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.04%)</title><rect x="99.5266%" y="821" width="0.0421%" height="15" fill="rgb(230,171,20)" fg:x="28380" fg:w="12"/><text x="99.7766%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (20 samples, 0.07%)</title><rect x="99.5020%" y="837" width="0.0701%" height="15" fill="rgb(210,71,41)" fg:x="28373" fg:w="20"/><text x="99.7520%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`malloc (3 samples, 0.01%)</title><rect x="99.5722%" y="837" width="0.0105%" height="15" fill="rgb(206,173,20)" fg:x="28393" fg:w="3"/><text x="99.8222%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.03%)</title><rect x="99.5897%" y="837" width="0.0281%" height="15" fill="rgb(233,88,34)" fg:x="28398" fg:w="8"/><text x="99.8397%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (5 samples, 0.02%)</title><rect x="99.6213%" y="837" width="0.0175%" height="15" fill="rgb(223,209,46)" fg:x="28407" fg:w="5"/><text x="99.8713%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.04%)</title><rect x="99.6388%" y="837" width="0.0421%" height="15" fill="rgb(250,43,18)" fg:x="28412" fg:w="12"/><text x="99.8888%" y="847.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (3 samples, 0.01%)</title><rect x="99.6809%" y="837" width="0.0105%" height="15" fill="rgb(208,13,10)" fg:x="28424" fg:w="3"/><text x="99.9309%" y="847.50"></text></g><g><title>sudoku-solver`__rdl_alloc (6 samples, 0.02%)</title><rect x="99.6914%" y="837" width="0.0210%" height="15" fill="rgb(212,200,36)" fg:x="28427" fg:w="6"/><text x="99.9414%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.13%)</title><rect x="99.8527%" y="789" width="0.1298%" height="15" fill="rgb(225,90,30)" fg:x="28473" fg:w="37"/><text x="100.1027%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.04%)</title><rect x="99.9474%" y="773" width="0.0351%" height="15" fill="rgb(236,182,39)" fg:x="28500" fg:w="10"/><text x="100.1974%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (70 samples, 0.25%)</title><rect x="99.7405%" y="821" width="0.2455%" height="15" fill="rgb(212,144,35)" fg:x="28441" fg:w="70"/><text x="99.9905%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.16%)</title><rect x="99.8282%" y="805" width="0.1578%" height="15" fill="rgb(228,63,44)" fg:x="28466" fg:w="45"/><text x="100.0782%" y="815.50"></text></g><g><title>all (28,515 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(228,109,6)" fg:x="0" fg:w="28515"/><text x="0.2500%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (28,507 samples, 99.97%)</title><rect x="0.0281%" y="949" width="99.9719%" height="15" fill="rgb(238,117,24)" fg:x="8" fg:w="28507"/><text x="0.2781%" y="959.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (28,507 samples, 99.97%)</title><rect x="0.0281%" y="933" width="99.9719%" height="15" fill="rgb(242,26,26)" fg:x="8" fg:w="28507"/><text x="0.2781%" y="943.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>sudoku-solver`std::sys::unix::thread::Thread::new::thread_start (28,507 samples, 99.97%)</title><rect x="0.0281%" y="917" width="99.9719%" height="15" fill="rgb(221,92,48)" fg:x="8" fg:w="28507"/><text x="0.2781%" y="927.50">sudoku-solver`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}} (28,507 samples, 99.97%)</title><rect x="0.0281%" y="901" width="99.9719%" height="15" fill="rgb(209,209,32)" fg:x="8" fg:w="28507"/><text x="0.2781%" y="911.50">sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (28,507 samples, 99.97%)</title><rect x="0.0281%" y="885" width="99.9719%" height="15" fill="rgb(221,70,22)" fg:x="8" fg:w="28507"/><text x="0.2781%" y="895.50">sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sudoku-solver`sudoku_solver::solve_sudoku (28,479 samples, 99.87%)</title><rect x="0.1262%" y="869" width="99.8738%" height="15" fill="rgb(248,145,5)" fg:x="36" fg:w="28479"/><text x="0.3762%" y="879.50">sudoku-solver`sudoku_solver::solve_sudoku</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (660 samples, 2.31%)</title><rect x="97.6854%" y="853" width="2.3146%" height="15" fill="rgb(226,116,26)" fg:x="27855" fg:w="660"/><text x="97.9354%" y="863.50">s..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (82 samples, 0.29%)</title><rect x="99.7124%" y="837" width="0.2876%" height="15" fill="rgb(244,5,17)" fg:x="28433" fg:w="82"/><text x="99.9624%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (4 samples, 0.01%)</title><rect x="99.9860%" y="821" width="0.0140%" height="15" fill="rgb(252,159,33)" fg:x="28511" fg:w="4"/><text x="100.2360%" y="831.50"></text></g></svg></svg>