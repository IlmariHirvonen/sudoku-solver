<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1446" onload="init(evt)" viewBox="0 0 1200 1446" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1446" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1429.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1429.00"> </text><svg id="frames" x="10" width="1180" total_samples="256269"><g><title>libsystem_malloc.dylib`free (28 samples, 0.01%)</title><rect x="0.0390%" y="1205" width="0.0109%" height="15" fill="rgb(227,0,7)" fg:x="100" fg:w="28"/><text x="0.2890%" y="1215.50"></text></g><g><title>libsystem_malloc.dylib`free (46 samples, 0.02%)</title><rect x="0.0644%" y="1189" width="0.0179%" height="15" fill="rgb(217,0,24)" fg:x="165" fg:w="46"/><text x="0.3144%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (27 samples, 0.01%)</title><rect x="0.0886%" y="1189" width="0.0105%" height="15" fill="rgb(221,193,54)" fg:x="227" fg:w="27"/><text x="0.3386%" y="1199.50"></text></g><g><title>libsystem_malloc.dylib`free (57 samples, 0.02%)</title><rect x="0.1089%" y="1173" width="0.0222%" height="15" fill="rgb(248,212,6)" fg:x="279" fg:w="57"/><text x="0.3589%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (33 samples, 0.01%)</title><rect x="0.1182%" y="1157" width="0.0129%" height="15" fill="rgb(208,68,35)" fg:x="303" fg:w="33"/><text x="0.3682%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (32 samples, 0.01%)</title><rect x="0.1385%" y="1173" width="0.0125%" height="15" fill="rgb(232,128,0)" fg:x="355" fg:w="32"/><text x="0.3885%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`free (62 samples, 0.02%)</title><rect x="0.1615%" y="1157" width="0.0242%" height="15" fill="rgb(207,160,47)" fg:x="414" fg:w="62"/><text x="0.4115%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (33 samples, 0.01%)</title><rect x="0.1729%" y="1141" width="0.0129%" height="15" fill="rgb(228,23,34)" fg:x="443" fg:w="33"/><text x="0.4229%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free (66 samples, 0.03%)</title><rect x="0.2072%" y="1141" width="0.0258%" height="15" fill="rgb(218,30,26)" fg:x="531" fg:w="66"/><text x="0.4572%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (40 samples, 0.02%)</title><rect x="0.2173%" y="1125" width="0.0156%" height="15" fill="rgb(220,122,19)" fg:x="557" fg:w="40"/><text x="0.4673%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (31 samples, 0.01%)</title><rect x="0.2392%" y="1141" width="0.0121%" height="15" fill="rgb(250,228,42)" fg:x="613" fg:w="31"/><text x="0.4892%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.02%)</title><rect x="0.2607%" y="1125" width="0.0160%" height="15" fill="rgb(240,193,28)" fg:x="668" fg:w="41"/><text x="0.5107%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (28 samples, 0.01%)</title><rect x="0.2657%" y="1109" width="0.0109%" height="15" fill="rgb(216,20,37)" fg:x="681" fg:w="28"/><text x="0.5157%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (33 samples, 0.01%)</title><rect x="0.2841%" y="1125" width="0.0129%" height="15" fill="rgb(206,188,39)" fg:x="728" fg:w="33"/><text x="0.5341%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (59 samples, 0.02%)</title><rect x="0.3215%" y="1093" width="0.0230%" height="15" fill="rgb(217,207,13)" fg:x="824" fg:w="59"/><text x="0.5715%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free (98 samples, 0.04%)</title><rect x="0.3067%" y="1109" width="0.0382%" height="15" fill="rgb(231,73,38)" fg:x="786" fg:w="98"/><text x="0.5567%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (45 samples, 0.02%)</title><rect x="0.3531%" y="1109" width="0.0176%" height="15" fill="rgb(225,20,46)" fg:x="905" fg:w="45"/><text x="0.6031%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (106 samples, 0.04%)</title><rect x="0.4113%" y="1077" width="0.0414%" height="15" fill="rgb(210,31,41)" fg:x="1054" fg:w="106"/><text x="0.6613%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free (169 samples, 0.07%)</title><rect x="0.3883%" y="1093" width="0.0659%" height="15" fill="rgb(221,200,47)" fg:x="995" fg:w="169"/><text x="0.6383%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (40 samples, 0.02%)</title><rect x="0.4573%" y="1093" width="0.0156%" height="15" fill="rgb(226,26,5)" fg:x="1172" fg:w="40"/><text x="0.7073%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (82 samples, 0.03%)</title><rect x="0.4729%" y="1093" width="0.0320%" height="15" fill="rgb(249,33,26)" fg:x="1212" fg:w="82"/><text x="0.7229%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (178 samples, 0.07%)</title><rect x="0.5685%" y="1061" width="0.0695%" height="15" fill="rgb(235,183,28)" fg:x="1457" fg:w="178"/><text x="0.8185%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free (271 samples, 0.11%)</title><rect x="0.5330%" y="1077" width="0.1057%" height="15" fill="rgb(221,5,38)" fg:x="1366" fg:w="271"/><text x="0.7830%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (65 samples, 0.03%)</title><rect x="0.6407%" y="1077" width="0.0254%" height="15" fill="rgb(247,18,42)" fg:x="1642" fg:w="65"/><text x="0.8907%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (126 samples, 0.05%)</title><rect x="0.6661%" y="1077" width="0.0492%" height="15" fill="rgb(241,131,45)" fg:x="1707" fg:w="126"/><text x="0.9161%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (235 samples, 0.09%)</title><rect x="0.8109%" y="1045" width="0.0917%" height="15" fill="rgb(249,31,29)" fg:x="2078" fg:w="235"/><text x="1.0609%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free (378 samples, 0.15%)</title><rect x="0.7566%" y="1061" width="0.1475%" height="15" fill="rgb(225,111,53)" fg:x="1939" fg:w="378"/><text x="1.0066%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (94 samples, 0.04%)</title><rect x="0.9100%" y="1061" width="0.0367%" height="15" fill="rgb(238,160,17)" fg:x="2332" fg:w="94"/><text x="1.1600%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (178 samples, 0.07%)</title><rect x="0.9467%" y="1061" width="0.0695%" height="15" fill="rgb(214,148,48)" fg:x="2426" fg:w="178"/><text x="1.1967%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (30 samples, 0.01%)</title><rect x="1.0571%" y="1045" width="0.0117%" height="15" fill="rgb(232,36,49)" fg:x="2709" fg:w="30"/><text x="1.3071%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (240 samples, 0.09%)</title><rect x="1.1390%" y="1029" width="0.0937%" height="15" fill="rgb(209,103,24)" fg:x="2919" fg:w="240"/><text x="1.3890%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free (427 samples, 0.17%)</title><rect x="1.0688%" y="1045" width="0.1666%" height="15" fill="rgb(229,88,8)" fg:x="2739" fg:w="427"/><text x="1.3188%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (97 samples, 0.04%)</title><rect x="1.2432%" y="1045" width="0.0379%" height="15" fill="rgb(213,181,19)" fg:x="3186" fg:w="97"/><text x="1.4932%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (211 samples, 0.08%)</title><rect x="1.2811%" y="1045" width="0.0823%" height="15" fill="rgb(254,191,54)" fg:x="3283" fg:w="211"/><text x="1.5311%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (27 samples, 0.01%)</title><rect x="1.3634%" y="1045" width="0.0105%" height="15" fill="rgb(241,83,37)" fg:x="3494" fg:w="27"/><text x="1.6134%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (32 samples, 0.01%)</title><rect x="1.4106%" y="1029" width="0.0125%" height="15" fill="rgb(233,36,39)" fg:x="3615" fg:w="32"/><text x="1.6606%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (215 samples, 0.08%)</title><rect x="1.4895%" y="1013" width="0.0839%" height="15" fill="rgb(226,3,54)" fg:x="3817" fg:w="215"/><text x="1.7395%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (388 samples, 0.15%)</title><rect x="1.4231%" y="1029" width="0.1514%" height="15" fill="rgb(245,192,40)" fg:x="3647" fg:w="388"/><text x="1.6731%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (112 samples, 0.04%)</title><rect x="1.5812%" y="1029" width="0.0437%" height="15" fill="rgb(238,167,29)" fg:x="4052" fg:w="112"/><text x="1.8312%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (184 samples, 0.07%)</title><rect x="1.6249%" y="1029" width="0.0718%" height="15" fill="rgb(232,182,51)" fg:x="4164" fg:w="184"/><text x="1.8749%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (30 samples, 0.01%)</title><rect x="1.6967%" y="1029" width="0.0117%" height="15" fill="rgb(231,60,39)" fg:x="4348" fg:w="30"/><text x="1.9467%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (221 samples, 0.09%)</title><rect x="1.8215%" y="997" width="0.0862%" height="15" fill="rgb(208,69,12)" fg:x="4668" fg:w="221"/><text x="2.0715%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free (404 samples, 0.16%)</title><rect x="1.7536%" y="1013" width="0.1576%" height="15" fill="rgb(235,93,37)" fg:x="4494" fg:w="404"/><text x="2.0036%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (71 samples, 0.03%)</title><rect x="1.9171%" y="1013" width="0.0277%" height="15" fill="rgb(213,116,39)" fg:x="4913" fg:w="71"/><text x="2.1671%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (168 samples, 0.07%)</title><rect x="1.9448%" y="1013" width="0.0656%" height="15" fill="rgb(222,207,29)" fg:x="4984" fg:w="168"/><text x="2.1948%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (29 samples, 0.01%)</title><rect x="2.0104%" y="1013" width="0.0113%" height="15" fill="rgb(206,96,30)" fg:x="5152" fg:w="29"/><text x="2.2604%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (163 samples, 0.06%)</title><rect x="2.1064%" y="981" width="0.0636%" height="15" fill="rgb(218,138,4)" fg:x="5398" fg:w="163"/><text x="2.3564%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free (287 samples, 0.11%)</title><rect x="2.0615%" y="997" width="0.1120%" height="15" fill="rgb(250,191,14)" fg:x="5283" fg:w="287"/><text x="2.3115%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (59 samples, 0.02%)</title><rect x="2.1774%" y="997" width="0.0230%" height="15" fill="rgb(239,60,40)" fg:x="5580" fg:w="59"/><text x="2.4274%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (124 samples, 0.05%)</title><rect x="2.2004%" y="997" width="0.0484%" height="15" fill="rgb(206,27,48)" fg:x="5639" fg:w="124"/><text x="2.4504%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (106 samples, 0.04%)</title><rect x="2.2968%" y="965" width="0.0414%" height="15" fill="rgb(225,35,8)" fg:x="5886" fg:w="106"/><text x="2.5468%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free (174 samples, 0.07%)</title><rect x="2.2722%" y="981" width="0.0679%" height="15" fill="rgb(250,213,24)" fg:x="5823" fg:w="174"/><text x="2.5222%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (51 samples, 0.02%)</title><rect x="2.3417%" y="981" width="0.0199%" height="15" fill="rgb(247,123,22)" fg:x="6001" fg:w="51"/><text x="2.5917%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (82 samples, 0.03%)</title><rect x="2.3616%" y="981" width="0.0320%" height="15" fill="rgb(231,138,38)" fg:x="6052" fg:w="82"/><text x="2.6116%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (155 samples, 0.06%)</title><rect x="2.4654%" y="949" width="0.0605%" height="15" fill="rgb(231,145,46)" fg:x="6318" fg:w="155"/><text x="2.7154%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free (266 samples, 0.10%)</title><rect x="2.4244%" y="965" width="0.1038%" height="15" fill="rgb(251,118,11)" fg:x="6213" fg:w="266"/><text x="2.6744%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (56 samples, 0.02%)</title><rect x="2.5329%" y="965" width="0.0219%" height="15" fill="rgb(217,147,25)" fg:x="6491" fg:w="56"/><text x="2.7829%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (150 samples, 0.06%)</title><rect x="2.5547%" y="965" width="0.0585%" height="15" fill="rgb(247,81,37)" fg:x="6547" fg:w="150"/><text x="2.8047%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (166 samples, 0.06%)</title><rect x="2.6862%" y="933" width="0.0648%" height="15" fill="rgb(209,12,38)" fg:x="6884" fg:w="166"/><text x="2.9362%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (274 samples, 0.11%)</title><rect x="2.6453%" y="949" width="0.1069%" height="15" fill="rgb(227,1,9)" fg:x="6779" fg:w="274"/><text x="2.8953%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (57 samples, 0.02%)</title><rect x="2.7553%" y="949" width="0.0222%" height="15" fill="rgb(248,47,43)" fg:x="7061" fg:w="57"/><text x="3.0053%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (146 samples, 0.06%)</title><rect x="2.7776%" y="949" width="0.0570%" height="15" fill="rgb(221,10,30)" fg:x="7118" fg:w="146"/><text x="3.0276%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (136 samples, 0.05%)</title><rect x="2.8962%" y="917" width="0.0531%" height="15" fill="rgb(210,229,1)" fg:x="7422" fg:w="136"/><text x="3.1462%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free (220 samples, 0.09%)</title><rect x="2.8650%" y="933" width="0.0858%" height="15" fill="rgb(222,148,37)" fg:x="7342" fg:w="220"/><text x="3.1150%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (62 samples, 0.02%)</title><rect x="2.9535%" y="933" width="0.0242%" height="15" fill="rgb(234,67,33)" fg:x="7569" fg:w="62"/><text x="3.2035%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (102 samples, 0.04%)</title><rect x="2.9777%" y="933" width="0.0398%" height="15" fill="rgb(247,98,35)" fg:x="7631" fg:w="102"/><text x="3.2277%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (174 samples, 0.07%)</title><rect x="3.0878%" y="901" width="0.0679%" height="15" fill="rgb(247,138,52)" fg:x="7913" fg:w="174"/><text x="3.3378%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free (274 samples, 0.11%)</title><rect x="3.0515%" y="917" width="0.1069%" height="15" fill="rgb(213,79,30)" fg:x="7820" fg:w="274"/><text x="3.3015%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (56 samples, 0.02%)</title><rect x="3.1615%" y="917" width="0.0219%" height="15" fill="rgb(246,177,23)" fg:x="8102" fg:w="56"/><text x="3.4115%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (120 samples, 0.05%)</title><rect x="3.1834%" y="917" width="0.0468%" height="15" fill="rgb(230,62,27)" fg:x="8158" fg:w="120"/><text x="3.4334%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (187 samples, 0.07%)</title><rect x="3.3114%" y="885" width="0.0730%" height="15" fill="rgb(216,154,8)" fg:x="8486" fg:w="187"/><text x="3.5614%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (291 samples, 0.11%)</title><rect x="3.2720%" y="901" width="0.1136%" height="15" fill="rgb(244,35,45)" fg:x="8385" fg:w="291"/><text x="3.5220%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (54 samples, 0.02%)</title><rect x="3.3894%" y="901" width="0.0211%" height="15" fill="rgb(251,115,12)" fg:x="8686" fg:w="54"/><text x="3.6394%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (137 samples, 0.05%)</title><rect x="3.4105%" y="901" width="0.0535%" height="15" fill="rgb(240,54,50)" fg:x="8740" fg:w="137"/><text x="3.6605%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (139 samples, 0.05%)</title><rect x="3.5346%" y="869" width="0.0542%" height="15" fill="rgb(233,84,52)" fg:x="9058" fg:w="139"/><text x="3.7846%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (220 samples, 0.09%)</title><rect x="3.5033%" y="885" width="0.0858%" height="15" fill="rgb(207,117,47)" fg:x="8978" fg:w="220"/><text x="3.7533%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (54 samples, 0.02%)</title><rect x="3.5927%" y="885" width="0.0211%" height="15" fill="rgb(249,43,39)" fg:x="9207" fg:w="54"/><text x="3.8427%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (110 samples, 0.04%)</title><rect x="3.6138%" y="885" width="0.0429%" height="15" fill="rgb(209,38,44)" fg:x="9261" fg:w="110"/><text x="3.8638%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (191 samples, 0.07%)</title><rect x="3.7347%" y="853" width="0.0745%" height="15" fill="rgb(236,212,23)" fg:x="9571" fg:w="191"/><text x="3.9847%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (308 samples, 0.12%)</title><rect x="3.6907%" y="869" width="0.1202%" height="15" fill="rgb(242,79,21)" fg:x="9458" fg:w="308"/><text x="3.9407%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (65 samples, 0.03%)</title><rect x="3.8132%" y="869" width="0.0254%" height="15" fill="rgb(211,96,35)" fg:x="9772" fg:w="65"/><text x="4.0632%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (123 samples, 0.05%)</title><rect x="3.8385%" y="869" width="0.0480%" height="15" fill="rgb(253,215,40)" fg:x="9837" fg:w="123"/><text x="4.0885%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (194 samples, 0.08%)</title><rect x="3.9665%" y="837" width="0.0757%" height="15" fill="rgb(211,81,21)" fg:x="10165" fg:w="194"/><text x="4.2165%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free (297 samples, 0.12%)</title><rect x="3.9283%" y="853" width="0.1159%" height="15" fill="rgb(208,190,38)" fg:x="10067" fg:w="297"/><text x="4.1783%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (60 samples, 0.02%)</title><rect x="4.0481%" y="853" width="0.0234%" height="15" fill="rgb(235,213,38)" fg:x="10374" fg:w="60"/><text x="4.2981%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (142 samples, 0.06%)</title><rect x="4.0715%" y="853" width="0.0554%" height="15" fill="rgb(237,122,38)" fg:x="10434" fg:w="142"/><text x="4.3215%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (213 samples, 0.08%)</title><rect x="4.2120%" y="821" width="0.0831%" height="15" fill="rgb(244,218,35)" fg:x="10794" fg:w="213"/><text x="4.4620%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (332 samples, 0.13%)</title><rect x="4.1667%" y="837" width="0.1296%" height="15" fill="rgb(240,68,47)" fg:x="10678" fg:w="332"/><text x="4.4167%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (74 samples, 0.03%)</title><rect x="4.3002%" y="837" width="0.0289%" height="15" fill="rgb(210,16,53)" fg:x="11020" fg:w="74"/><text x="4.5502%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (128 samples, 0.05%)</title><rect x="4.3290%" y="837" width="0.0499%" height="15" fill="rgb(235,124,12)" fg:x="11094" fg:w="128"/><text x="4.5790%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (36 samples, 0.01%)</title><rect x="4.4204%" y="821" width="0.0140%" height="15" fill="rgb(224,169,11)" fg:x="11328" fg:w="36"/><text x="4.6704%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (315 samples, 0.12%)</title><rect x="4.5148%" y="805" width="0.1229%" height="15" fill="rgb(250,166,2)" fg:x="11570" fg:w="315"/><text x="4.7648%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (526 samples, 0.21%)</title><rect x="4.4344%" y="821" width="0.2053%" height="15" fill="rgb(242,216,29)" fg:x="11364" fg:w="526"/><text x="4.6844%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (143 samples, 0.06%)</title><rect x="4.6451%" y="821" width="0.0558%" height="15" fill="rgb(230,116,27)" fg:x="11904" fg:w="143"/><text x="4.8951%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (289 samples, 0.11%)</title><rect x="4.7009%" y="821" width="0.1128%" height="15" fill="rgb(228,99,48)" fg:x="12047" fg:w="289"/><text x="4.9509%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (26 samples, 0.01%)</title><rect x="4.8137%" y="821" width="0.0101%" height="15" fill="rgb(253,11,6)" fg:x="12336" fg:w="26"/><text x="5.0637%" y="831.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (30 samples, 0.01%)</title><rect x="4.8254%" y="821" width="0.0117%" height="15" fill="rgb(247,143,39)" fg:x="12366" fg:w="30"/><text x="5.0754%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (50 samples, 0.02%)</title><rect x="4.8871%" y="805" width="0.0195%" height="15" fill="rgb(236,97,10)" fg:x="12524" fg:w="50"/><text x="5.1371%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (485 samples, 0.19%)</title><rect x="5.0353%" y="789" width="0.1893%" height="15" fill="rgb(233,208,19)" fg:x="12904" fg:w="485"/><text x="5.2853%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (848 samples, 0.33%)</title><rect x="4.9066%" y="805" width="0.3309%" height="15" fill="rgb(216,164,2)" fg:x="12574" fg:w="848"/><text x="5.1566%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (202 samples, 0.08%)</title><rect x="5.2488%" y="805" width="0.0788%" height="15" fill="rgb(220,129,5)" fg:x="13451" fg:w="202"/><text x="5.4988%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (437 samples, 0.17%)</title><rect x="5.3276%" y="805" width="0.1705%" height="15" fill="rgb(242,17,10)" fg:x="13653" fg:w="437"/><text x="5.5776%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (31 samples, 0.01%)</title><rect x="5.4860%" y="789" width="0.0121%" height="15" fill="rgb(242,107,0)" fg:x="14059" fg:w="31"/><text x="5.7360%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`madvise (31 samples, 0.01%)</title><rect x="5.4860%" y="773" width="0.0121%" height="15" fill="rgb(251,28,31)" fg:x="14059" fg:w="31"/><text x="5.7360%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (53 samples, 0.02%)</title><rect x="5.4981%" y="805" width="0.0207%" height="15" fill="rgb(233,223,10)" fg:x="14090" fg:w="53"/><text x="5.7481%" y="815.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (41 samples, 0.02%)</title><rect x="5.5200%" y="805" width="0.0160%" height="15" fill="rgb(215,21,27)" fg:x="14146" fg:w="41"/><text x="5.7700%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (63 samples, 0.02%)</title><rect x="5.5972%" y="789" width="0.0246%" height="15" fill="rgb(232,23,21)" fg:x="14344" fg:w="63"/><text x="5.8472%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (654 samples, 0.26%)</title><rect x="5.7861%" y="773" width="0.2552%" height="15" fill="rgb(244,5,23)" fg:x="14828" fg:w="654"/><text x="6.0361%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (1,094 samples, 0.43%)</title><rect x="5.6218%" y="789" width="0.4269%" height="15" fill="rgb(226,81,46)" fg:x="14407" fg:w="1094"/><text x="5.8718%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (308 samples, 0.12%)</title><rect x="6.0620%" y="789" width="0.1202%" height="15" fill="rgb(247,70,30)" fg:x="15535" fg:w="308"/><text x="6.3120%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (580 samples, 0.23%)</title><rect x="6.1822%" y="789" width="0.2263%" height="15" fill="rgb(212,68,19)" fg:x="15843" fg:w="580"/><text x="6.4322%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (36 samples, 0.01%)</title><rect x="6.3945%" y="773" width="0.0140%" height="15" fill="rgb(240,187,13)" fg:x="16387" fg:w="36"/><text x="6.6445%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`madvise (36 samples, 0.01%)</title><rect x="6.3945%" y="757" width="0.0140%" height="15" fill="rgb(223,113,26)" fg:x="16387" fg:w="36"/><text x="6.6445%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (100 samples, 0.04%)</title><rect x="6.4085%" y="789" width="0.0390%" height="15" fill="rgb(206,192,2)" fg:x="16423" fg:w="100"/><text x="6.6585%" y="799.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (58 samples, 0.02%)</title><rect x="6.4487%" y="789" width="0.0226%" height="15" fill="rgb(241,108,4)" fg:x="16526" fg:w="58"/><text x="6.6987%" y="799.50"></text></g><g><title>sudoku-solver`__rdl_alloc (30 samples, 0.01%)</title><rect x="6.4760%" y="789" width="0.0117%" height="15" fill="rgb(247,173,49)" fg:x="16596" fg:w="30"/><text x="6.7260%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (100 samples, 0.04%)</title><rect x="6.5669%" y="773" width="0.0390%" height="15" fill="rgb(224,114,35)" fg:x="16829" fg:w="100"/><text x="6.8169%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (920 samples, 0.36%)</title><rect x="6.8615%" y="757" width="0.3590%" height="15" fill="rgb(245,159,27)" fg:x="17584" fg:w="920"/><text x="7.1115%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (1,599 samples, 0.62%)</title><rect x="6.6059%" y="773" width="0.6240%" height="15" fill="rgb(245,172,44)" fg:x="16929" fg:w="1599"/><text x="6.8559%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free_small (53 samples, 0.02%)</title><rect x="7.2299%" y="773" width="0.0207%" height="15" fill="rgb(236,23,11)" fg:x="18528" fg:w="53"/><text x="7.4799%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (399 samples, 0.16%)</title><rect x="7.2588%" y="773" width="0.1557%" height="15" fill="rgb(205,117,38)" fg:x="18602" fg:w="399"/><text x="7.5088%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (852 samples, 0.33%)</title><rect x="7.4145%" y="773" width="0.3325%" height="15" fill="rgb(237,72,25)" fg:x="19001" fg:w="852"/><text x="7.6645%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (40 samples, 0.02%)</title><rect x="7.7313%" y="757" width="0.0156%" height="15" fill="rgb(244,70,9)" fg:x="19813" fg:w="40"/><text x="7.9813%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`madvise (40 samples, 0.02%)</title><rect x="7.7313%" y="741" width="0.0156%" height="15" fill="rgb(217,125,39)" fg:x="19813" fg:w="40"/><text x="7.9813%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (107 samples, 0.04%)</title><rect x="7.7469%" y="773" width="0.0418%" height="15" fill="rgb(235,36,10)" fg:x="19853" fg:w="107"/><text x="7.9969%" y="783.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (71 samples, 0.03%)</title><rect x="7.7899%" y="773" width="0.0277%" height="15" fill="rgb(251,123,47)" fg:x="19963" fg:w="71"/><text x="8.0399%" y="783.50"></text></g><g><title>sudoku-solver`__rdl_alloc (35 samples, 0.01%)</title><rect x="7.8242%" y="773" width="0.0137%" height="15" fill="rgb(221,13,13)" fg:x="20051" fg:w="35"/><text x="8.0742%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (108 samples, 0.04%)</title><rect x="7.9409%" y="757" width="0.0421%" height="15" fill="rgb(238,131,9)" fg:x="20350" fg:w="108"/><text x="8.1909%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,002 samples, 0.39%)</title><rect x="8.2823%" y="741" width="0.3910%" height="15" fill="rgb(211,50,8)" fg:x="21225" fg:w="1002"/><text x="8.5323%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (1,799 samples, 0.70%)</title><rect x="7.9830%" y="757" width="0.7020%" height="15" fill="rgb(245,182,24)" fg:x="20458" fg:w="1799"/><text x="8.2330%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_small (51 samples, 0.02%)</title><rect x="8.6850%" y="757" width="0.0199%" height="15" fill="rgb(242,14,37)" fg:x="22257" fg:w="51"/><text x="8.9350%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (417 samples, 0.16%)</title><rect x="8.7104%" y="757" width="0.1627%" height="15" fill="rgb(246,228,12)" fg:x="22322" fg:w="417"/><text x="8.9604%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (928 samples, 0.36%)</title><rect x="8.8731%" y="757" width="0.3621%" height="15" fill="rgb(213,55,15)" fg:x="22739" fg:w="928"/><text x="9.1231%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (46 samples, 0.02%)</title><rect x="9.2173%" y="741" width="0.0179%" height="15" fill="rgb(209,9,3)" fg:x="23621" fg:w="46"/><text x="9.4673%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`madvise (46 samples, 0.02%)</title><rect x="9.2173%" y="725" width="0.0179%" height="15" fill="rgb(230,59,30)" fg:x="23621" fg:w="46"/><text x="9.4673%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (134 samples, 0.05%)</title><rect x="9.2352%" y="757" width="0.0523%" height="15" fill="rgb(209,121,21)" fg:x="23667" fg:w="134"/><text x="9.4852%" y="767.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (68 samples, 0.03%)</title><rect x="9.2906%" y="757" width="0.0265%" height="15" fill="rgb(220,109,13)" fg:x="23809" fg:w="68"/><text x="9.5406%" y="767.50"></text></g><g><title>sudoku-solver`__rdl_alloc (37 samples, 0.01%)</title><rect x="9.3242%" y="757" width="0.0144%" height="15" fill="rgb(232,18,1)" fg:x="23895" fg:w="37"/><text x="9.5742%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.01%)</title><rect x="9.4346%" y="741" width="0.0129%" height="15" fill="rgb(215,41,42)" fg:x="24178" fg:w="33"/><text x="9.6846%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (81 samples, 0.03%)</title><rect x="9.4475%" y="741" width="0.0316%" height="15" fill="rgb(224,123,36)" fg:x="24211" fg:w="81"/><text x="9.6975%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,046 samples, 0.41%)</title><rect x="9.7757%" y="725" width="0.4082%" height="15" fill="rgb(240,125,3)" fg:x="25052" fg:w="1046"/><text x="10.0257%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (1,829 samples, 0.71%)</title><rect x="9.4791%" y="741" width="0.7137%" height="15" fill="rgb(205,98,50)" fg:x="24292" fg:w="1829"/><text x="9.7291%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_small (43 samples, 0.02%)</title><rect x="10.1928%" y="741" width="0.0168%" height="15" fill="rgb(205,185,37)" fg:x="26121" fg:w="43"/><text x="10.4428%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (414 samples, 0.16%)</title><rect x="10.2147%" y="741" width="0.1615%" height="15" fill="rgb(238,207,15)" fg:x="26177" fg:w="414"/><text x="10.4647%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (919 samples, 0.36%)</title><rect x="10.3762%" y="741" width="0.3586%" height="15" fill="rgb(213,199,42)" fg:x="26591" fg:w="919"/><text x="10.6262%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (33 samples, 0.01%)</title><rect x="10.7219%" y="725" width="0.0129%" height="15" fill="rgb(235,201,11)" fg:x="27477" fg:w="33"/><text x="10.9719%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`madvise (32 samples, 0.01%)</title><rect x="10.7223%" y="709" width="0.0125%" height="15" fill="rgb(207,46,11)" fg:x="27478" fg:w="32"/><text x="10.9723%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (139 samples, 0.05%)</title><rect x="10.7348%" y="741" width="0.0542%" height="15" fill="rgb(241,35,35)" fg:x="27510" fg:w="139"/><text x="10.9848%" y="751.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (73 samples, 0.03%)</title><rect x="10.7918%" y="741" width="0.0285%" height="15" fill="rgb(243,32,47)" fg:x="27656" fg:w="73"/><text x="11.0418%" y="751.50"></text></g><g><title>sudoku-solver`__rdl_alloc (40 samples, 0.02%)</title><rect x="10.8261%" y="741" width="0.0156%" height="15" fill="rgb(247,202,23)" fg:x="27744" fg:w="40"/><text x="11.0761%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (71 samples, 0.03%)</title><rect x="10.9233%" y="725" width="0.0277%" height="15" fill="rgb(219,102,11)" fg:x="27993" fg:w="71"/><text x="11.1733%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (933 samples, 0.36%)</title><rect x="11.2273%" y="709" width="0.3641%" height="15" fill="rgb(243,110,44)" fg:x="28772" fg:w="933"/><text x="11.4773%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (1,678 samples, 0.65%)</title><rect x="10.9510%" y="725" width="0.6548%" height="15" fill="rgb(222,74,54)" fg:x="28064" fg:w="1678"/><text x="11.2010%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_small (40 samples, 0.02%)</title><rect x="11.6058%" y="725" width="0.0156%" height="15" fill="rgb(216,99,12)" fg:x="29742" fg:w="40"/><text x="11.8558%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (306 samples, 0.12%)</title><rect x="11.6280%" y="725" width="0.1194%" height="15" fill="rgb(226,22,26)" fg:x="29799" fg:w="306"/><text x="11.8780%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (751 samples, 0.29%)</title><rect x="11.7474%" y="725" width="0.2931%" height="15" fill="rgb(217,163,10)" fg:x="30105" fg:w="751"/><text x="11.9974%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (132 samples, 0.05%)</title><rect x="12.0405%" y="725" width="0.0515%" height="15" fill="rgb(213,25,53)" fg:x="30856" fg:w="132"/><text x="12.2905%" y="735.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (52 samples, 0.02%)</title><rect x="12.0943%" y="725" width="0.0203%" height="15" fill="rgb(252,105,26)" fg:x="30994" fg:w="52"/><text x="12.3443%" y="735.50"></text></g><g><title>sudoku-solver`__rdl_alloc (29 samples, 0.01%)</title><rect x="12.1224%" y="725" width="0.0113%" height="15" fill="rgb(220,39,43)" fg:x="31066" fg:w="29"/><text x="12.3724%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (48 samples, 0.02%)</title><rect x="12.2051%" y="709" width="0.0187%" height="15" fill="rgb(229,68,48)" fg:x="31278" fg:w="48"/><text x="12.4551%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (743 samples, 0.29%)</title><rect x="12.4280%" y="693" width="0.2899%" height="15" fill="rgb(252,8,32)" fg:x="31849" fg:w="743"/><text x="12.6780%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (1,291 samples, 0.50%)</title><rect x="12.2239%" y="709" width="0.5038%" height="15" fill="rgb(223,20,43)" fg:x="31326" fg:w="1291"/><text x="12.4739%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free_small (36 samples, 0.01%)</title><rect x="12.7276%" y="709" width="0.0140%" height="15" fill="rgb(229,81,49)" fg:x="32617" fg:w="36"/><text x="12.9776%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (214 samples, 0.08%)</title><rect x="12.7487%" y="709" width="0.0835%" height="15" fill="rgb(236,28,36)" fg:x="32671" fg:w="214"/><text x="12.9987%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (625 samples, 0.24%)</title><rect x="12.8322%" y="709" width="0.2439%" height="15" fill="rgb(249,185,26)" fg:x="32885" fg:w="625"/><text x="13.0822%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (101 samples, 0.04%)</title><rect x="13.0761%" y="709" width="0.0394%" height="15" fill="rgb(249,174,33)" fg:x="33510" fg:w="101"/><text x="13.3261%" y="719.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (27 samples, 0.01%)</title><rect x="13.1179%" y="709" width="0.0105%" height="15" fill="rgb(233,201,37)" fg:x="33617" fg:w="27"/><text x="13.3679%" y="719.50"></text></g><g><title>sudoku-solver`__rdl_alloc (26 samples, 0.01%)</title><rect x="13.1358%" y="709" width="0.0101%" height="15" fill="rgb(221,78,26)" fg:x="33663" fg:w="26"/><text x="13.3858%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (49 samples, 0.02%)</title><rect x="13.1850%" y="693" width="0.0191%" height="15" fill="rgb(250,127,30)" fg:x="33789" fg:w="49"/><text x="13.4350%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (494 samples, 0.19%)</title><rect x="13.3169%" y="677" width="0.1928%" height="15" fill="rgb(230,49,44)" fg:x="34127" fg:w="494"/><text x="13.5669%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (799 samples, 0.31%)</title><rect x="13.2041%" y="693" width="0.3118%" height="15" fill="rgb(229,67,23)" fg:x="33838" fg:w="799"/><text x="13.4541%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (229 samples, 0.09%)</title><rect x="13.5237%" y="693" width="0.0894%" height="15" fill="rgb(249,83,47)" fg:x="34657" fg:w="229"/><text x="13.7737%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (371 samples, 0.14%)</title><rect x="13.6130%" y="693" width="0.1448%" height="15" fill="rgb(215,43,3)" fg:x="34886" fg:w="371"/><text x="13.8630%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (66 samples, 0.03%)</title><rect x="13.7578%" y="693" width="0.0258%" height="15" fill="rgb(238,154,13)" fg:x="35257" fg:w="66"/><text x="14.0078%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (44 samples, 0.02%)</title><rect x="13.7840%" y="693" width="0.0172%" height="15" fill="rgb(219,56,2)" fg:x="35324" fg:w="44"/><text x="14.0340%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (88 samples, 0.03%)</title><rect x="13.8678%" y="677" width="0.0343%" height="15" fill="rgb(233,0,4)" fg:x="35539" fg:w="88"/><text x="14.1178%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (667 samples, 0.26%)</title><rect x="14.0661%" y="661" width="0.2603%" height="15" fill="rgb(235,30,7)" fg:x="36047" fg:w="667"/><text x="14.3161%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (1,101 samples, 0.43%)</title><rect x="13.9022%" y="677" width="0.4296%" height="15" fill="rgb(250,79,13)" fg:x="35627" fg:w="1101"/><text x="14.1522%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_small (27 samples, 0.01%)</title><rect x="14.3318%" y="677" width="0.0105%" height="15" fill="rgb(211,146,34)" fg:x="36728" fg:w="27"/><text x="14.5818%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (301 samples, 0.12%)</title><rect x="14.3443%" y="677" width="0.1175%" height="15" fill="rgb(228,22,38)" fg:x="36760" fg:w="301"/><text x="14.5943%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (643 samples, 0.25%)</title><rect x="14.4618%" y="677" width="0.2509%" height="15" fill="rgb(235,168,5)" fg:x="37061" fg:w="643"/><text x="14.7118%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (61 samples, 0.02%)</title><rect x="14.6889%" y="661" width="0.0238%" height="15" fill="rgb(221,155,16)" fg:x="37643" fg:w="61"/><text x="14.9389%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`madvise (61 samples, 0.02%)</title><rect x="14.6889%" y="645" width="0.0238%" height="15" fill="rgb(215,215,53)" fg:x="37643" fg:w="61"/><text x="14.9389%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (74 samples, 0.03%)</title><rect x="14.7127%" y="677" width="0.0289%" height="15" fill="rgb(223,4,10)" fg:x="37704" fg:w="74"/><text x="14.9627%" y="687.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (56 samples, 0.02%)</title><rect x="14.7435%" y="677" width="0.0219%" height="15" fill="rgb(234,103,6)" fg:x="37783" fg:w="56"/><text x="14.9935%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (87 samples, 0.03%)</title><rect x="14.8446%" y="661" width="0.0339%" height="15" fill="rgb(227,97,0)" fg:x="38042" fg:w="87"/><text x="15.0946%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (897 samples, 0.35%)</title><rect x="15.1091%" y="645" width="0.3500%" height="15" fill="rgb(234,150,53)" fg:x="38720" fg:w="897"/><text x="15.3591%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (1,509 samples, 0.59%)</title><rect x="14.8785%" y="661" width="0.5888%" height="15" fill="rgb(228,201,54)" fg:x="38129" fg:w="1509"/><text x="15.1285%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_small (42 samples, 0.02%)</title><rect x="15.4673%" y="661" width="0.0164%" height="15" fill="rgb(222,22,37)" fg:x="39638" fg:w="42"/><text x="15.7173%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (357 samples, 0.14%)</title><rect x="15.4880%" y="661" width="0.1393%" height="15" fill="rgb(237,53,32)" fg:x="39691" fg:w="357"/><text x="15.7380%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (35 samples, 0.01%)</title><rect x="15.9508%" y="645" width="0.0137%" height="15" fill="rgb(233,25,53)" fg:x="40877" fg:w="35"/><text x="16.2008%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`madvise (35 samples, 0.01%)</title><rect x="15.9508%" y="629" width="0.0137%" height="15" fill="rgb(210,40,34)" fg:x="40877" fg:w="35"/><text x="16.2008%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (865 samples, 0.34%)</title><rect x="15.6273%" y="661" width="0.3375%" height="15" fill="rgb(241,220,44)" fg:x="40048" fg:w="865"/><text x="15.8773%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (109 samples, 0.04%)</title><rect x="15.9649%" y="661" width="0.0425%" height="15" fill="rgb(235,28,35)" fg:x="40913" fg:w="109"/><text x="16.2149%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (95 samples, 0.04%)</title><rect x="16.0105%" y="661" width="0.0371%" height="15" fill="rgb(210,56,17)" fg:x="41030" fg:w="95"/><text x="16.2605%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (91 samples, 0.04%)</title><rect x="16.1580%" y="645" width="0.0355%" height="15" fill="rgb(224,130,29)" fg:x="41408" fg:w="91"/><text x="16.4080%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (991 samples, 0.39%)</title><rect x="16.4647%" y="629" width="0.3867%" height="15" fill="rgb(235,212,8)" fg:x="42194" fg:w="991"/><text x="16.7147%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (1,715 samples, 0.67%)</title><rect x="16.1935%" y="645" width="0.6692%" height="15" fill="rgb(223,33,50)" fg:x="41499" fg:w="1715"/><text x="16.4435%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_small (46 samples, 0.02%)</title><rect x="16.8627%" y="645" width="0.0179%" height="15" fill="rgb(219,149,13)" fg:x="43214" fg:w="46"/><text x="17.1127%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (394 samples, 0.15%)</title><rect x="16.8846%" y="645" width="0.1537%" height="15" fill="rgb(250,156,29)" fg:x="43270" fg:w="394"/><text x="17.1346%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (937 samples, 0.37%)</title><rect x="17.0383%" y="645" width="0.3656%" height="15" fill="rgb(216,193,19)" fg:x="43664" fg:w="937"/><text x="17.2883%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (41 samples, 0.02%)</title><rect x="17.3880%" y="629" width="0.0160%" height="15" fill="rgb(216,135,14)" fg:x="44560" fg:w="41"/><text x="17.6380%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`madvise (41 samples, 0.02%)</title><rect x="17.3880%" y="613" width="0.0160%" height="15" fill="rgb(241,47,5)" fg:x="44560" fg:w="41"/><text x="17.6380%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (124 samples, 0.05%)</title><rect x="17.4040%" y="645" width="0.0484%" height="15" fill="rgb(233,42,35)" fg:x="44601" fg:w="124"/><text x="17.6540%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (104 samples, 0.04%)</title><rect x="17.4559%" y="645" width="0.0406%" height="15" fill="rgb(231,13,6)" fg:x="44734" fg:w="104"/><text x="17.7059%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (109 samples, 0.04%)</title><rect x="17.6163%" y="629" width="0.0425%" height="15" fill="rgb(207,181,40)" fg:x="45145" fg:w="109"/><text x="17.8663%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,085 samples, 0.42%)</title><rect x="17.9870%" y="613" width="0.4234%" height="15" fill="rgb(254,173,49)" fg:x="46095" fg:w="1085"/><text x="18.2370%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (1,965 samples, 0.77%)</title><rect x="17.6588%" y="629" width="0.7668%" height="15" fill="rgb(221,1,38)" fg:x="45254" fg:w="1965"/><text x="17.9088%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free_small (58 samples, 0.02%)</title><rect x="18.4256%" y="629" width="0.0226%" height="15" fill="rgb(206,124,46)" fg:x="47219" fg:w="58"/><text x="18.6756%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (476 samples, 0.19%)</title><rect x="18.4521%" y="629" width="0.1857%" height="15" fill="rgb(249,21,11)" fg:x="47287" fg:w="476"/><text x="18.7021%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1,040 samples, 0.41%)</title><rect x="18.6378%" y="629" width="0.4058%" height="15" fill="rgb(222,201,40)" fg:x="47763" fg:w="1040"/><text x="18.8878%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_madvise_block (44 samples, 0.02%)</title><rect x="19.0265%" y="613" width="0.0172%" height="15" fill="rgb(235,61,29)" fg:x="48759" fg:w="44"/><text x="19.2765%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`madvise (44 samples, 0.02%)</title><rect x="19.0265%" y="597" width="0.0172%" height="15" fill="rgb(219,207,3)" fg:x="48759" fg:w="44"/><text x="19.2765%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (158 samples, 0.06%)</title><rect x="19.0437%" y="629" width="0.0617%" height="15" fill="rgb(222,56,46)" fg:x="48803" fg:w="158"/><text x="19.2937%" y="639.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (90 samples, 0.04%)</title><rect x="19.1108%" y="629" width="0.0351%" height="15" fill="rgb(239,76,54)" fg:x="48975" fg:w="90"/><text x="19.3608%" y="639.50"></text></g><g><title>sudoku-solver`__rdl_alloc (29 samples, 0.01%)</title><rect x="19.1518%" y="629" width="0.0113%" height="15" fill="rgb(231,124,27)" fg:x="49080" fg:w="29"/><text x="19.4018%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (93 samples, 0.04%)</title><rect x="19.2634%" y="613" width="0.0363%" height="15" fill="rgb(249,195,6)" fg:x="49366" fg:w="93"/><text x="19.5134%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1,023 samples, 0.40%)</title><rect x="19.6200%" y="597" width="0.3992%" height="15" fill="rgb(237,174,47)" fg:x="50280" fg:w="1023"/><text x="19.8700%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (1,874 samples, 0.73%)</title><rect x="19.2996%" y="613" width="0.7313%" height="15" fill="rgb(206,201,31)" fg:x="49459" fg:w="1874"/><text x="19.5496%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_small (47 samples, 0.02%)</title><rect x="20.0309%" y="613" width="0.0183%" height="15" fill="rgb(231,57,52)" fg:x="51333" fg:w="47"/><text x="20.2809%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (433 samples, 0.17%)</title><rect x="20.0563%" y="613" width="0.1690%" height="15" fill="rgb(248,177,22)" fg:x="51398" fg:w="433"/><text x="20.3063%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (1,017 samples, 0.40%)</title><rect x="20.2252%" y="613" width="0.3968%" height="15" fill="rgb(215,211,37)" fg:x="51831" fg:w="1017"/><text x="20.4752%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (140 samples, 0.05%)</title><rect x="20.6221%" y="613" width="0.0546%" height="15" fill="rgb(241,128,51)" fg:x="52848" fg:w="140"/><text x="20.8721%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (90 samples, 0.04%)</title><rect x="20.6833%" y="613" width="0.0351%" height="15" fill="rgb(227,165,31)" fg:x="53005" fg:w="90"/><text x="20.9333%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (26 samples, 0.01%)</title><rect x="20.7185%" y="613" width="0.0101%" height="15" fill="rgb(228,167,24)" fg:x="53095" fg:w="26"/><text x="20.9685%" y="623.50"></text></g><g><title>sudoku-solver`__rdl_alloc (29 samples, 0.01%)</title><rect x="20.7286%" y="613" width="0.0113%" height="15" fill="rgb(228,143,12)" fg:x="53121" fg:w="29"/><text x="20.9786%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (89 samples, 0.03%)</title><rect x="20.8289%" y="597" width="0.0347%" height="15" fill="rgb(249,149,8)" fg:x="53378" fg:w="89"/><text x="21.0789%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (928 samples, 0.36%)</title><rect x="21.1442%" y="581" width="0.3621%" height="15" fill="rgb(243,35,44)" fg:x="54186" fg:w="928"/><text x="21.3942%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (1,677 samples, 0.65%)</title><rect x="20.8636%" y="597" width="0.6544%" height="15" fill="rgb(246,89,9)" fg:x="53467" fg:w="1677"/><text x="21.1136%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_small (42 samples, 0.02%)</title><rect x="21.5180%" y="597" width="0.0164%" height="15" fill="rgb(233,213,13)" fg:x="55144" fg:w="42"/><text x="21.7680%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (318 samples, 0.12%)</title><rect x="21.5383%" y="597" width="0.1241%" height="15" fill="rgb(233,141,41)" fg:x="55196" fg:w="318"/><text x="21.7883%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (804 samples, 0.31%)</title><rect x="21.6624%" y="597" width="0.3137%" height="15" fill="rgb(239,167,4)" fg:x="55514" fg:w="804"/><text x="21.9124%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (118 samples, 0.05%)</title><rect x="21.9761%" y="597" width="0.0460%" height="15" fill="rgb(209,217,16)" fg:x="56318" fg:w="118"/><text x="22.2261%" y="607.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (76 samples, 0.03%)</title><rect x="22.0230%" y="597" width="0.0297%" height="15" fill="rgb(219,88,35)" fg:x="56438" fg:w="76"/><text x="22.2730%" y="607.50"></text></g><g><title>sudoku-solver`__rdl_alloc (27 samples, 0.01%)</title><rect x="22.0608%" y="597" width="0.0105%" height="15" fill="rgb(220,193,23)" fg:x="56535" fg:w="27"/><text x="22.3108%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (64 samples, 0.02%)</title><rect x="22.1568%" y="581" width="0.0250%" height="15" fill="rgb(230,90,52)" fg:x="56781" fg:w="64"/><text x="22.4068%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (779 samples, 0.30%)</title><rect x="22.4069%" y="565" width="0.3040%" height="15" fill="rgb(252,106,19)" fg:x="57422" fg:w="779"/><text x="22.6569%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (1,389 samples, 0.54%)</title><rect x="22.1818%" y="581" width="0.5420%" height="15" fill="rgb(206,74,20)" fg:x="56845" fg:w="1389"/><text x="22.4318%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (255 samples, 0.10%)</title><rect x="22.7382%" y="581" width="0.0995%" height="15" fill="rgb(230,138,44)" fg:x="58271" fg:w="255"/><text x="22.9882%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (659 samples, 0.26%)</title><rect x="22.8377%" y="581" width="0.2572%" height="15" fill="rgb(235,182,43)" fg:x="58526" fg:w="659"/><text x="23.0877%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (99 samples, 0.04%)</title><rect x="23.0949%" y="581" width="0.0386%" height="15" fill="rgb(242,16,51)" fg:x="59185" fg:w="99"/><text x="23.3449%" y="591.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (41 samples, 0.02%)</title><rect x="23.1366%" y="581" width="0.0160%" height="15" fill="rgb(248,9,4)" fg:x="59292" fg:w="41"/><text x="23.3866%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (28 samples, 0.01%)</title><rect x="23.2092%" y="565" width="0.0109%" height="15" fill="rgb(210,31,22)" fg:x="59478" fg:w="28"/><text x="23.4592%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (493 samples, 0.19%)</title><rect x="23.3470%" y="549" width="0.1924%" height="15" fill="rgb(239,54,39)" fg:x="59831" fg:w="493"/><text x="23.5970%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (837 samples, 0.33%)</title><rect x="23.2201%" y="565" width="0.3266%" height="15" fill="rgb(230,99,41)" fg:x="59506" fg:w="837"/><text x="23.4701%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (161 samples, 0.06%)</title><rect x="23.5561%" y="565" width="0.0628%" height="15" fill="rgb(253,106,12)" fg:x="60367" fg:w="161"/><text x="23.8061%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (403 samples, 0.16%)</title><rect x="23.6189%" y="565" width="0.1573%" height="15" fill="rgb(213,46,41)" fg:x="60528" fg:w="403"/><text x="23.8689%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (65 samples, 0.03%)</title><rect x="23.7762%" y="565" width="0.0254%" height="15" fill="rgb(215,133,35)" fg:x="60931" fg:w="65"/><text x="24.0262%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$free (26 samples, 0.01%)</title><rect x="23.8027%" y="565" width="0.0101%" height="15" fill="rgb(213,28,5)" fg:x="60999" fg:w="26"/><text x="24.0527%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (218 samples, 0.09%)</title><rect x="23.9100%" y="533" width="0.0851%" height="15" fill="rgb(215,77,49)" fg:x="61274" fg:w="218"/><text x="24.1600%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (386 samples, 0.15%)</title><rect x="23.8464%" y="549" width="0.1506%" height="15" fill="rgb(248,100,22)" fg:x="61111" fg:w="386"/><text x="24.0964%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (77 samples, 0.03%)</title><rect x="24.0037%" y="549" width="0.0300%" height="15" fill="rgb(208,67,9)" fg:x="61514" fg:w="77"/><text x="24.2537%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (191 samples, 0.07%)</title><rect x="24.0337%" y="549" width="0.0745%" height="15" fill="rgb(219,133,21)" fg:x="61591" fg:w="191"/><text x="24.2837%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (29 samples, 0.01%)</title><rect x="24.1083%" y="549" width="0.0113%" height="15" fill="rgb(246,46,29)" fg:x="61782" fg:w="29"/><text x="24.3583%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (229 samples, 0.09%)</title><rect x="24.2203%" y="517" width="0.0894%" height="15" fill="rgb(246,185,52)" fg:x="62069" fg:w="229"/><text x="24.4703%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (403 samples, 0.16%)</title><rect x="24.1555%" y="533" width="0.1573%" height="15" fill="rgb(252,136,11)" fg:x="61903" fg:w="403"/><text x="24.4055%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (63 samples, 0.02%)</title><rect x="24.3182%" y="533" width="0.0246%" height="15" fill="rgb(219,138,53)" fg:x="62320" fg:w="63"/><text x="24.5682%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (180 samples, 0.07%)</title><rect x="24.3428%" y="533" width="0.0702%" height="15" fill="rgb(211,51,23)" fg:x="62383" fg:w="180"/><text x="24.5928%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (184 samples, 0.07%)</title><rect x="24.5024%" y="501" width="0.0718%" height="15" fill="rgb(247,221,28)" fg:x="62792" fg:w="184"/><text x="24.7524%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (316 samples, 0.12%)</title><rect x="24.4540%" y="517" width="0.1233%" height="15" fill="rgb(251,222,45)" fg:x="62668" fg:w="316"/><text x="24.7040%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (55 samples, 0.02%)</title><rect x="24.5812%" y="517" width="0.0215%" height="15" fill="rgb(217,162,53)" fg:x="62994" fg:w="55"/><text x="24.8312%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (168 samples, 0.07%)</title><rect x="24.6027%" y="517" width="0.0656%" height="15" fill="rgb(229,93,14)" fg:x="63049" fg:w="168"/><text x="24.8527%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (27 samples, 0.01%)</title><rect x="24.6682%" y="517" width="0.0105%" height="15" fill="rgb(209,67,49)" fg:x="63217" fg:w="27"/><text x="24.9182%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (151 samples, 0.06%)</title><rect x="24.7498%" y="485" width="0.0589%" height="15" fill="rgb(213,87,29)" fg:x="63426" fg:w="151"/><text x="24.9998%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (267 samples, 0.10%)</title><rect x="24.7061%" y="501" width="0.1042%" height="15" fill="rgb(205,151,52)" fg:x="63314" fg:w="267"/><text x="24.9561%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (49 samples, 0.02%)</title><rect x="24.8142%" y="501" width="0.0191%" height="15" fill="rgb(253,215,39)" fg:x="63591" fg:w="49"/><text x="25.0642%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (139 samples, 0.05%)</title><rect x="24.8333%" y="501" width="0.0542%" height="15" fill="rgb(221,220,41)" fg:x="63640" fg:w="139"/><text x="25.0833%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (152 samples, 0.06%)</title><rect x="24.9593%" y="469" width="0.0593%" height="15" fill="rgb(218,133,21)" fg:x="63963" fg:w="152"/><text x="25.2093%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (272 samples, 0.11%)</title><rect x="24.9129%" y="485" width="0.1061%" height="15" fill="rgb(221,193,43)" fg:x="63844" fg:w="272"/><text x="25.1629%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (61 samples, 0.02%)</title><rect x="25.0237%" y="485" width="0.0238%" height="15" fill="rgb(240,128,52)" fg:x="64128" fg:w="61"/><text x="25.2737%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (119 samples, 0.05%)</title><rect x="25.0475%" y="485" width="0.0464%" height="15" fill="rgb(253,114,12)" fg:x="64189" fg:w="119"/><text x="25.2975%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (112 samples, 0.04%)</title><rect x="25.1599%" y="453" width="0.0437%" height="15" fill="rgb(215,223,47)" fg:x="64477" fg:w="112"/><text x="25.4099%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (201 samples, 0.08%)</title><rect x="25.1259%" y="469" width="0.0784%" height="15" fill="rgb(248,225,23)" fg:x="64390" fg:w="201"/><text x="25.3759%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (53 samples, 0.02%)</title><rect x="25.2083%" y="469" width="0.0207%" height="15" fill="rgb(250,108,0)" fg:x="64601" fg:w="53"/><text x="25.4583%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (101 samples, 0.04%)</title><rect x="25.2290%" y="469" width="0.0394%" height="15" fill="rgb(228,208,7)" fg:x="64654" fg:w="101"/><text x="25.4790%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (140 samples, 0.05%)</title><rect x="25.2867%" y="453" width="0.0546%" height="15" fill="rgb(244,45,10)" fg:x="64802" fg:w="140"/><text x="25.5367%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (82 samples, 0.03%)</title><rect x="25.3093%" y="437" width="0.0320%" height="15" fill="rgb(207,125,25)" fg:x="64860" fg:w="82"/><text x="25.5593%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (44 samples, 0.02%)</title><rect x="25.3445%" y="453" width="0.0172%" height="15" fill="rgb(210,195,18)" fg:x="64950" fg:w="44"/><text x="25.5945%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (66 samples, 0.03%)</title><rect x="25.3616%" y="453" width="0.0258%" height="15" fill="rgb(249,80,12)" fg:x="64994" fg:w="66"/><text x="25.6116%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (83 samples, 0.03%)</title><rect x="25.4213%" y="421" width="0.0324%" height="15" fill="rgb(221,65,9)" fg:x="65147" fg:w="83"/><text x="25.6713%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (133 samples, 0.05%)</title><rect x="25.4030%" y="437" width="0.0519%" height="15" fill="rgb(235,49,36)" fg:x="65100" fg:w="133"/><text x="25.6530%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (32 samples, 0.01%)</title><rect x="25.4557%" y="437" width="0.0125%" height="15" fill="rgb(225,32,20)" fg:x="65235" fg:w="32"/><text x="25.7057%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (58 samples, 0.02%)</title><rect x="25.4682%" y="437" width="0.0226%" height="15" fill="rgb(215,141,46)" fg:x="65267" fg:w="58"/><text x="25.7182%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (74 samples, 0.03%)</title><rect x="25.5283%" y="405" width="0.0289%" height="15" fill="rgb(250,160,47)" fg:x="65421" fg:w="74"/><text x="25.7783%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (123 samples, 0.05%)</title><rect x="25.5107%" y="421" width="0.0480%" height="15" fill="rgb(216,222,40)" fg:x="65376" fg:w="123"/><text x="25.7607%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (71 samples, 0.03%)</title><rect x="25.5692%" y="421" width="0.0277%" height="15" fill="rgb(234,217,39)" fg:x="65526" fg:w="71"/><text x="25.8192%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (93 samples, 0.04%)</title><rect x="25.6063%" y="405" width="0.0363%" height="15" fill="rgb(207,178,40)" fg:x="65621" fg:w="93"/><text x="25.8563%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (68 samples, 0.03%)</title><rect x="25.6161%" y="389" width="0.0265%" height="15" fill="rgb(221,136,13)" fg:x="65646" fg:w="68"/><text x="25.8661%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (28 samples, 0.01%)</title><rect x="25.6438%" y="405" width="0.0109%" height="15" fill="rgb(249,199,10)" fg:x="65717" fg:w="28"/><text x="25.8938%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (63 samples, 0.02%)</title><rect x="25.6547%" y="405" width="0.0246%" height="15" fill="rgb(249,222,13)" fg:x="65745" fg:w="63"/><text x="25.9047%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (87 samples, 0.03%)</title><rect x="25.7218%" y="373" width="0.0339%" height="15" fill="rgb(244,185,38)" fg:x="65917" fg:w="87"/><text x="25.9718%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (150 samples, 0.06%)</title><rect x="25.6980%" y="389" width="0.0585%" height="15" fill="rgb(236,202,9)" fg:x="65856" fg:w="150"/><text x="25.9480%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (29 samples, 0.01%)</title><rect x="25.7581%" y="389" width="0.0113%" height="15" fill="rgb(250,229,37)" fg:x="66010" fg:w="29"/><text x="26.0081%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (69 samples, 0.03%)</title><rect x="25.7694%" y="389" width="0.0269%" height="15" fill="rgb(206,174,23)" fg:x="66039" fg:w="69"/><text x="26.0194%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (127 samples, 0.05%)</title><rect x="25.8447%" y="357" width="0.0496%" height="15" fill="rgb(211,33,43)" fg:x="66232" fg:w="127"/><text x="26.0947%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (208 samples, 0.08%)</title><rect x="25.8143%" y="373" width="0.0812%" height="15" fill="rgb(245,58,50)" fg:x="66154" fg:w="208"/><text x="26.0643%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (45 samples, 0.02%)</title><rect x="25.8978%" y="373" width="0.0176%" height="15" fill="rgb(244,68,36)" fg:x="66368" fg:w="45"/><text x="26.1478%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (109 samples, 0.04%)</title><rect x="25.9153%" y="373" width="0.0425%" height="15" fill="rgb(232,229,15)" fg:x="66413" fg:w="109"/><text x="26.1653%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (137 samples, 0.05%)</title><rect x="26.0305%" y="341" width="0.0535%" height="15" fill="rgb(254,30,23)" fg:x="66708" fg:w="137"/><text x="26.2805%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (249 samples, 0.10%)</title><rect x="25.9883%" y="357" width="0.0972%" height="15" fill="rgb(235,160,14)" fg:x="66600" fg:w="249"/><text x="26.2383%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (49 samples, 0.02%)</title><rect x="26.0894%" y="357" width="0.0191%" height="15" fill="rgb(212,155,44)" fg:x="66859" fg:w="49"/><text x="26.3394%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (132 samples, 0.05%)</title><rect x="26.1085%" y="357" width="0.0515%" height="15" fill="rgb(226,2,50)" fg:x="66908" fg:w="132"/><text x="26.3585%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (137 samples, 0.05%)</title><rect x="26.2396%" y="325" width="0.0535%" height="15" fill="rgb(234,177,6)" fg:x="67244" fg:w="137"/><text x="26.4896%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (267 samples, 0.10%)</title><rect x="26.1897%" y="341" width="0.1042%" height="15" fill="rgb(217,24,9)" fg:x="67116" fg:w="267"/><text x="26.4397%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (56 samples, 0.02%)</title><rect x="26.2981%" y="341" width="0.0219%" height="15" fill="rgb(220,13,46)" fg:x="67394" fg:w="56"/><text x="26.5481%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (146 samples, 0.06%)</title><rect x="26.3200%" y="341" width="0.0570%" height="15" fill="rgb(239,221,27)" fg:x="67450" fg:w="146"/><text x="26.5700%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (144 samples, 0.06%)</title><rect x="26.4628%" y="309" width="0.0562%" height="15" fill="rgb(222,198,25)" fg:x="67816" fg:w="144"/><text x="26.7128%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (277 samples, 0.11%)</title><rect x="26.4125%" y="325" width="0.1081%" height="15" fill="rgb(211,99,13)" fg:x="67687" fg:w="277"/><text x="26.6625%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (61 samples, 0.02%)</title><rect x="26.5241%" y="325" width="0.0238%" height="15" fill="rgb(232,111,31)" fg:x="67973" fg:w="61"/><text x="26.7741%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (130 samples, 0.05%)</title><rect x="26.5479%" y="325" width="0.0507%" height="15" fill="rgb(245,82,37)" fg:x="68034" fg:w="130"/><text x="26.7979%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (29 samples, 0.01%)</title><rect x="26.5986%" y="325" width="0.0113%" height="15" fill="rgb(227,149,46)" fg:x="68164" fg:w="29"/><text x="26.8486%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (110 samples, 0.04%)</title><rect x="26.6685%" y="293" width="0.0429%" height="15" fill="rgb(218,36,50)" fg:x="68343" fg:w="110"/><text x="26.9185%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (217 samples, 0.08%)</title><rect x="26.6279%" y="309" width="0.0847%" height="15" fill="rgb(226,80,48)" fg:x="68239" fg:w="217"/><text x="26.8779%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (43 samples, 0.02%)</title><rect x="26.7161%" y="309" width="0.0168%" height="15" fill="rgb(238,224,15)" fg:x="68465" fg:w="43"/><text x="26.9661%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (127 samples, 0.05%)</title><rect x="26.7328%" y="309" width="0.0496%" height="15" fill="rgb(241,136,10)" fg:x="68508" fg:w="127"/><text x="26.9828%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (78 samples, 0.03%)</title><rect x="26.8242%" y="277" width="0.0304%" height="15" fill="rgb(208,32,45)" fg:x="68742" fg:w="78"/><text x="27.0742%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (138 samples, 0.05%)</title><rect x="26.8011%" y="293" width="0.0538%" height="15" fill="rgb(207,135,9)" fg:x="68683" fg:w="138"/><text x="27.0511%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (28 samples, 0.01%)</title><rect x="26.8558%" y="293" width="0.0109%" height="15" fill="rgb(206,86,44)" fg:x="68823" fg:w="28"/><text x="27.1058%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (83 samples, 0.03%)</title><rect x="26.8667%" y="293" width="0.0324%" height="15" fill="rgb(245,177,15)" fg:x="68851" fg:w="83"/><text x="27.1167%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (51 samples, 0.02%)</title><rect x="26.9244%" y="261" width="0.0199%" height="15" fill="rgb(206,64,50)" fg:x="68999" fg:w="51"/><text x="27.1744%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (79 samples, 0.03%)</title><rect x="26.9139%" y="277" width="0.0308%" height="15" fill="rgb(234,36,40)" fg:x="68972" fg:w="79"/><text x="27.1639%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (38 samples, 0.01%)</title><rect x="26.9510%" y="277" width="0.0148%" height="15" fill="rgb(213,64,8)" fg:x="69067" fg:w="38"/><text x="27.2010%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.01%)</title><rect x="26.9740%" y="261" width="0.0144%" height="15" fill="rgb(210,75,36)" fg:x="69126" fg:w="37"/><text x="27.2240%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.01%)</title><rect x="26.9912%" y="261" width="0.0109%" height="15" fill="rgb(229,88,21)" fg:x="69170" fg:w="28"/><text x="27.2412%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.01%)</title><rect x="27.0122%" y="229" width="0.0105%" height="15" fill="rgb(252,204,47)" fg:x="69224" fg:w="27"/><text x="27.2622%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.02%)</title><rect x="27.0076%" y="245" width="0.0156%" height="15" fill="rgb(208,77,27)" fg:x="69212" fg:w="40"/><text x="27.2576%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (28 samples, 0.01%)</title><rect x="27.0286%" y="245" width="0.0109%" height="15" fill="rgb(221,76,26)" fg:x="69266" fg:w="28"/><text x="27.2786%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (37 samples, 0.01%)</title><rect x="27.0524%" y="213" width="0.0144%" height="15" fill="rgb(225,139,18)" fg:x="69327" fg:w="37"/><text x="27.3024%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (59 samples, 0.02%)</title><rect x="27.0450%" y="229" width="0.0230%" height="15" fill="rgb(230,137,11)" fg:x="69308" fg:w="59"/><text x="27.2950%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.02%)</title><rect x="27.0872%" y="213" width="0.0195%" height="15" fill="rgb(212,28,1)" fg:x="69416" fg:w="50"/><text x="27.3372%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.02%)</title><rect x="27.1277%" y="197" width="0.0156%" height="15" fill="rgb(248,164,17)" fg:x="69520" fg:w="40"/><text x="27.3777%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (31 samples, 0.01%)</title><rect x="27.1469%" y="197" width="0.0121%" height="15" fill="rgb(222,171,42)" fg:x="69569" fg:w="31"/><text x="27.3969%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.02%)</title><rect x="27.1629%" y="181" width="0.0152%" height="15" fill="rgb(243,84,45)" fg:x="69610" fg:w="39"/><text x="27.4129%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (27 samples, 0.01%)</title><rect x="27.2312%" y="37" width="0.0105%" height="15" fill="rgb(252,49,23)" fg:x="69785" fg:w="27"/><text x="27.4812%" y="47.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (35 samples, 0.01%)</title><rect x="27.2300%" y="53" width="0.0137%" height="15" fill="rgb(215,19,7)" fg:x="69782" fg:w="35"/><text x="27.4800%" y="63.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (40 samples, 0.02%)</title><rect x="27.2292%" y="69" width="0.0156%" height="15" fill="rgb(238,81,41)" fg:x="69780" fg:w="40"/><text x="27.4792%" y="79.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (49 samples, 0.02%)</title><rect x="27.2288%" y="85" width="0.0191%" height="15" fill="rgb(210,199,37)" fg:x="69779" fg:w="49"/><text x="27.4788%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (56 samples, 0.02%)</title><rect x="27.2272%" y="101" width="0.0219%" height="15" fill="rgb(244,192,49)" fg:x="69775" fg:w="56"/><text x="27.4772%" y="111.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (59 samples, 0.02%)</title><rect x="27.2265%" y="117" width="0.0230%" height="15" fill="rgb(226,211,11)" fg:x="69773" fg:w="59"/><text x="27.4765%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (75 samples, 0.03%)</title><rect x="27.2249%" y="133" width="0.0293%" height="15" fill="rgb(236,162,54)" fg:x="69769" fg:w="75"/><text x="27.4749%" y="143.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (118 samples, 0.05%)</title><rect x="27.2206%" y="149" width="0.0460%" height="15" fill="rgb(220,229,9)" fg:x="69758" fg:w="118"/><text x="27.4706%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (32 samples, 0.01%)</title><rect x="27.2542%" y="133" width="0.0125%" height="15" fill="rgb(250,87,22)" fg:x="69844" fg:w="32"/><text x="27.5042%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.01%)</title><rect x="27.2764%" y="101" width="0.0117%" height="15" fill="rgb(239,43,17)" fg:x="69901" fg:w="30"/><text x="27.5264%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.01%)</title><rect x="27.2764%" y="85" width="0.0117%" height="15" fill="rgb(231,177,25)" fg:x="69901" fg:w="30"/><text x="27.5264%" y="95.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (197 samples, 0.08%)</title><rect x="27.2120%" y="165" width="0.0769%" height="15" fill="rgb(219,179,1)" fg:x="69736" fg:w="197"/><text x="27.4620%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (57 samples, 0.02%)</title><rect x="27.2667%" y="149" width="0.0222%" height="15" fill="rgb(238,219,53)" fg:x="69876" fg:w="57"/><text x="27.5167%" y="159.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (37 samples, 0.01%)</title><rect x="27.2745%" y="133" width="0.0144%" height="15" fill="rgb(232,167,36)" fg:x="69896" fg:w="37"/><text x="27.5245%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (34 samples, 0.01%)</title><rect x="27.2756%" y="117" width="0.0133%" height="15" fill="rgb(244,19,51)" fg:x="69899" fg:w="34"/><text x="27.5256%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (43 samples, 0.02%)</title><rect x="27.3131%" y="101" width="0.0168%" height="15" fill="rgb(224,6,22)" fg:x="69995" fg:w="43"/><text x="27.5631%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (54 samples, 0.02%)</title><rect x="27.3100%" y="133" width="0.0211%" height="15" fill="rgb(224,145,5)" fg:x="69987" fg:w="54"/><text x="27.5600%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.02%)</title><rect x="27.3123%" y="117" width="0.0187%" height="15" fill="rgb(234,130,49)" fg:x="69993" fg:w="48"/><text x="27.5623%" y="127.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (357 samples, 0.14%)</title><rect x="27.1921%" y="181" width="0.1393%" height="15" fill="rgb(254,6,2)" fg:x="69685" fg:w="357"/><text x="27.4421%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (109 samples, 0.04%)</title><rect x="27.2889%" y="165" width="0.0425%" height="15" fill="rgb(208,96,46)" fg:x="69933" fg:w="109"/><text x="27.5389%" y="175.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (58 samples, 0.02%)</title><rect x="27.3088%" y="149" width="0.0226%" height="15" fill="rgb(239,3,39)" fg:x="69984" fg:w="58"/><text x="27.5588%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.01%)</title><rect x="27.3829%" y="101" width="0.0129%" height="15" fill="rgb(233,210,1)" fg:x="70174" fg:w="33"/><text x="27.6329%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (62 samples, 0.02%)</title><rect x="27.3744%" y="117" width="0.0242%" height="15" fill="rgb(244,137,37)" fg:x="70152" fg:w="62"/><text x="27.6244%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (63 samples, 0.02%)</title><rect x="27.3744%" y="133" width="0.0246%" height="15" fill="rgb(240,136,2)" fg:x="70152" fg:w="63"/><text x="27.6244%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.03%)</title><rect x="27.3669%" y="149" width="0.0328%" height="15" fill="rgb(239,18,37)" fg:x="70133" fg:w="84"/><text x="27.6169%" y="159.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (614 samples, 0.24%)</title><rect x="27.1609%" y="197" width="0.2396%" height="15" fill="rgb(218,185,22)" fg:x="69605" fg:w="614"/><text x="27.4109%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (174 samples, 0.07%)</title><rect x="27.3326%" y="181" width="0.0679%" height="15" fill="rgb(225,218,4)" fg:x="70045" fg:w="174"/><text x="27.5826%" y="191.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (90 samples, 0.04%)</title><rect x="27.3654%" y="165" width="0.0351%" height="15" fill="rgb(230,182,32)" fg:x="70129" fg:w="90"/><text x="27.6154%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (35 samples, 0.01%)</title><rect x="27.4684%" y="117" width="0.0137%" height="15" fill="rgb(242,56,43)" fg:x="70393" fg:w="35"/><text x="27.7184%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (59 samples, 0.02%)</title><rect x="27.4618%" y="133" width="0.0230%" height="15" fill="rgb(233,99,24)" fg:x="70376" fg:w="59"/><text x="27.7118%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.03%)</title><rect x="27.4598%" y="149" width="0.0258%" height="15" fill="rgb(234,209,42)" fg:x="70371" fg:w="66"/><text x="27.7098%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (85 samples, 0.03%)</title><rect x="27.4528%" y="165" width="0.0332%" height="15" fill="rgb(227,7,12)" fg:x="70353" fg:w="85"/><text x="27.7028%" y="175.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (933 samples, 0.36%)</title><rect x="27.1238%" y="213" width="0.3641%" height="15" fill="rgb(245,203,43)" fg:x="69510" fg:w="933"/><text x="27.3738%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (224 samples, 0.09%)</title><rect x="27.4005%" y="197" width="0.0874%" height="15" fill="rgb(238,205,33)" fg:x="70219" fg:w="224"/><text x="27.6505%" y="207.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (96 samples, 0.04%)</title><rect x="27.4505%" y="181" width="0.0375%" height="15" fill="rgb(231,56,7)" fg:x="70347" fg:w="96"/><text x="27.7005%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (48 samples, 0.02%)</title><rect x="27.5546%" y="133" width="0.0187%" height="15" fill="rgb(244,186,29)" fg:x="70614" fg:w="48"/><text x="27.8046%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (77 samples, 0.03%)</title><rect x="27.5464%" y="149" width="0.0300%" height="15" fill="rgb(234,111,31)" fg:x="70593" fg:w="77"/><text x="27.7964%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (85 samples, 0.03%)</title><rect x="27.5441%" y="165" width="0.0332%" height="15" fill="rgb(241,149,10)" fg:x="70587" fg:w="85"/><text x="27.7941%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (106 samples, 0.04%)</title><rect x="27.5375%" y="181" width="0.0414%" height="15" fill="rgb(249,206,44)" fg:x="70570" fg:w="106"/><text x="27.7875%" y="191.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,270 samples, 0.50%)</title><rect x="27.0837%" y="229" width="0.4956%" height="15" fill="rgb(251,153,30)" fg:x="69407" fg:w="1270"/><text x="27.3337%" y="239.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (232 samples, 0.09%)</title><rect x="27.4887%" y="213" width="0.0905%" height="15" fill="rgb(239,152,38)" fg:x="70445" fg:w="232"/><text x="27.7387%" y="223.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (112 samples, 0.04%)</title><rect x="27.5355%" y="197" width="0.0437%" height="15" fill="rgb(249,139,47)" fg:x="70565" fg:w="112"/><text x="27.7855%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (32 samples, 0.01%)</title><rect x="27.6436%" y="149" width="0.0125%" height="15" fill="rgb(244,64,35)" fg:x="70842" fg:w="32"/><text x="27.8936%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (61 samples, 0.02%)</title><rect x="27.6385%" y="165" width="0.0238%" height="15" fill="rgb(216,46,15)" fg:x="70829" fg:w="61"/><text x="27.8885%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (68 samples, 0.03%)</title><rect x="27.6362%" y="181" width="0.0265%" height="15" fill="rgb(250,74,19)" fg:x="70823" fg:w="68"/><text x="27.8862%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (84 samples, 0.03%)</title><rect x="27.6303%" y="197" width="0.0328%" height="15" fill="rgb(249,42,33)" fg:x="70808" fg:w="84"/><text x="27.8803%" y="207.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,598 samples, 0.62%)</title><rect x="27.0415%" y="245" width="0.6236%" height="15" fill="rgb(242,149,17)" fg:x="69299" fg:w="1598"/><text x="27.2915%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (216 samples, 0.08%)</title><rect x="27.5808%" y="229" width="0.0843%" height="15" fill="rgb(244,29,21)" fg:x="70681" fg:w="216"/><text x="27.8308%" y="239.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (93 samples, 0.04%)</title><rect x="27.6288%" y="213" width="0.0363%" height="15" fill="rgb(220,130,37)" fg:x="70804" fg:w="93"/><text x="27.8788%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (31 samples, 0.01%)</title><rect x="27.7135%" y="165" width="0.0121%" height="15" fill="rgb(211,67,2)" fg:x="71021" fg:w="31"/><text x="27.9635%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.02%)</title><rect x="27.7068%" y="181" width="0.0203%" height="15" fill="rgb(235,68,52)" fg:x="71004" fg:w="52"/><text x="27.9568%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (56 samples, 0.02%)</title><rect x="27.7060%" y="197" width="0.0219%" height="15" fill="rgb(246,142,3)" fg:x="71002" fg:w="56"/><text x="27.9560%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (75 samples, 0.03%)</title><rect x="27.6990%" y="213" width="0.0293%" height="15" fill="rgb(241,25,7)" fg:x="70984" fg:w="75"/><text x="27.9490%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (1,861 samples, 0.73%)</title><rect x="27.0040%" y="261" width="0.7262%" height="15" fill="rgb(242,119,39)" fg:x="69203" fg:w="1861"/><text x="27.2540%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (165 samples, 0.06%)</title><rect x="27.6659%" y="245" width="0.0644%" height="15" fill="rgb(241,98,45)" fg:x="70899" fg:w="165"/><text x="27.9159%" y="255.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (84 samples, 0.03%)</title><rect x="27.6975%" y="229" width="0.0328%" height="15" fill="rgb(254,28,30)" fg:x="70980" fg:w="84"/><text x="27.9475%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.01%)</title><rect x="27.7696%" y="181" width="0.0109%" height="15" fill="rgb(241,142,54)" fg:x="71165" fg:w="28"/><text x="28.0196%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (57 samples, 0.02%)</title><rect x="27.7622%" y="197" width="0.0222%" height="15" fill="rgb(222,85,15)" fg:x="71146" fg:w="57"/><text x="28.0122%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (60 samples, 0.02%)</title><rect x="27.7615%" y="213" width="0.0234%" height="15" fill="rgb(210,85,47)" fg:x="71144" fg:w="60"/><text x="28.0115%" y="223.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,087 samples, 0.81%)</title><rect x="26.9709%" y="277" width="0.8144%" height="15" fill="rgb(224,206,25)" fg:x="69118" fg:w="2087"/><text x="27.2209%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (141 samples, 0.06%)</title><rect x="27.7302%" y="261" width="0.0550%" height="15" fill="rgb(243,201,19)" fg:x="71064" fg:w="141"/><text x="27.9802%" y="271.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (72 samples, 0.03%)</title><rect x="27.7572%" y="245" width="0.0281%" height="15" fill="rgb(236,59,4)" fg:x="71133" fg:w="72"/><text x="28.0072%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (69 samples, 0.03%)</title><rect x="27.7583%" y="229" width="0.0269%" height="15" fill="rgb(254,179,45)" fg:x="71136" fg:w="69"/><text x="28.0083%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (72 samples, 0.03%)</title><rect x="27.8992%" y="197" width="0.0281%" height="15" fill="rgb(226,14,10)" fg:x="71497" fg:w="72"/><text x="28.1492%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (125 samples, 0.05%)</title><rect x="27.8891%" y="213" width="0.0488%" height="15" fill="rgb(244,27,41)" fg:x="71471" fg:w="125"/><text x="28.1391%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (27 samples, 0.01%)</title><rect x="27.9273%" y="197" width="0.0105%" height="15" fill="rgb(235,35,32)" fg:x="71569" fg:w="27"/><text x="28.1773%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (140 samples, 0.05%)</title><rect x="27.8867%" y="229" width="0.0546%" height="15" fill="rgb(218,68,31)" fg:x="71465" fg:w="140"/><text x="28.1367%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (172 samples, 0.07%)</title><rect x="27.8754%" y="245" width="0.0671%" height="15" fill="rgb(207,120,37)" fg:x="71436" fg:w="172"/><text x="28.1254%" y="255.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (2,659 samples, 1.04%)</title><rect x="26.9077%" y="293" width="1.0376%" height="15" fill="rgb(227,98,0)" fg:x="68956" fg:w="2659"/><text x="27.1577%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (410 samples, 0.16%)</title><rect x="27.7853%" y="277" width="0.1600%" height="15" fill="rgb(207,7,3)" fg:x="71205" fg:w="410"/><text x="28.0353%" y="287.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (189 samples, 0.07%)</title><rect x="27.8715%" y="261" width="0.0738%" height="15" fill="rgb(206,98,19)" fg:x="71426" fg:w="189"/><text x="28.1215%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.01%)</title><rect x="28.0541%" y="277" width="0.0121%" height="15" fill="rgb(217,5,26)" fg:x="71894" fg:w="31"/><text x="28.3041%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.02%)</title><rect x="28.0752%" y="277" width="0.0191%" height="15" fill="rgb(235,190,38)" fg:x="71948" fg:w="49"/><text x="28.3252%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (121 samples, 0.05%)</title><rect x="28.1571%" y="213" width="0.0472%" height="15" fill="rgb(247,86,24)" fg:x="72158" fg:w="121"/><text x="28.4071%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (216 samples, 0.08%)</title><rect x="28.1368%" y="229" width="0.0843%" height="15" fill="rgb(205,101,16)" fg:x="72106" fg:w="216"/><text x="28.3868%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (43 samples, 0.02%)</title><rect x="28.2043%" y="213" width="0.0168%" height="15" fill="rgb(246,168,33)" fg:x="72279" fg:w="43"/><text x="28.4543%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (239 samples, 0.09%)</title><rect x="28.1294%" y="245" width="0.0933%" height="15" fill="rgb(231,114,1)" fg:x="72087" fg:w="239"/><text x="28.3794%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (299 samples, 0.12%)</title><rect x="28.1087%" y="261" width="0.1167%" height="15" fill="rgb(207,184,53)" fg:x="72034" fg:w="299"/><text x="28.3587%" y="271.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (3,685 samples, 1.44%)</title><rect x="26.7933%" y="309" width="1.4379%" height="15" fill="rgb(224,95,51)" fg:x="68663" fg:w="3685"/><text x="27.0433%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (731 samples, 0.29%)</title><rect x="27.9460%" y="293" width="0.2852%" height="15" fill="rgb(212,188,45)" fg:x="71617" fg:w="731"/><text x="28.1960%" y="303.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (332 samples, 0.13%)</title><rect x="28.1017%" y="277" width="0.1296%" height="15" fill="rgb(223,154,38)" fg:x="72016" fg:w="332"/><text x="28.3517%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.01%)</title><rect x="28.3995%" y="261" width="0.0129%" height="15" fill="rgb(251,22,52)" fg:x="72779" fg:w="33"/><text x="28.6495%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.02%)</title><rect x="28.3913%" y="293" width="0.0219%" height="15" fill="rgb(229,209,22)" fg:x="72758" fg:w="56"/><text x="28.6413%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.01%)</title><rect x="28.3991%" y="277" width="0.0140%" height="15" fill="rgb(234,138,34)" fg:x="72778" fg:w="36"/><text x="28.6491%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.01%)</title><rect x="28.4151%" y="293" width="0.0109%" height="15" fill="rgb(212,95,11)" fg:x="72819" fg:w="28"/><text x="28.6651%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (68 samples, 0.03%)</title><rect x="28.4350%" y="293" width="0.0265%" height="15" fill="rgb(240,179,47)" fg:x="72870" fg:w="68"/><text x="28.6850%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.01%)</title><rect x="28.5138%" y="261" width="0.0105%" height="15" fill="rgb(240,163,11)" fg:x="73072" fg:w="27"/><text x="28.7638%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (193 samples, 0.08%)</title><rect x="28.5801%" y="229" width="0.0753%" height="15" fill="rgb(236,37,12)" fg:x="73242" fg:w="193"/><text x="28.8301%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (350 samples, 0.14%)</title><rect x="28.5349%" y="245" width="0.1366%" height="15" fill="rgb(232,164,16)" fg:x="73126" fg:w="350"/><text x="28.7849%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (41 samples, 0.02%)</title><rect x="28.6554%" y="229" width="0.0160%" height="15" fill="rgb(244,205,15)" fg:x="73435" fg:w="41"/><text x="28.9054%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (388 samples, 0.15%)</title><rect x="28.5243%" y="261" width="0.1514%" height="15" fill="rgb(223,117,47)" fg:x="73099" fg:w="388"/><text x="28.7743%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (506 samples, 0.20%)</title><rect x="28.4822%" y="277" width="0.1974%" height="15" fill="rgb(244,107,35)" fg:x="72991" fg:w="506"/><text x="28.7322%" y="287.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (5,305 samples, 2.07%)</title><rect x="26.6162%" y="325" width="2.0701%" height="15" fill="rgb(205,140,8)" fg:x="68209" fg:w="5305"/><text x="26.8662%" y="335.50">s..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,164 samples, 0.45%)</title><rect x="28.2321%" y="309" width="0.4542%" height="15" fill="rgb(228,84,46)" fg:x="72350" fg:w="1164"/><text x="28.4821%" y="319.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (550 samples, 0.21%)</title><rect x="28.4716%" y="293" width="0.2146%" height="15" fill="rgb(254,188,9)" fg:x="72964" fg:w="550"/><text x="28.7216%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.01%)</title><rect x="28.8989%" y="277" width="0.0109%" height="15" fill="rgb(206,112,54)" fg:x="74059" fg:w="28"/><text x="29.1489%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (70 samples, 0.03%)</title><rect x="28.8837%" y="309" width="0.0273%" height="15" fill="rgb(216,84,49)" fg:x="74020" fg:w="70"/><text x="29.1337%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.01%)</title><rect x="28.8978%" y="293" width="0.0133%" height="15" fill="rgb(214,194,35)" fg:x="74056" fg:w="34"/><text x="29.1478%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.01%)</title><rect x="28.9122%" y="309" width="0.0117%" height="15" fill="rgb(249,28,3)" fg:x="74093" fg:w="30"/><text x="29.1622%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (88 samples, 0.03%)</title><rect x="28.9337%" y="309" width="0.0343%" height="15" fill="rgb(222,56,52)" fg:x="74148" fg:w="88"/><text x="29.1837%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (177 samples, 0.07%)</title><rect x="29.0929%" y="245" width="0.0691%" height="15" fill="rgb(245,217,50)" fg:x="74556" fg:w="177"/><text x="29.3429%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (338 samples, 0.13%)</title><rect x="29.0472%" y="261" width="0.1319%" height="15" fill="rgb(213,201,24)" fg:x="74439" fg:w="338"/><text x="29.2972%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (44 samples, 0.02%)</title><rect x="29.1619%" y="245" width="0.0172%" height="15" fill="rgb(248,116,28)" fg:x="74733" fg:w="44"/><text x="29.4119%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (377 samples, 0.15%)</title><rect x="29.0382%" y="277" width="0.1471%" height="15" fill="rgb(219,72,43)" fg:x="74416" fg:w="377"/><text x="29.2882%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (489 samples, 0.19%)</title><rect x="28.9969%" y="293" width="0.1908%" height="15" fill="rgb(209,138,14)" fg:x="74310" fg:w="489"/><text x="29.2469%" y="303.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (7,198 samples, 2.81%)</title><rect x="26.3898%" y="341" width="2.8088%" height="15" fill="rgb(222,18,33)" fg:x="67629" fg:w="7198"/><text x="26.6398%" y="351.50">su..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,304 samples, 0.51%)</title><rect x="28.6898%" y="325" width="0.5088%" height="15" fill="rgb(213,199,7)" fg:x="73523" fg:w="1304"/><text x="28.9398%" y="335.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (550 samples, 0.21%)</title><rect x="28.9840%" y="309" width="0.2146%" height="15" fill="rgb(250,110,10)" fg:x="74277" fg:w="550"/><text x="29.2340%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (34 samples, 0.01%)</title><rect x="29.4121%" y="293" width="0.0133%" height="15" fill="rgb(248,123,6)" fg:x="75374" fg:w="34"/><text x="29.6621%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (71 samples, 0.03%)</title><rect x="29.3988%" y="325" width="0.0277%" height="15" fill="rgb(206,91,31)" fg:x="75340" fg:w="71"/><text x="29.6488%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (39 samples, 0.02%)</title><rect x="29.4113%" y="309" width="0.0152%" height="15" fill="rgb(211,154,13)" fg:x="75372" fg:w="39"/><text x="29.6613%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (32 samples, 0.01%)</title><rect x="29.4277%" y="325" width="0.0125%" height="15" fill="rgb(225,148,7)" fg:x="75414" fg:w="32"/><text x="29.6777%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (84 samples, 0.03%)</title><rect x="29.4515%" y="325" width="0.0328%" height="15" fill="rgb(220,160,43)" fg:x="75475" fg:w="84"/><text x="29.7015%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (167 samples, 0.07%)</title><rect x="29.5853%" y="261" width="0.0652%" height="15" fill="rgb(213,52,39)" fg:x="75818" fg:w="167"/><text x="29.8353%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (294 samples, 0.11%)</title><rect x="29.5494%" y="277" width="0.1147%" height="15" fill="rgb(243,137,7)" fg:x="75726" fg:w="294"/><text x="29.7994%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (35 samples, 0.01%)</title><rect x="29.6505%" y="261" width="0.0137%" height="15" fill="rgb(230,79,13)" fg:x="75985" fg:w="35"/><text x="29.9005%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (328 samples, 0.13%)</title><rect x="29.5408%" y="293" width="0.1280%" height="15" fill="rgb(247,105,23)" fg:x="75704" fg:w="328"/><text x="29.7908%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (417 samples, 0.16%)</title><rect x="29.5096%" y="309" width="0.1627%" height="15" fill="rgb(223,179,41)" fg:x="75624" fg:w="417"/><text x="29.7596%" y="319.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (8,983 samples, 3.51%)</title><rect x="26.1752%" y="357" width="3.5053%" height="15" fill="rgb(218,9,34)" fg:x="67079" fg:w="8983"/><text x="26.4252%" y="367.50">sud..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,216 samples, 0.47%)</title><rect x="29.2060%" y="341" width="0.4745%" height="15" fill="rgb(222,106,8)" fg:x="74846" fg:w="1216"/><text x="29.4560%" y="351.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (461 samples, 0.18%)</title><rect x="29.5006%" y="325" width="0.1799%" height="15" fill="rgb(211,220,0)" fg:x="75601" fg:w="461"/><text x="29.7506%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.01%)</title><rect x="29.8487%" y="309" width="0.0105%" height="15" fill="rgb(229,52,16)" fg:x="76493" fg:w="27"/><text x="30.0987%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (57 samples, 0.02%)</title><rect x="29.8374%" y="341" width="0.0222%" height="15" fill="rgb(212,155,18)" fg:x="76464" fg:w="57"/><text x="30.0874%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.01%)</title><rect x="29.8472%" y="325" width="0.0125%" height="15" fill="rgb(242,21,14)" fg:x="76489" fg:w="32"/><text x="30.0972%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (27 samples, 0.01%)</title><rect x="29.8604%" y="341" width="0.0105%" height="15" fill="rgb(222,19,48)" fg:x="76523" fg:w="27"/><text x="30.1104%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (69 samples, 0.03%)</title><rect x="29.8815%" y="341" width="0.0269%" height="15" fill="rgb(232,45,27)" fg:x="76577" fg:w="69"/><text x="30.1315%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (144 samples, 0.06%)</title><rect x="30.0079%" y="277" width="0.0562%" height="15" fill="rgb(249,103,42)" fg:x="76901" fg:w="144"/><text x="30.2579%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (252 samples, 0.10%)</title><rect x="29.9775%" y="293" width="0.0983%" height="15" fill="rgb(246,81,33)" fg:x="76823" fg:w="252"/><text x="30.2275%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (30 samples, 0.01%)</title><rect x="30.0641%" y="277" width="0.0117%" height="15" fill="rgb(252,33,42)" fg:x="77045" fg:w="30"/><text x="30.3141%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (282 samples, 0.11%)</title><rect x="29.9697%" y="309" width="0.1100%" height="15" fill="rgb(209,212,41)" fg:x="76803" fg:w="282"/><text x="30.2197%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (402 samples, 0.16%)</title><rect x="29.9260%" y="325" width="0.1569%" height="15" fill="rgb(207,154,6)" fg:x="76691" fg:w="402"/><text x="30.1760%" y="335.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (10,561 samples, 4.12%)</title><rect x="25.9669%" y="373" width="4.1211%" height="15" fill="rgb(223,64,47)" fg:x="66545" fg:w="10561"/><text x="26.2169%" y="383.50">sudo..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,021 samples, 0.40%)</title><rect x="29.6895%" y="357" width="0.3984%" height="15" fill="rgb(211,161,38)" fg:x="76085" fg:w="1021"/><text x="29.9395%" y="367.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (436 samples, 0.17%)</title><rect x="29.9178%" y="341" width="0.1701%" height="15" fill="rgb(219,138,40)" fg:x="76670" fg:w="436"/><text x="30.1678%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.01%)</title><rect x="30.2280%" y="325" width="0.0101%" height="15" fill="rgb(241,228,46)" fg:x="77465" fg:w="26"/><text x="30.4780%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.02%)</title><rect x="30.2218%" y="357" width="0.0172%" height="15" fill="rgb(223,209,38)" fg:x="77449" fg:w="44"/><text x="30.4718%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.01%)</title><rect x="30.2276%" y="341" width="0.0113%" height="15" fill="rgb(236,164,45)" fg:x="77464" fg:w="29"/><text x="30.4776%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (61 samples, 0.02%)</title><rect x="30.2514%" y="357" width="0.0238%" height="15" fill="rgb(231,15,5)" fg:x="77525" fg:w="61"/><text x="30.5014%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (103 samples, 0.04%)</title><rect x="30.3513%" y="293" width="0.0402%" height="15" fill="rgb(252,35,15)" fg:x="77781" fg:w="103"/><text x="30.6013%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (194 samples, 0.08%)</title><rect x="30.3244%" y="309" width="0.0757%" height="15" fill="rgb(248,181,18)" fg:x="77712" fg:w="194"/><text x="30.5744%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (224 samples, 0.09%)</title><rect x="30.3178%" y="325" width="0.0874%" height="15" fill="rgb(233,39,42)" fg:x="77695" fg:w="224"/><text x="30.5678%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (293 samples, 0.11%)</title><rect x="30.2939%" y="341" width="0.1143%" height="15" fill="rgb(238,110,33)" fg:x="77634" fg:w="293"/><text x="30.5439%" y="351.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (11,816 samples, 4.61%)</title><rect x="25.8022%" y="389" width="4.6108%" height="15" fill="rgb(233,195,10)" fg:x="66123" fg:w="11816"/><text x="26.0522%" y="399.50">sudok..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (820 samples, 0.32%)</title><rect x="30.0930%" y="373" width="0.3200%" height="15" fill="rgb(254,105,3)" fg:x="77119" fg:w="820"/><text x="30.3430%" y="383.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (325 samples, 0.13%)</title><rect x="30.2861%" y="357" width="0.1268%" height="15" fill="rgb(221,225,9)" fg:x="77614" fg:w="325"/><text x="30.5361%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (32 samples, 0.01%)</title><rect x="30.5203%" y="373" width="0.0125%" height="15" fill="rgb(224,227,45)" fg:x="78214" fg:w="32"/><text x="30.7703%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (82 samples, 0.03%)</title><rect x="30.5811%" y="309" width="0.0320%" height="15" fill="rgb(229,198,43)" fg:x="78370" fg:w="82"/><text x="30.8311%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (157 samples, 0.06%)</title><rect x="30.5609%" y="325" width="0.0613%" height="15" fill="rgb(206,209,35)" fg:x="78318" fg:w="157"/><text x="30.8109%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (176 samples, 0.07%)</title><rect x="30.5570%" y="341" width="0.0687%" height="15" fill="rgb(245,195,53)" fg:x="78308" fg:w="176"/><text x="30.8070%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (215 samples, 0.08%)</title><rect x="30.5429%" y="357" width="0.0839%" height="15" fill="rgb(240,92,26)" fg:x="78272" fg:w="215"/><text x="30.7929%" y="367.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (12,670 samples, 4.94%)</title><rect x="25.6851%" y="405" width="4.9440%" height="15" fill="rgb(207,40,23)" fg:x="65823" fg:w="12670"/><text x="25.9351%" y="415.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (548 samples, 0.21%)</title><rect x="30.4153%" y="389" width="0.2138%" height="15" fill="rgb(223,111,35)" fg:x="77945" fg:w="548"/><text x="30.6653%" y="399.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (237 samples, 0.09%)</title><rect x="30.5367%" y="373" width="0.0925%" height="15" fill="rgb(229,147,28)" fg:x="78256" fg:w="237"/><text x="30.7867%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.01%)</title><rect x="30.7041%" y="389" width="0.0101%" height="15" fill="rgb(211,29,28)" fg:x="78685" fg:w="26"/><text x="30.9541%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (50 samples, 0.02%)</title><rect x="30.7513%" y="325" width="0.0195%" height="15" fill="rgb(228,72,33)" fg:x="78806" fg:w="50"/><text x="31.0013%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (107 samples, 0.04%)</title><rect x="30.7361%" y="341" width="0.0418%" height="15" fill="rgb(205,214,31)" fg:x="78767" fg:w="107"/><text x="30.9861%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (116 samples, 0.05%)</title><rect x="30.7337%" y="357" width="0.0453%" height="15" fill="rgb(224,111,15)" fg:x="78761" fg:w="116"/><text x="30.9837%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (154 samples, 0.06%)</title><rect x="30.7205%" y="373" width="0.0601%" height="15" fill="rgb(253,21,26)" fg:x="78727" fg:w="154"/><text x="30.9705%" y="383.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (13,278 samples, 5.18%)</title><rect x="25.6012%" y="421" width="5.1813%" height="15" fill="rgb(245,139,43)" fg:x="65608" fg:w="13278"/><text x="25.8512%" y="431.50">sudoku..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (387 samples, 0.15%)</title><rect x="30.6315%" y="405" width="0.1510%" height="15" fill="rgb(252,170,7)" fg:x="78499" fg:w="387"/><text x="30.8815%" y="415.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (166 samples, 0.06%)</title><rect x="30.7177%" y="389" width="0.0648%" height="15" fill="rgb(231,118,14)" fg:x="78720" fg:w="166"/><text x="30.9677%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (39 samples, 0.02%)</title><rect x="30.8855%" y="405" width="0.0152%" height="15" fill="rgb(238,83,0)" fg:x="79150" fg:w="39"/><text x="31.1355%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.02%)</title><rect x="30.9136%" y="405" width="0.0176%" height="15" fill="rgb(221,39,39)" fg:x="79222" fg:w="45"/><text x="31.1636%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (106 samples, 0.04%)</title><rect x="30.9952%" y="341" width="0.0414%" height="15" fill="rgb(222,119,46)" fg:x="79431" fg:w="106"/><text x="31.2452%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (188 samples, 0.07%)</title><rect x="30.9772%" y="357" width="0.0734%" height="15" fill="rgb(222,165,49)" fg:x="79385" fg:w="188"/><text x="31.2272%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (36 samples, 0.01%)</title><rect x="31.0365%" y="341" width="0.0140%" height="15" fill="rgb(219,113,52)" fg:x="79537" fg:w="36"/><text x="31.2865%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (218 samples, 0.09%)</title><rect x="30.9679%" y="373" width="0.0851%" height="15" fill="rgb(214,7,15)" fg:x="79361" fg:w="218"/><text x="31.2179%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (286 samples, 0.11%)</title><rect x="30.9440%" y="389" width="0.1116%" height="15" fill="rgb(235,32,4)" fg:x="79300" fg:w="286"/><text x="31.1940%" y="399.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (14,258 samples, 5.56%)</title><rect x="25.4959%" y="437" width="5.5637%" height="15" fill="rgb(238,90,54)" fg:x="65338" fg:w="14258"/><text x="25.7459%" y="447.50">sudoku-..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (708 samples, 0.28%)</title><rect x="30.7833%" y="421" width="0.2763%" height="15" fill="rgb(213,208,19)" fg:x="78888" fg:w="708"/><text x="31.0333%" y="431.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (310 samples, 0.12%)</title><rect x="30.9386%" y="405" width="0.1210%" height="15" fill="rgb(233,156,4)" fg:x="79286" fg:w="310"/><text x="31.1886%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (27 samples, 0.01%)</title><rect x="31.1762%" y="389" width="0.0105%" height="15" fill="rgb(207,194,5)" fg:x="79895" fg:w="27"/><text x="31.4262%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (50 samples, 0.02%)</title><rect x="31.1684%" y="421" width="0.0195%" height="15" fill="rgb(206,111,30)" fg:x="79875" fg:w="50"/><text x="31.4184%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (32 samples, 0.01%)</title><rect x="31.1754%" y="405" width="0.0125%" height="15" fill="rgb(243,70,54)" fg:x="79893" fg:w="32"/><text x="31.4254%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (38 samples, 0.01%)</title><rect x="31.1985%" y="421" width="0.0148%" height="15" fill="rgb(242,28,8)" fg:x="79952" fg:w="38"/><text x="31.4485%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (123 samples, 0.05%)</title><rect x="31.2749%" y="357" width="0.0480%" height="15" fill="rgb(219,106,18)" fg:x="80148" fg:w="123"/><text x="31.5249%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (212 samples, 0.08%)</title><rect x="31.2531%" y="373" width="0.0827%" height="15" fill="rgb(244,222,10)" fg:x="80092" fg:w="212"/><text x="31.5031%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.01%)</title><rect x="31.3229%" y="357" width="0.0129%" height="15" fill="rgb(236,179,52)" fg:x="80271" fg:w="33"/><text x="31.5729%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (232 samples, 0.09%)</title><rect x="31.2480%" y="389" width="0.0905%" height="15" fill="rgb(213,23,39)" fg:x="80079" fg:w="232"/><text x="31.4980%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (288 samples, 0.11%)</title><rect x="31.2266%" y="405" width="0.1124%" height="15" fill="rgb(238,48,10)" fg:x="80024" fg:w="288"/><text x="31.4766%" y="415.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (15,244 samples, 5.95%)</title><rect x="25.3925%" y="453" width="5.9484%" height="15" fill="rgb(251,196,23)" fg:x="65073" fg:w="15244"/><text x="25.6425%" y="463.50">sudoku-s..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (715 samples, 0.28%)</title><rect x="31.0619%" y="437" width="0.2790%" height="15" fill="rgb(250,152,24)" fg:x="79602" fg:w="715"/><text x="31.3119%" y="447.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (308 samples, 0.12%)</title><rect x="31.2207%" y="421" width="0.1202%" height="15" fill="rgb(209,150,17)" fg:x="80009" fg:w="308"/><text x="31.4707%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.02%)</title><rect x="31.4470%" y="437" width="0.0172%" height="15" fill="rgb(234,202,34)" fg:x="80589" fg:w="44"/><text x="31.6970%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.01%)</title><rect x="31.4541%" y="421" width="0.0101%" height="15" fill="rgb(253,148,53)" fg:x="80607" fg:w="26"/><text x="31.7041%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (50 samples, 0.02%)</title><rect x="31.4790%" y="437" width="0.0195%" height="15" fill="rgb(218,129,16)" fg:x="80671" fg:w="50"/><text x="31.7290%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (124 samples, 0.05%)</title><rect x="31.5532%" y="373" width="0.0484%" height="15" fill="rgb(216,85,19)" fg:x="80861" fg:w="124"/><text x="31.8032%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (206 samples, 0.08%)</title><rect x="31.5344%" y="389" width="0.0804%" height="15" fill="rgb(235,228,7)" fg:x="80813" fg:w="206"/><text x="31.7844%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (34 samples, 0.01%)</title><rect x="31.6016%" y="373" width="0.0133%" height="15" fill="rgb(245,175,0)" fg:x="80985" fg:w="34"/><text x="31.8516%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (223 samples, 0.09%)</title><rect x="31.5290%" y="405" width="0.0870%" height="15" fill="rgb(208,168,36)" fg:x="80799" fg:w="223"/><text x="31.7790%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (286 samples, 0.11%)</title><rect x="31.5087%" y="421" width="0.1116%" height="15" fill="rgb(246,171,24)" fg:x="80747" fg:w="286"/><text x="31.7587%" y="431.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (16,267 samples, 6.35%)</title><rect x="25.2777%" y="469" width="6.3476%" height="15" fill="rgb(215,142,24)" fg:x="64779" fg:w="16267"/><text x="25.5277%" y="479.50">sudoku-s..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (722 samples, 0.28%)</title><rect x="31.3436%" y="453" width="0.2817%" height="15" fill="rgb(250,187,7)" fg:x="80324" fg:w="722"/><text x="31.5936%" y="463.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (310 samples, 0.12%)</title><rect x="31.5044%" y="437" width="0.1210%" height="15" fill="rgb(228,66,33)" fg:x="80736" fg:w="310"/><text x="31.7544%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.02%)</title><rect x="31.8170%" y="421" width="0.0156%" height="15" fill="rgb(234,215,21)" fg:x="81537" fg:w="40"/><text x="32.0670%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.03%)</title><rect x="31.8072%" y="453" width="0.0258%" height="15" fill="rgb(222,191,20)" fg:x="81512" fg:w="66"/><text x="32.0572%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="31.8150%" y="437" width="0.0179%" height="15" fill="rgb(245,79,54)" fg:x="81532" fg:w="46"/><text x="32.0650%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.01%)</title><rect x="31.8345%" y="453" width="0.0144%" height="15" fill="rgb(240,10,37)" fg:x="81582" fg:w="37"/><text x="32.0845%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (80 samples, 0.03%)</title><rect x="31.8587%" y="453" width="0.0312%" height="15" fill="rgb(214,192,32)" fg:x="81644" fg:w="80"/><text x="32.1087%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (191 samples, 0.07%)</title><rect x="31.9906%" y="389" width="0.0745%" height="15" fill="rgb(209,36,54)" fg:x="81982" fg:w="191"/><text x="32.2406%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (335 samples, 0.13%)</title><rect x="31.9473%" y="405" width="0.1307%" height="15" fill="rgb(220,10,11)" fg:x="81871" fg:w="335"/><text x="32.1973%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.01%)</title><rect x="32.0651%" y="389" width="0.0129%" height="15" fill="rgb(221,106,17)" fg:x="82173" fg:w="33"/><text x="32.3151%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (358 samples, 0.14%)</title><rect x="31.9422%" y="421" width="0.1397%" height="15" fill="rgb(251,142,44)" fg:x="81858" fg:w="358"/><text x="32.1922%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (445 samples, 0.17%)</title><rect x="31.9110%" y="437" width="0.1736%" height="15" fill="rgb(238,13,15)" fg:x="81778" fg:w="445"/><text x="32.1610%" y="447.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (17,897 samples, 6.98%)</title><rect x="25.1088%" y="485" width="6.9837%" height="15" fill="rgb(208,107,27)" fg:x="64346" fg:w="17897"/><text x="25.3588%" y="495.50">sudoku-so..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,195 samples, 0.47%)</title><rect x="31.6261%" y="469" width="0.4663%" height="15" fill="rgb(205,136,37)" fg:x="81048" fg:w="1195"/><text x="31.8761%" y="479.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (489 samples, 0.19%)</title><rect x="31.9016%" y="453" width="0.1908%" height="15" fill="rgb(250,205,27)" fg:x="81754" fg:w="489"/><text x="32.1516%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.01%)</title><rect x="32.3223%" y="437" width="0.0144%" height="15" fill="rgb(210,80,43)" fg:x="82832" fg:w="37"/><text x="32.5723%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (83 samples, 0.03%)</title><rect x="32.3059%" y="469" width="0.0324%" height="15" fill="rgb(247,160,36)" fg:x="82790" fg:w="83"/><text x="32.5559%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.02%)</title><rect x="32.3196%" y="453" width="0.0187%" height="15" fill="rgb(234,13,49)" fg:x="82825" fg:w="48"/><text x="32.5696%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (31 samples, 0.01%)</title><rect x="32.3395%" y="469" width="0.0121%" height="15" fill="rgb(234,122,0)" fg:x="82876" fg:w="31"/><text x="32.5895%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.02%)</title><rect x="32.3609%" y="469" width="0.0250%" height="15" fill="rgb(207,146,38)" fg:x="82931" fg:w="64"/><text x="32.6109%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (219 samples, 0.09%)</title><rect x="32.4858%" y="405" width="0.0855%" height="15" fill="rgb(207,177,25)" fg:x="83251" fg:w="219"/><text x="32.7358%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (370 samples, 0.14%)</title><rect x="32.4448%" y="421" width="0.1444%" height="15" fill="rgb(211,178,42)" fg:x="83146" fg:w="370"/><text x="32.6948%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (46 samples, 0.02%)</title><rect x="32.5712%" y="405" width="0.0179%" height="15" fill="rgb(230,69,54)" fg:x="83470" fg:w="46"/><text x="32.8212%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (397 samples, 0.15%)</title><rect x="32.4378%" y="437" width="0.1549%" height="15" fill="rgb(214,135,41)" fg:x="83128" fg:w="397"/><text x="32.6878%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (487 samples, 0.19%)</title><rect x="32.4046%" y="453" width="0.1900%" height="15" fill="rgb(237,67,25)" fg:x="83043" fg:w="487"/><text x="32.6546%" y="463.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (19,737 samples, 7.70%)</title><rect x="24.8981%" y="501" width="7.7017%" height="15" fill="rgb(222,189,50)" fg:x="63806" fg:w="19737"/><text x="25.1481%" y="511.50">sudoku-solv..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,294 samples, 0.50%)</title><rect x="32.0948%" y="485" width="0.5049%" height="15" fill="rgb(245,148,34)" fg:x="82249" fg:w="1294"/><text x="32.3448%" y="495.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (524 samples, 0.20%)</title><rect x="32.3953%" y="469" width="0.2045%" height="15" fill="rgb(222,29,6)" fg:x="83019" fg:w="524"/><text x="32.6453%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (71 samples, 0.03%)</title><rect x="32.7960%" y="485" width="0.0277%" height="15" fill="rgb(221,189,43)" fg:x="84046" fg:w="71"/><text x="33.0460%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (36 samples, 0.01%)</title><rect x="32.8097%" y="469" width="0.0140%" height="15" fill="rgb(207,36,27)" fg:x="84081" fg:w="36"/><text x="33.0597%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.01%)</title><rect x="32.8241%" y="485" width="0.0137%" height="15" fill="rgb(217,90,24)" fg:x="84118" fg:w="35"/><text x="33.0741%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (76 samples, 0.03%)</title><rect x="32.8491%" y="485" width="0.0297%" height="15" fill="rgb(224,66,35)" fg:x="84182" fg:w="76"/><text x="33.0991%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (197 samples, 0.08%)</title><rect x="32.9759%" y="421" width="0.0769%" height="15" fill="rgb(221,13,50)" fg:x="84507" fg:w="197"/><text x="33.2259%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (335 samples, 0.13%)</title><rect x="32.9455%" y="437" width="0.1307%" height="15" fill="rgb(236,68,49)" fg:x="84429" fg:w="335"/><text x="33.1955%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (60 samples, 0.02%)</title><rect x="33.0528%" y="421" width="0.0234%" height="15" fill="rgb(229,146,28)" fg:x="84704" fg:w="60"/><text x="33.3028%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (371 samples, 0.14%)</title><rect x="32.9357%" y="453" width="0.1448%" height="15" fill="rgb(225,31,38)" fg:x="84404" fg:w="371"/><text x="33.1857%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (477 samples, 0.19%)</title><rect x="32.8971%" y="469" width="0.1861%" height="15" fill="rgb(250,208,3)" fg:x="84305" fg:w="477"/><text x="33.1471%" y="479.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (21,532 samples, 8.40%)</title><rect x="24.6901%" y="517" width="8.4021%" height="15" fill="rgb(246,54,23)" fg:x="63273" fg:w="21532"/><text x="24.9401%" y="527.50">sudoku-solve..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,252 samples, 0.49%)</title><rect x="32.6036%" y="501" width="0.4885%" height="15" fill="rgb(243,76,11)" fg:x="83553" fg:w="1252"/><text x="32.8536%" y="511.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (524 samples, 0.20%)</title><rect x="32.8877%" y="485" width="0.2045%" height="15" fill="rgb(245,21,50)" fg:x="84281" fg:w="524"/><text x="33.1377%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.01%)</title><rect x="33.4781%" y="453" width="0.0101%" height="15" fill="rgb(228,9,43)" fg:x="85794" fg:w="26"/><text x="33.7281%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (61 samples, 0.02%)</title><rect x="33.4652%" y="469" width="0.0238%" height="15" fill="rgb(208,100,47)" fg:x="85761" fg:w="61"/><text x="33.7152%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (113 samples, 0.04%)</title><rect x="33.4457%" y="501" width="0.0441%" height="15" fill="rgb(232,26,8)" fg:x="85711" fg:w="113"/><text x="33.6957%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (69 samples, 0.03%)</title><rect x="33.4629%" y="485" width="0.0269%" height="15" fill="rgb(216,166,38)" fg:x="85755" fg:w="69"/><text x="33.7129%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (36 samples, 0.01%)</title><rect x="33.5023%" y="485" width="0.0140%" height="15" fill="rgb(251,202,51)" fg:x="85856" fg:w="36"/><text x="33.7523%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (64 samples, 0.02%)</title><rect x="33.4918%" y="501" width="0.0250%" height="15" fill="rgb(254,216,34)" fg:x="85829" fg:w="64"/><text x="33.7418%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (96 samples, 0.04%)</title><rect x="33.5296%" y="501" width="0.0375%" height="15" fill="rgb(251,32,27)" fg:x="85926" fg:w="96"/><text x="33.7796%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (256 samples, 0.10%)</title><rect x="33.7083%" y="437" width="0.0999%" height="15" fill="rgb(208,127,28)" fg:x="86384" fg:w="256"/><text x="33.9583%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (463 samples, 0.18%)</title><rect x="33.6514%" y="453" width="0.1807%" height="15" fill="rgb(224,137,22)" fg:x="86238" fg:w="463"/><text x="33.9014%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (61 samples, 0.02%)</title><rect x="33.8082%" y="437" width="0.0238%" height="15" fill="rgb(254,70,32)" fg:x="86640" fg:w="61"/><text x="34.0582%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (507 samples, 0.20%)</title><rect x="33.6377%" y="469" width="0.1978%" height="15" fill="rgb(229,75,37)" fg:x="86203" fg:w="507"/><text x="33.8877%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (637 samples, 0.25%)</title><rect x="33.5924%" y="485" width="0.2486%" height="15" fill="rgb(252,64,23)" fg:x="86087" fg:w="637"/><text x="33.8424%" y="495.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (24,137 samples, 9.42%)</title><rect x="24.4317%" y="533" width="9.4186%" height="15" fill="rgb(232,162,48)" fg:x="62611" fg:w="24137"/><text x="24.6817%" y="543.50">sudoku-solver..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,932 samples, 0.75%)</title><rect x="33.0965%" y="517" width="0.7539%" height="15" fill="rgb(246,160,12)" fg:x="84816" fg:w="1932"/><text x="33.3465%" y="527.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (689 samples, 0.27%)</title><rect x="33.5815%" y="501" width="0.2689%" height="15" fill="rgb(247,166,0)" fg:x="86059" fg:w="689"/><text x="33.8315%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (77 samples, 0.03%)</title><rect x="34.2137%" y="485" width="0.0300%" height="15" fill="rgb(249,219,21)" fg:x="87679" fg:w="77"/><text x="34.4637%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (34 samples, 0.01%)</title><rect x="34.2304%" y="469" width="0.0133%" height="15" fill="rgb(205,209,3)" fg:x="87722" fg:w="34"/><text x="34.4804%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (127 samples, 0.05%)</title><rect x="34.1965%" y="517" width="0.0496%" height="15" fill="rgb(243,44,1)" fg:x="87635" fg:w="127"/><text x="34.4465%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (92 samples, 0.04%)</title><rect x="34.2101%" y="501" width="0.0359%" height="15" fill="rgb(206,159,16)" fg:x="87670" fg:w="92"/><text x="34.4601%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (29 samples, 0.01%)</title><rect x="34.2613%" y="501" width="0.0113%" height="15" fill="rgb(244,77,30)" fg:x="87801" fg:w="29"/><text x="34.5113%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free (67 samples, 0.03%)</title><rect x="34.2472%" y="517" width="0.0261%" height="15" fill="rgb(218,69,12)" fg:x="87765" fg:w="67"/><text x="34.4972%" y="527.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (98 samples, 0.04%)</title><rect x="34.2898%" y="517" width="0.0382%" height="15" fill="rgb(212,87,7)" fg:x="87874" fg:w="98"/><text x="34.5398%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (308 samples, 0.12%)</title><rect x="34.4849%" y="453" width="0.1202%" height="15" fill="rgb(245,114,25)" fg:x="88374" fg:w="308"/><text x="34.7349%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (545 samples, 0.21%)</title><rect x="34.4220%" y="469" width="0.2127%" height="15" fill="rgb(210,61,42)" fg:x="88213" fg:w="545"/><text x="34.6720%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (76 samples, 0.03%)</title><rect x="34.6050%" y="453" width="0.0297%" height="15" fill="rgb(211,52,33)" fg:x="88682" fg:w="76"/><text x="34.8550%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (583 samples, 0.23%)</title><rect x="34.4134%" y="485" width="0.2275%" height="15" fill="rgb(234,58,33)" fg:x="88191" fg:w="583"/><text x="34.6634%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (737 samples, 0.29%)</title><rect x="34.3592%" y="501" width="0.2876%" height="15" fill="rgb(220,115,36)" fg:x="88052" fg:w="737"/><text x="34.6092%" y="511.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (26,975 samples, 10.53%)</title><rect x="24.1325%" y="549" width="10.5260%" height="15" fill="rgb(243,153,54)" fg:x="61844" fg:w="26975"/><text x="24.3825%" y="559.50">sudoku-solver`s..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,058 samples, 0.80%)</title><rect x="33.8554%" y="533" width="0.8031%" height="15" fill="rgb(251,47,18)" fg:x="86761" fg:w="2058"/><text x="34.1054%" y="543.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (800 samples, 0.31%)</title><rect x="34.3463%" y="517" width="0.3122%" height="15" fill="rgb(242,102,42)" fg:x="88019" fg:w="800"/><text x="34.5963%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (64 samples, 0.02%)</title><rect x="34.9594%" y="501" width="0.0250%" height="15" fill="rgb(234,31,38)" fg:x="89590" fg:w="64"/><text x="35.2094%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.01%)</title><rect x="34.9734%" y="485" width="0.0109%" height="15" fill="rgb(221,117,51)" fg:x="89626" fg:w="28"/><text x="35.2234%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (113 samples, 0.04%)</title><rect x="34.9422%" y="533" width="0.0441%" height="15" fill="rgb(212,20,18)" fg:x="89546" fg:w="113"/><text x="35.1922%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (76 samples, 0.03%)</title><rect x="34.9566%" y="517" width="0.0297%" height="15" fill="rgb(245,133,36)" fg:x="89583" fg:w="76"/><text x="35.2066%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.02%)</title><rect x="34.9882%" y="533" width="0.0199%" height="15" fill="rgb(212,6,19)" fg:x="89664" fg:w="51"/><text x="35.2382%" y="543.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (92 samples, 0.04%)</title><rect x="35.0218%" y="533" width="0.0359%" height="15" fill="rgb(218,1,36)" fg:x="89750" fg:w="92"/><text x="35.2718%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.01%)</title><rect x="35.1275%" y="501" width="0.0117%" height="15" fill="rgb(246,84,54)" fg:x="90021" fg:w="30"/><text x="35.3775%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (291 samples, 0.11%)</title><rect x="35.2087%" y="469" width="0.1136%" height="15" fill="rgb(242,110,6)" fg:x="90229" fg:w="291"/><text x="35.4587%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (510 samples, 0.20%)</title><rect x="35.1537%" y="485" width="0.1990%" height="15" fill="rgb(214,47,5)" fg:x="90088" fg:w="510"/><text x="35.4037%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (78 samples, 0.03%)</title><rect x="35.3223%" y="469" width="0.0304%" height="15" fill="rgb(218,159,25)" fg:x="90520" fg:w="78"/><text x="35.5723%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (565 samples, 0.22%)</title><rect x="35.1392%" y="501" width="0.2205%" height="15" fill="rgb(215,211,28)" fg:x="90051" fg:w="565"/><text x="35.3892%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (703 samples, 0.27%)</title><rect x="35.0924%" y="517" width="0.2743%" height="15" fill="rgb(238,59,32)" fg:x="89931" fg:w="703"/><text x="35.3424%" y="527.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (29,616 samples, 11.56%)</title><rect x="23.8195%" y="565" width="11.5566%" height="15" fill="rgb(226,82,3)" fg:x="61042" fg:w="29616"/><text x="24.0695%" y="575.50">sudoku-solver`sud..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,824 samples, 0.71%)</title><rect x="34.6644%" y="549" width="0.7118%" height="15" fill="rgb(240,164,32)" fg:x="88834" fg:w="1824"/><text x="34.9144%" y="559.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (773 samples, 0.30%)</title><rect x="35.0745%" y="533" width="0.3016%" height="15" fill="rgb(232,46,7)" fg:x="89885" fg:w="773"/><text x="35.3245%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (58 samples, 0.02%)</title><rect x="36.3942%" y="501" width="0.0226%" height="15" fill="rgb(229,129,53)" fg:x="93267" fg:w="58"/><text x="36.6442%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (162 samples, 0.06%)</title><rect x="36.3567%" y="517" width="0.0632%" height="15" fill="rgb(234,188,29)" fg:x="93171" fg:w="162"/><text x="36.6067%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (333 samples, 0.13%)</title><rect x="36.2955%" y="549" width="0.1299%" height="15" fill="rgb(246,141,4)" fg:x="93014" fg:w="333"/><text x="36.5455%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (194 samples, 0.08%)</title><rect x="36.3497%" y="533" width="0.0757%" height="15" fill="rgb(229,23,39)" fg:x="93153" fg:w="194"/><text x="36.5997%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (98 samples, 0.04%)</title><rect x="36.4617%" y="533" width="0.0382%" height="15" fill="rgb(206,12,3)" fg:x="93440" fg:w="98"/><text x="36.7117%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free (172 samples, 0.07%)</title><rect x="36.4332%" y="549" width="0.0671%" height="15" fill="rgb(252,226,20)" fg:x="93367" fg:w="172"/><text x="36.6832%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`malloc (42 samples, 0.02%)</title><rect x="36.5003%" y="549" width="0.0164%" height="15" fill="rgb(216,123,35)" fg:x="93539" fg:w="42"/><text x="36.7503%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (49 samples, 0.02%)</title><rect x="36.5202%" y="549" width="0.0191%" height="15" fill="rgb(212,68,40)" fg:x="93590" fg:w="49"/><text x="36.7702%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (300 samples, 0.12%)</title><rect x="36.5456%" y="549" width="0.1171%" height="15" fill="rgb(254,125,32)" fg:x="93655" fg:w="300"/><text x="36.7956%" y="559.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (29 samples, 0.01%)</title><rect x="36.6626%" y="549" width="0.0113%" height="15" fill="rgb(253,97,22)" fg:x="93955" fg:w="29"/><text x="36.9126%" y="559.50"></text></g><g><title>sudoku-solver`__rdl_alloc (43 samples, 0.02%)</title><rect x="36.6806%" y="549" width="0.0168%" height="15" fill="rgb(241,101,14)" fg:x="94001" fg:w="43"/><text x="36.9306%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (93 samples, 0.04%)</title><rect x="36.8312%" y="517" width="0.0363%" height="15" fill="rgb(238,103,29)" fg:x="94387" fg:w="93"/><text x="37.0812%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (851 samples, 0.33%)</title><rect x="37.0482%" y="485" width="0.3321%" height="15" fill="rgb(233,195,47)" fg:x="94943" fg:w="851"/><text x="37.2982%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,437 samples, 0.56%)</title><rect x="36.9007%" y="501" width="0.5607%" height="15" fill="rgb(246,218,30)" fg:x="94565" fg:w="1437"/><text x="37.1507%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (208 samples, 0.08%)</title><rect x="37.3803%" y="485" width="0.0812%" height="15" fill="rgb(219,145,47)" fg:x="95794" fg:w="208"/><text x="37.6303%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,571 samples, 0.61%)</title><rect x="36.8675%" y="517" width="0.6130%" height="15" fill="rgb(243,12,26)" fg:x="94480" fg:w="1571"/><text x="37.1175%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (49 samples, 0.02%)</title><rect x="37.4614%" y="501" width="0.0191%" height="15" fill="rgb(214,87,16)" fg:x="96002" fg:w="49"/><text x="37.7114%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,960 samples, 0.76%)</title><rect x="36.7341%" y="533" width="0.7648%" height="15" fill="rgb(208,99,42)" fg:x="94138" fg:w="1960"/><text x="36.9841%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.02%)</title><rect x="37.4817%" y="517" width="0.0172%" height="15" fill="rgb(253,99,2)" fg:x="96054" fg:w="44"/><text x="37.7317%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (43 samples, 0.02%)</title><rect x="37.4821%" y="501" width="0.0168%" height="15" fill="rgb(220,168,23)" fg:x="96055" fg:w="43"/><text x="37.7321%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (31 samples, 0.01%)</title><rect x="37.4868%" y="485" width="0.0121%" height="15" fill="rgb(242,38,24)" fg:x="96067" fg:w="31"/><text x="37.7368%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (42 samples, 0.02%)</title><rect x="37.4989%" y="533" width="0.0164%" height="15" fill="rgb(225,182,9)" fg:x="96098" fg:w="42"/><text x="37.7489%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.01%)</title><rect x="37.5153%" y="533" width="0.0109%" height="15" fill="rgb(243,178,37)" fg:x="96140" fg:w="28"/><text x="37.7653%" y="543.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (36,808 samples, 14.36%)</title><rect x="23.1639%" y="581" width="14.3630%" height="15" fill="rgb(232,139,19)" fg:x="59362" fg:w="36808"/><text x="23.4139%" y="591.50">sudoku-solver`sudoku_s..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (5,494 samples, 2.14%)</title><rect x="35.3831%" y="565" width="2.1438%" height="15" fill="rgb(225,201,24)" fg:x="90676" fg:w="5494"/><text x="35.6331%" y="575.50">s..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (2,126 samples, 0.83%)</title><rect x="36.6974%" y="549" width="0.8296%" height="15" fill="rgb(221,47,46)" fg:x="94044" fg:w="2126"/><text x="36.9474%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (43 samples, 0.02%)</title><rect x="37.5270%" y="581" width="0.0168%" height="15" fill="rgb(249,23,13)" fg:x="96170" fg:w="43"/><text x="37.7770%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (109 samples, 0.04%)</title><rect x="39.0902%" y="517" width="0.0425%" height="15" fill="rgb(219,9,5)" fg:x="100176" fg:w="109"/><text x="39.3402%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (290 samples, 0.11%)</title><rect x="39.0274%" y="533" width="0.1132%" height="15" fill="rgb(254,171,16)" fg:x="100015" fg:w="290"/><text x="39.2774%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (551 samples, 0.22%)</title><rect x="38.9329%" y="565" width="0.2150%" height="15" fill="rgb(230,171,20)" fg:x="99773" fg:w="551"/><text x="39.1829%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (336 samples, 0.13%)</title><rect x="39.0168%" y="549" width="0.1311%" height="15" fill="rgb(210,71,41)" fg:x="99988" fg:w="336"/><text x="39.2668%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (171 samples, 0.07%)</title><rect x="39.2049%" y="549" width="0.0667%" height="15" fill="rgb(206,173,20)" fg:x="100470" fg:w="171"/><text x="39.4549%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`free (306 samples, 0.12%)</title><rect x="39.1538%" y="565" width="0.1194%" height="15" fill="rgb(233,88,34)" fg:x="100339" fg:w="306"/><text x="39.4038%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`malloc (54 samples, 0.02%)</title><rect x="39.2732%" y="565" width="0.0211%" height="15" fill="rgb(223,209,46)" fg:x="100645" fg:w="54"/><text x="39.5232%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (72 samples, 0.03%)</title><rect x="39.2989%" y="565" width="0.0281%" height="15" fill="rgb(250,43,18)" fg:x="100711" fg:w="72"/><text x="39.5489%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (27 samples, 0.01%)</title><rect x="39.3302%" y="565" width="0.0105%" height="15" fill="rgb(208,13,10)" fg:x="100791" fg:w="27"/><text x="39.5802%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (480 samples, 0.19%)</title><rect x="39.3407%" y="565" width="0.1873%" height="15" fill="rgb(212,200,36)" fg:x="100818" fg:w="480"/><text x="39.5907%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (61 samples, 0.02%)</title><rect x="39.5280%" y="565" width="0.0238%" height="15" fill="rgb(225,90,30)" fg:x="101298" fg:w="61"/><text x="39.7780%" y="575.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (38 samples, 0.01%)</title><rect x="39.5518%" y="565" width="0.0148%" height="15" fill="rgb(236,182,39)" fg:x="101359" fg:w="38"/><text x="39.8018%" y="575.50"></text></g><g><title>sudoku-solver`__rdl_alloc (76 samples, 0.03%)</title><rect x="39.5666%" y="565" width="0.0297%" height="15" fill="rgb(212,144,35)" fg:x="101397" fg:w="76"/><text x="39.8166%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (99 samples, 0.04%)</title><rect x="39.8027%" y="533" width="0.0386%" height="15" fill="rgb(228,63,44)" fg:x="102002" fg:w="99"/><text x="40.0527%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,153 samples, 0.45%)</title><rect x="40.1227%" y="501" width="0.4499%" height="15" fill="rgb(228,109,6)" fg:x="102822" fg:w="1153"/><text x="40.3727%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,031 samples, 0.79%)</title><rect x="39.8921%" y="517" width="0.7925%" height="15" fill="rgb(238,117,24)" fg:x="102231" fg:w="2031"/><text x="40.1421%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (287 samples, 0.11%)</title><rect x="40.5726%" y="501" width="0.1120%" height="15" fill="rgb(242,26,26)" fg:x="103975" fg:w="287"/><text x="40.8226%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,251 samples, 0.88%)</title><rect x="39.8413%" y="533" width="0.8784%" height="15" fill="rgb(221,92,48)" fg:x="102101" fg:w="2251"/><text x="40.0913%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (90 samples, 0.04%)</title><rect x="40.6846%" y="517" width="0.0351%" height="15" fill="rgb(209,209,32)" fg:x="104262" fg:w="90"/><text x="40.9346%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,787 samples, 1.09%)</title><rect x="39.6533%" y="549" width="1.0875%" height="15" fill="rgb(221,70,22)" fg:x="101619" fg:w="2787"/><text x="39.9033%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.02%)</title><rect x="40.7213%" y="533" width="0.0195%" height="15" fill="rgb(248,145,5)" fg:x="104356" fg:w="50"/><text x="40.9713%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (44 samples, 0.02%)</title><rect x="40.7236%" y="517" width="0.0172%" height="15" fill="rgb(226,116,26)" fg:x="104362" fg:w="44"/><text x="40.9736%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (34 samples, 0.01%)</title><rect x="40.7275%" y="501" width="0.0133%" height="15" fill="rgb(244,5,17)" fg:x="104372" fg:w="34"/><text x="40.9775%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (68 samples, 0.03%)</title><rect x="40.7408%" y="549" width="0.0265%" height="15" fill="rgb(252,159,33)" fg:x="104406" fg:w="68"/><text x="40.9908%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (50 samples, 0.02%)</title><rect x="40.7673%" y="549" width="0.0195%" height="15" fill="rgb(206,71,0)" fg:x="104474" fg:w="50"/><text x="41.0173%" y="559.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (47,959 samples, 18.71%)</title><rect x="22.0733%" y="597" width="18.7143%" height="15" fill="rgb(233,118,54)" fg:x="56567" fg:w="47959"/><text x="22.3233%" y="607.50">sudoku-solver`sudoku_solver::..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (8,313 samples, 3.24%)</title><rect x="37.5438%" y="581" width="3.2439%" height="15" fill="rgb(234,83,48)" fg:x="96213" fg:w="8313"/><text x="37.7938%" y="591.50">sud..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,053 samples, 1.19%)</title><rect x="39.5963%" y="565" width="1.1913%" height="15" fill="rgb(228,3,54)" fg:x="101473" fg:w="3053"/><text x="39.8463%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (86 samples, 0.03%)</title><rect x="40.7876%" y="597" width="0.0336%" height="15" fill="rgb(226,155,13)" fg:x="104526" fg:w="86"/><text x="41.0376%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.01%)</title><rect x="42.5787%" y="565" width="0.0109%" height="15" fill="rgb(241,28,37)" fg:x="109116" fg:w="28"/><text x="42.8287%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (118 samples, 0.05%)</title><rect x="42.6817%" y="533" width="0.0460%" height="15" fill="rgb(233,93,10)" fg:x="109380" fg:w="118"/><text x="42.9317%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (314 samples, 0.12%)</title><rect x="42.6084%" y="549" width="0.1225%" height="15" fill="rgb(225,113,19)" fg:x="109192" fg:w="314"/><text x="42.8584%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (637 samples, 0.25%)</title><rect x="42.4936%" y="581" width="0.2486%" height="15" fill="rgb(241,2,18)" fg:x="108898" fg:w="637"/><text x="42.7436%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (391 samples, 0.15%)</title><rect x="42.5896%" y="565" width="0.1526%" height="15" fill="rgb(228,207,21)" fg:x="109144" fg:w="391"/><text x="42.8396%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.01%)</title><rect x="42.7309%" y="549" width="0.0113%" height="15" fill="rgb(213,211,35)" fg:x="109506" fg:w="29"/><text x="42.9809%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (26 samples, 0.01%)</title><rect x="42.7422%" y="581" width="0.0101%" height="15" fill="rgb(209,83,10)" fg:x="109535" fg:w="26"/><text x="42.9922%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (176 samples, 0.07%)</title><rect x="42.8078%" y="565" width="0.0687%" height="15" fill="rgb(209,164,1)" fg:x="109703" fg:w="176"/><text x="43.0578%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (321 samples, 0.13%)</title><rect x="42.7523%" y="581" width="0.1253%" height="15" fill="rgb(213,184,43)" fg:x="109561" fg:w="321"/><text x="43.0023%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`malloc (73 samples, 0.03%)</title><rect x="42.8776%" y="581" width="0.0285%" height="15" fill="rgb(231,61,34)" fg:x="109882" fg:w="73"/><text x="43.1276%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (89 samples, 0.03%)</title><rect x="42.9127%" y="581" width="0.0347%" height="15" fill="rgb(235,75,3)" fg:x="109972" fg:w="89"/><text x="43.1627%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (36 samples, 0.01%)</title><rect x="42.9529%" y="581" width="0.0140%" height="15" fill="rgb(220,106,47)" fg:x="110075" fg:w="36"/><text x="43.2029%" y="591.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (500 samples, 0.20%)</title><rect x="42.9670%" y="581" width="0.1951%" height="15" fill="rgb(210,196,33)" fg:x="110111" fg:w="500"/><text x="43.2170%" y="591.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (66 samples, 0.03%)</title><rect x="43.1621%" y="581" width="0.0258%" height="15" fill="rgb(229,154,42)" fg:x="110611" fg:w="66"/><text x="43.4121%" y="591.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (38 samples, 0.01%)</title><rect x="43.1878%" y="581" width="0.0148%" height="15" fill="rgb(228,114,26)" fg:x="110677" fg:w="38"/><text x="43.4378%" y="591.50"></text></g><g><title>sudoku-solver`__rdl_alloc (92 samples, 0.04%)</title><rect x="43.2027%" y="581" width="0.0359%" height="15" fill="rgb(208,144,1)" fg:x="110715" fg:w="92"/><text x="43.4527%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (135 samples, 0.05%)</title><rect x="43.5008%" y="549" width="0.0527%" height="15" fill="rgb(239,112,37)" fg:x="111479" fg:w="135"/><text x="43.7508%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,284 samples, 0.50%)</title><rect x="43.8656%" y="517" width="0.5010%" height="15" fill="rgb(210,96,50)" fg:x="112414" fg:w="1284"/><text x="44.1156%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,231 samples, 0.87%)</title><rect x="43.6155%" y="533" width="0.8706%" height="15" fill="rgb(222,178,2)" fg:x="111773" fg:w="2231"/><text x="43.8655%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (306 samples, 0.12%)</title><rect x="44.3667%" y="517" width="0.1194%" height="15" fill="rgb(226,74,18)" fg:x="113698" fg:w="306"/><text x="44.6167%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (78 samples, 0.03%)</title><rect x="44.4861%" y="533" width="0.0304%" height="15" fill="rgb(225,67,54)" fg:x="114004" fg:w="78"/><text x="44.7361%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,469 samples, 0.96%)</title><rect x="43.5535%" y="549" width="0.9634%" height="15" fill="rgb(251,92,32)" fg:x="111614" fg:w="2469"/><text x="43.8035%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,178 samples, 1.24%)</title><rect x="43.3025%" y="565" width="1.2401%" height="15" fill="rgb(228,149,22)" fg:x="110971" fg:w="3178"/><text x="43.5525%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (64 samples, 0.02%)</title><rect x="44.5177%" y="549" width="0.0250%" height="15" fill="rgb(243,54,13)" fg:x="114085" fg:w="64"/><text x="44.7677%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (60 samples, 0.02%)</title><rect x="44.5192%" y="533" width="0.0234%" height="15" fill="rgb(243,180,28)" fg:x="114089" fg:w="60"/><text x="44.7692%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (50 samples, 0.02%)</title><rect x="44.5231%" y="517" width="0.0195%" height="15" fill="rgb(208,167,24)" fg:x="114099" fg:w="50"/><text x="44.7731%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (70 samples, 0.03%)</title><rect x="44.5426%" y="565" width="0.0273%" height="15" fill="rgb(245,73,45)" fg:x="114149" fg:w="70"/><text x="44.7926%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (58 samples, 0.02%)</title><rect x="44.5700%" y="565" width="0.0226%" height="15" fill="rgb(237,203,48)" fg:x="114219" fg:w="58"/><text x="44.8200%" y="575.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (61,125 samples, 23.85%)</title><rect x="20.7415%" y="613" width="23.8519%" height="15" fill="rgb(211,197,16)" fg:x="53154" fg:w="61125"/><text x="20.9915%" y="623.50">sudoku-solver`sudoku_solver::backtraki..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (9,667 samples, 3.77%)</title><rect x="40.8212%" y="597" width="3.7722%" height="15" fill="rgb(243,99,51)" fg:x="104612" fg:w="9667"/><text x="41.0712%" y="607.50">sudo..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,472 samples, 1.35%)</title><rect x="43.2386%" y="581" width="1.3548%" height="15" fill="rgb(215,123,29)" fg:x="110807" fg:w="3472"/><text x="43.4886%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (79 samples, 0.03%)</title><rect x="44.5934%" y="613" width="0.0308%" height="15" fill="rgb(239,186,37)" fg:x="114279" fg:w="79"/><text x="44.8434%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (41 samples, 0.02%)</title><rect x="46.7314%" y="581" width="0.0160%" height="15" fill="rgb(252,136,39)" fg:x="119758" fg:w="41"/><text x="46.9814%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (129 samples, 0.05%)</title><rect x="46.8531%" y="549" width="0.0503%" height="15" fill="rgb(223,213,32)" fg:x="120070" fg:w="129"/><text x="47.1031%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (365 samples, 0.14%)</title><rect x="46.7665%" y="565" width="0.1424%" height="15" fill="rgb(233,115,5)" fg:x="119848" fg:w="365"/><text x="47.0165%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (727 samples, 0.28%)</title><rect x="46.6350%" y="597" width="0.2837%" height="15" fill="rgb(207,226,44)" fg:x="119511" fg:w="727"/><text x="46.8850%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (439 samples, 0.17%)</title><rect x="46.7474%" y="581" width="0.1713%" height="15" fill="rgb(208,126,0)" fg:x="119799" fg:w="439"/><text x="46.9974%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (32 samples, 0.01%)</title><rect x="46.9187%" y="597" width="0.0125%" height="15" fill="rgb(244,66,21)" fg:x="120238" fg:w="32"/><text x="47.1687%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (204 samples, 0.08%)</title><rect x="47.0069%" y="581" width="0.0796%" height="15" fill="rgb(222,97,12)" fg:x="120464" fg:w="204"/><text x="47.2569%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`free (407 samples, 0.16%)</title><rect x="46.9312%" y="597" width="0.1588%" height="15" fill="rgb(219,213,19)" fg:x="120270" fg:w="407"/><text x="47.1812%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`malloc (82 samples, 0.03%)</title><rect x="47.0900%" y="597" width="0.0320%" height="15" fill="rgb(252,169,30)" fg:x="120677" fg:w="82"/><text x="47.3400%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (108 samples, 0.04%)</title><rect x="47.1274%" y="597" width="0.0421%" height="15" fill="rgb(206,32,51)" fg:x="120773" fg:w="108"/><text x="47.3774%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (50 samples, 0.02%)</title><rect x="47.1778%" y="597" width="0.0195%" height="15" fill="rgb(250,172,42)" fg:x="120902" fg:w="50"/><text x="47.4278%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (594 samples, 0.23%)</title><rect x="47.1973%" y="597" width="0.2318%" height="15" fill="rgb(209,34,43)" fg:x="120952" fg:w="594"/><text x="47.4473%" y="607.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (64 samples, 0.02%)</title><rect x="47.4291%" y="597" width="0.0250%" height="15" fill="rgb(223,11,35)" fg:x="121546" fg:w="64"/><text x="47.6791%" y="607.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (41 samples, 0.02%)</title><rect x="47.4540%" y="597" width="0.0160%" height="15" fill="rgb(251,219,26)" fg:x="121610" fg:w="41"/><text x="47.7040%" y="607.50"></text></g><g><title>sudoku-solver`__rdl_alloc (98 samples, 0.04%)</title><rect x="47.4700%" y="597" width="0.0382%" height="15" fill="rgb(231,119,3)" fg:x="121651" fg:w="98"/><text x="47.7200%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (135 samples, 0.05%)</title><rect x="47.7982%" y="565" width="0.0527%" height="15" fill="rgb(216,97,11)" fg:x="122492" fg:w="135"/><text x="48.0482%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,502 samples, 0.59%)</title><rect x="48.2142%" y="533" width="0.5861%" height="15" fill="rgb(223,59,9)" fg:x="123558" fg:w="1502"/><text x="48.4642%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,604 samples, 1.02%)</title><rect x="47.9141%" y="549" width="1.0161%" height="15" fill="rgb(233,93,31)" fg:x="122789" fg:w="2604"/><text x="48.1641%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (333 samples, 0.13%)</title><rect x="48.8003%" y="533" width="0.1299%" height="15" fill="rgb(239,81,33)" fg:x="125060" fg:w="333"/><text x="49.0503%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.01%)</title><rect x="48.9193%" y="517" width="0.0109%" height="15" fill="rgb(213,120,34)" fg:x="125365" fg:w="28"/><text x="49.1693%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (97 samples, 0.04%)</title><rect x="48.9302%" y="549" width="0.0379%" height="15" fill="rgb(243,49,53)" fg:x="125393" fg:w="97"/><text x="49.1802%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,864 samples, 1.12%)</title><rect x="47.8509%" y="565" width="1.1176%" height="15" fill="rgb(247,216,33)" fg:x="122627" fg:w="2864"/><text x="48.1009%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,604 samples, 1.41%)</title><rect x="47.5852%" y="581" width="1.4063%" height="15" fill="rgb(226,26,14)" fg:x="121946" fg:w="3604"/><text x="47.8352%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="48.9700%" y="565" width="0.0215%" height="15" fill="rgb(215,49,53)" fg:x="125495" fg:w="55"/><text x="49.2200%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (52 samples, 0.02%)</title><rect x="48.9712%" y="549" width="0.0203%" height="15" fill="rgb(245,162,40)" fg:x="125498" fg:w="52"/><text x="49.2212%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (38 samples, 0.01%)</title><rect x="48.9767%" y="533" width="0.0148%" height="15" fill="rgb(229,68,17)" fg:x="125512" fg:w="38"/><text x="49.2267%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (94 samples, 0.04%)</title><rect x="48.9915%" y="581" width="0.0367%" height="15" fill="rgb(213,182,10)" fg:x="125550" fg:w="94"/><text x="49.2415%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (62 samples, 0.02%)</title><rect x="49.0282%" y="581" width="0.0242%" height="15" fill="rgb(245,125,30)" fg:x="125644" fg:w="62"/><text x="49.2782%" y="591.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (76,597 samples, 29.89%)</title><rect x="19.1642%" y="629" width="29.8893%" height="15" fill="rgb(232,202,2)" fg:x="49112" fg:w="76597"/><text x="19.4142%" y="639.50">sudoku-solver`sudoku_solver::backtraking::backtr..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (11,351 samples, 4.43%)</title><rect x="44.6242%" y="613" width="4.4293%" height="15" fill="rgb(237,140,51)" fg:x="114358" fg:w="11351"/><text x="44.8742%" y="623.50">sudok..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,960 samples, 1.55%)</title><rect x="47.5083%" y="597" width="1.5453%" height="15" fill="rgb(236,157,25)" fg:x="121749" fg:w="3960"/><text x="47.7583%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (96 samples, 0.04%)</title><rect x="49.0535%" y="629" width="0.0375%" height="15" fill="rgb(219,209,0)" fg:x="125709" fg:w="96"/><text x="49.3035%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (39 samples, 0.02%)</title><rect x="51.1744%" y="597" width="0.0152%" height="15" fill="rgb(240,116,54)" fg:x="131144" fg:w="39"/><text x="51.4244%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (141 samples, 0.06%)</title><rect x="51.2891%" y="565" width="0.0550%" height="15" fill="rgb(216,10,36)" fg:x="131438" fg:w="141"/><text x="51.5391%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (354 samples, 0.14%)</title><rect x="51.2099%" y="581" width="0.1381%" height="15" fill="rgb(222,72,44)" fg:x="131235" fg:w="354"/><text x="51.4599%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (750 samples, 0.29%)</title><rect x="51.0698%" y="613" width="0.2927%" height="15" fill="rgb(232,159,9)" fg:x="130876" fg:w="750"/><text x="51.3198%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (443 samples, 0.17%)</title><rect x="51.1896%" y="597" width="0.1729%" height="15" fill="rgb(210,39,32)" fg:x="131183" fg:w="443"/><text x="51.4396%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (37 samples, 0.01%)</title><rect x="51.3480%" y="581" width="0.0144%" height="15" fill="rgb(216,194,45)" fg:x="131589" fg:w="37"/><text x="51.5980%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (224 samples, 0.09%)</title><rect x="51.4479%" y="597" width="0.0874%" height="15" fill="rgb(218,18,35)" fg:x="131845" fg:w="224"/><text x="51.6979%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (424 samples, 0.17%)</title><rect x="51.3718%" y="613" width="0.1655%" height="15" fill="rgb(207,83,51)" fg:x="131650" fg:w="424"/><text x="51.6218%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`malloc (77 samples, 0.03%)</title><rect x="51.5373%" y="613" width="0.0300%" height="15" fill="rgb(225,63,43)" fg:x="132074" fg:w="77"/><text x="51.7873%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (85 samples, 0.03%)</title><rect x="51.5728%" y="613" width="0.0332%" height="15" fill="rgb(207,57,36)" fg:x="132165" fg:w="85"/><text x="51.8228%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (47 samples, 0.02%)</title><rect x="51.6133%" y="613" width="0.0183%" height="15" fill="rgb(216,99,33)" fg:x="132269" fg:w="47"/><text x="51.8633%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (540 samples, 0.21%)</title><rect x="51.6317%" y="613" width="0.2107%" height="15" fill="rgb(225,42,16)" fg:x="132316" fg:w="540"/><text x="51.8817%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (58 samples, 0.02%)</title><rect x="51.8424%" y="613" width="0.0226%" height="15" fill="rgb(220,201,45)" fg:x="132856" fg:w="58"/><text x="52.0924%" y="623.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (38 samples, 0.01%)</title><rect x="51.8650%" y="613" width="0.0148%" height="15" fill="rgb(225,33,4)" fg:x="132914" fg:w="38"/><text x="52.1150%" y="623.50"></text></g><g><title>sudoku-solver`__rdl_alloc (117 samples, 0.05%)</title><rect x="51.8799%" y="613" width="0.0457%" height="15" fill="rgb(224,33,50)" fg:x="132952" fg:w="117"/><text x="52.1299%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (121 samples, 0.05%)</title><rect x="52.2131%" y="581" width="0.0472%" height="15" fill="rgb(246,198,51)" fg:x="133806" fg:w="121"/><text x="52.4631%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,260 samples, 0.49%)</title><rect x="52.6053%" y="549" width="0.4917%" height="15" fill="rgb(205,22,4)" fg:x="134811" fg:w="1260"/><text x="52.8553%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,200 samples, 0.86%)</title><rect x="52.3376%" y="565" width="0.8585%" height="15" fill="rgb(206,3,8)" fg:x="134125" fg:w="2200"/><text x="52.5876%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (254 samples, 0.10%)</title><rect x="53.0969%" y="549" width="0.0991%" height="15" fill="rgb(251,23,15)" fg:x="136071" fg:w="254"/><text x="53.3469%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (92 samples, 0.04%)</title><rect x="53.1961%" y="565" width="0.0359%" height="15" fill="rgb(252,88,28)" fg:x="136325" fg:w="92"/><text x="53.4461%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,492 samples, 0.97%)</title><rect x="52.2603%" y="581" width="0.9724%" height="15" fill="rgb(212,127,14)" fg:x="133927" fg:w="2492"/><text x="52.5103%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,233 samples, 1.26%)</title><rect x="51.9965%" y="597" width="1.2616%" height="15" fill="rgb(247,145,37)" fg:x="133251" fg:w="3233"/><text x="52.2465%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.02%)</title><rect x="53.2351%" y="581" width="0.0230%" height="15" fill="rgb(209,117,53)" fg:x="136425" fg:w="59"/><text x="53.4851%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (54 samples, 0.02%)</title><rect x="53.2370%" y="565" width="0.0211%" height="15" fill="rgb(212,90,42)" fg:x="136430" fg:w="54"/><text x="53.4870%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (38 samples, 0.01%)</title><rect x="53.2433%" y="549" width="0.0148%" height="15" fill="rgb(218,164,37)" fg:x="136446" fg:w="38"/><text x="53.4933%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (83 samples, 0.03%)</title><rect x="53.2581%" y="597" width="0.0324%" height="15" fill="rgb(246,65,34)" fg:x="136484" fg:w="83"/><text x="53.5081%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.02%)</title><rect x="53.2905%" y="597" width="0.0183%" height="15" fill="rgb(231,100,33)" fg:x="136567" fg:w="47"/><text x="53.5405%" y="607.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (91,738 samples, 35.80%)</title><rect x="17.5121%" y="645" width="35.7975%" height="15" fill="rgb(228,126,14)" fg:x="44878" fg:w="91738"/><text x="17.7621%" y="655.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recu..</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (10,811 samples, 4.22%)</title><rect x="49.0910%" y="629" width="4.2186%" height="15" fill="rgb(215,173,21)" fg:x="125805" fg:w="10811"/><text x="49.3410%" y="639.50">sudok..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,547 samples, 1.38%)</title><rect x="51.9255%" y="613" width="1.3841%" height="15" fill="rgb(210,6,40)" fg:x="133069" fg:w="3547"/><text x="52.1755%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (90 samples, 0.04%)</title><rect x="53.3096%" y="645" width="0.0351%" height="15" fill="rgb(212,48,18)" fg:x="136616" fg:w="90"/><text x="53.5596%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (107 samples, 0.04%)</title><rect x="55.1764%" y="581" width="0.0418%" height="15" fill="rgb(230,214,11)" fg:x="141400" fg:w="107"/><text x="55.4264%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (288 samples, 0.11%)</title><rect x="55.1089%" y="597" width="0.1124%" height="15" fill="rgb(254,105,39)" fg:x="141227" fg:w="288"/><text x="55.3589%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (596 samples, 0.23%)</title><rect x="55.0008%" y="629" width="0.2326%" height="15" fill="rgb(245,158,5)" fg:x="140950" fg:w="596"/><text x="55.2508%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (371 samples, 0.14%)</title><rect x="55.0886%" y="613" width="0.1448%" height="15" fill="rgb(249,208,11)" fg:x="141175" fg:w="371"/><text x="55.3386%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (31 samples, 0.01%)</title><rect x="55.2213%" y="597" width="0.0121%" height="15" fill="rgb(210,39,28)" fg:x="141515" fg:w="31"/><text x="55.4713%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (177 samples, 0.07%)</title><rect x="55.2981%" y="613" width="0.0691%" height="15" fill="rgb(211,56,53)" fg:x="141712" fg:w="177"/><text x="55.5481%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free (327 samples, 0.13%)</title><rect x="55.2423%" y="629" width="0.1276%" height="15" fill="rgb(226,201,30)" fg:x="141569" fg:w="327"/><text x="55.4923%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`malloc (59 samples, 0.02%)</title><rect x="55.3699%" y="629" width="0.0230%" height="15" fill="rgb(239,101,34)" fg:x="141896" fg:w="59"/><text x="55.6199%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (92 samples, 0.04%)</title><rect x="55.3976%" y="629" width="0.0359%" height="15" fill="rgb(226,209,5)" fg:x="141967" fg:w="92"/><text x="55.6476%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (36 samples, 0.01%)</title><rect x="55.4359%" y="629" width="0.0140%" height="15" fill="rgb(250,105,47)" fg:x="142065" fg:w="36"/><text x="55.6859%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (493 samples, 0.19%)</title><rect x="55.4499%" y="629" width="0.1924%" height="15" fill="rgb(230,72,3)" fg:x="142101" fg:w="493"/><text x="55.6999%" y="639.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (47 samples, 0.02%)</title><rect x="55.6423%" y="629" width="0.0183%" height="15" fill="rgb(232,218,39)" fg:x="142594" fg:w="47"/><text x="55.8923%" y="639.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (27 samples, 0.01%)</title><rect x="55.6607%" y="629" width="0.0105%" height="15" fill="rgb(248,166,6)" fg:x="142641" fg:w="27"/><text x="55.9107%" y="639.50"></text></g><g><title>sudoku-solver`__rdl_alloc (94 samples, 0.04%)</title><rect x="55.6712%" y="629" width="0.0367%" height="15" fill="rgb(247,89,20)" fg:x="142668" fg:w="94"/><text x="55.9212%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (110 samples, 0.04%)</title><rect x="55.9439%" y="597" width="0.0429%" height="15" fill="rgb(248,130,54)" fg:x="143367" fg:w="110"/><text x="56.1939%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,051 samples, 0.41%)</title><rect x="56.2589%" y="565" width="0.4101%" height="15" fill="rgb(234,196,4)" fg:x="144174" fg:w="1051"/><text x="56.5089%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,798 samples, 0.70%)</title><rect x="56.0450%" y="581" width="0.7016%" height="15" fill="rgb(250,143,31)" fg:x="143626" fg:w="1798"/><text x="56.2950%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (199 samples, 0.08%)</title><rect x="56.6690%" y="565" width="0.0777%" height="15" fill="rgb(211,110,34)" fg:x="145225" fg:w="199"/><text x="56.9190%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,026 samples, 0.79%)</title><rect x="55.9869%" y="597" width="0.7906%" height="15" fill="rgb(215,124,48)" fg:x="143477" fg:w="2026"/><text x="56.2369%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (79 samples, 0.03%)</title><rect x="56.7466%" y="581" width="0.0308%" height="15" fill="rgb(216,46,13)" fg:x="145424" fg:w="79"/><text x="56.9966%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,667 samples, 1.04%)</title><rect x="55.7590%" y="613" width="1.0407%" height="15" fill="rgb(205,184,25)" fg:x="142893" fg:w="2667"/><text x="56.0090%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.02%)</title><rect x="56.7786%" y="597" width="0.0211%" height="15" fill="rgb(228,1,10)" fg:x="145506" fg:w="54"/><text x="57.0286%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (48 samples, 0.02%)</title><rect x="56.7810%" y="581" width="0.0187%" height="15" fill="rgb(213,116,27)" fg:x="145512" fg:w="48"/><text x="57.0310%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (36 samples, 0.01%)</title><rect x="56.7856%" y="565" width="0.0140%" height="15" fill="rgb(241,95,50)" fg:x="145524" fg:w="36"/><text x="57.0356%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (75 samples, 0.03%)</title><rect x="56.7997%" y="613" width="0.0293%" height="15" fill="rgb(238,48,32)" fg:x="145560" fg:w="75"/><text x="57.0497%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="56.8290%" y="613" width="0.0179%" height="15" fill="rgb(235,113,49)" fg:x="145635" fg:w="46"/><text x="57.0790%" y="623.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (104,512 samples, 40.78%)</title><rect x="16.0663%" y="661" width="40.7821%" height="15" fill="rgb(205,127,43)" fg:x="41173" fg:w="104512"/><text x="16.3163%" y="671.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (8,979 samples, 3.50%)</title><rect x="53.3447%" y="645" width="3.5037%" height="15" fill="rgb(250,162,2)" fg:x="136706" fg:w="8979"/><text x="53.5947%" y="655.50">sud..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (2,923 samples, 1.14%)</title><rect x="55.7079%" y="629" width="1.1406%" height="15" fill="rgb(220,13,41)" fg:x="142762" fg:w="2923"/><text x="55.9579%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (81 samples, 0.03%)</title><rect x="56.8485%" y="661" width="0.0316%" height="15" fill="rgb(249,221,25)" fg:x="145685" fg:w="81"/><text x="57.0985%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (94 samples, 0.04%)</title><rect x="58.4636%" y="597" width="0.0367%" height="15" fill="rgb(215,208,19)" fg:x="149824" fg:w="94"/><text x="58.7136%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (260 samples, 0.10%)</title><rect x="58.4019%" y="613" width="0.1015%" height="15" fill="rgb(236,175,2)" fg:x="149666" fg:w="260"/><text x="58.6519%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (514 samples, 0.20%)</title><rect x="58.3110%" y="645" width="0.2006%" height="15" fill="rgb(241,52,2)" fg:x="149433" fg:w="514"/><text x="58.5610%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (328 samples, 0.13%)</title><rect x="58.3836%" y="629" width="0.1280%" height="15" fill="rgb(248,140,14)" fg:x="149619" fg:w="328"/><text x="58.6336%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (161 samples, 0.06%)</title><rect x="58.5674%" y="629" width="0.0628%" height="15" fill="rgb(253,22,42)" fg:x="150090" fg:w="161"/><text x="58.8174%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`free (284 samples, 0.11%)</title><rect x="58.5201%" y="645" width="0.1108%" height="15" fill="rgb(234,61,47)" fg:x="149969" fg:w="284"/><text x="58.7701%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`malloc (49 samples, 0.02%)</title><rect x="58.6310%" y="645" width="0.0191%" height="15" fill="rgb(208,226,15)" fg:x="150253" fg:w="49"/><text x="58.8810%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (73 samples, 0.03%)</title><rect x="58.6559%" y="645" width="0.0285%" height="15" fill="rgb(217,221,4)" fg:x="150317" fg:w="73"/><text x="58.9059%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (35 samples, 0.01%)</title><rect x="58.6879%" y="645" width="0.0137%" height="15" fill="rgb(212,174,34)" fg:x="150399" fg:w="35"/><text x="58.9379%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (398 samples, 0.16%)</title><rect x="58.7016%" y="645" width="0.1553%" height="15" fill="rgb(253,83,4)" fg:x="150434" fg:w="398"/><text x="58.9516%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (48 samples, 0.02%)</title><rect x="58.8569%" y="645" width="0.0187%" height="15" fill="rgb(250,195,49)" fg:x="150832" fg:w="48"/><text x="59.1069%" y="655.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (31 samples, 0.01%)</title><rect x="58.8756%" y="645" width="0.0121%" height="15" fill="rgb(241,192,25)" fg:x="150880" fg:w="31"/><text x="59.1256%" y="655.50"></text></g><g><title>sudoku-solver`__rdl_alloc (62 samples, 0.02%)</title><rect x="58.8877%" y="645" width="0.0242%" height="15" fill="rgb(208,124,10)" fg:x="150911" fg:w="62"/><text x="59.1377%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (98 samples, 0.04%)</title><rect x="59.1047%" y="613" width="0.0382%" height="15" fill="rgb(222,33,0)" fg:x="151467" fg:w="98"/><text x="59.3547%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (856 samples, 0.33%)</title><rect x="59.3911%" y="581" width="0.3340%" height="15" fill="rgb(234,209,28)" fg:x="152201" fg:w="856"/><text x="59.6411%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,555 samples, 0.61%)</title><rect x="59.1855%" y="597" width="0.6068%" height="15" fill="rgb(224,11,23)" fg:x="151674" fg:w="1555"/><text x="59.4355%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (172 samples, 0.07%)</title><rect x="59.7251%" y="581" width="0.0671%" height="15" fill="rgb(232,99,1)" fg:x="153057" fg:w="172"/><text x="59.9751%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,726 samples, 0.67%)</title><rect x="59.1429%" y="613" width="0.6735%" height="15" fill="rgb(237,95,45)" fg:x="151565" fg:w="1726"/><text x="59.3929%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (62 samples, 0.02%)</title><rect x="59.7922%" y="597" width="0.0242%" height="15" fill="rgb(208,109,11)" fg:x="153229" fg:w="62"/><text x="60.0422%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,231 samples, 0.87%)</title><rect x="58.9646%" y="629" width="0.8706%" height="15" fill="rgb(216,190,48)" fg:x="151108" fg:w="2231"/><text x="59.2146%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (46 samples, 0.02%)</title><rect x="59.8172%" y="613" width="0.0179%" height="15" fill="rgb(251,171,36)" fg:x="153293" fg:w="46"/><text x="60.0672%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (41 samples, 0.02%)</title><rect x="59.8192%" y="597" width="0.0160%" height="15" fill="rgb(230,62,22)" fg:x="153298" fg:w="41"/><text x="60.0692%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (27 samples, 0.01%)</title><rect x="59.8246%" y="581" width="0.0105%" height="15" fill="rgb(225,114,35)" fg:x="153312" fg:w="27"/><text x="60.0746%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (58 samples, 0.02%)</title><rect x="59.8352%" y="629" width="0.0226%" height="15" fill="rgb(215,118,42)" fg:x="153339" fg:w="58"/><text x="60.0852%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (41 samples, 0.02%)</title><rect x="59.8578%" y="629" width="0.0160%" height="15" fill="rgb(243,119,21)" fg:x="153397" fg:w="41"/><text x="60.1078%" y="639.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (115,565 samples, 45.10%)</title><rect x="14.7806%" y="677" width="45.0952%" height="15" fill="rgb(252,177,53)" fg:x="37878" fg:w="115565"/><text x="15.0306%" y="687.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (7,677 samples, 3.00%)</title><rect x="56.8801%" y="661" width="2.9957%" height="15" fill="rgb(237,209,29)" fg:x="145766" fg:w="7677"/><text x="57.1301%" y="671.50">sud..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (2,469 samples, 0.96%)</title><rect x="58.9123%" y="645" width="0.9634%" height="15" fill="rgb(212,65,23)" fg:x="150974" fg:w="2469"/><text x="59.1623%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (88 samples, 0.03%)</title><rect x="59.8758%" y="677" width="0.0343%" height="15" fill="rgb(230,222,46)" fg:x="153443" fg:w="88"/><text x="60.1258%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (94 samples, 0.04%)</title><rect x="61.0850%" y="613" width="0.0367%" height="15" fill="rgb(215,135,32)" fg:x="156542" fg:w="94"/><text x="61.3350%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (224 samples, 0.09%)</title><rect x="61.0359%" y="629" width="0.0874%" height="15" fill="rgb(246,101,22)" fg:x="156416" fg:w="224"/><text x="61.2859%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (407 samples, 0.16%)</title><rect x="60.9695%" y="661" width="0.1588%" height="15" fill="rgb(206,107,13)" fg:x="156246" fg:w="407"/><text x="61.2195%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (261 samples, 0.10%)</title><rect x="61.0265%" y="645" width="0.1018%" height="15" fill="rgb(250,100,44)" fg:x="156392" fg:w="261"/><text x="61.2765%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (106 samples, 0.04%)</title><rect x="61.1697%" y="645" width="0.0414%" height="15" fill="rgb(231,147,38)" fg:x="156759" fg:w="106"/><text x="61.4197%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free (197 samples, 0.08%)</title><rect x="61.1350%" y="661" width="0.0769%" height="15" fill="rgb(229,8,40)" fg:x="156670" fg:w="197"/><text x="61.3850%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`malloc (37 samples, 0.01%)</title><rect x="61.2119%" y="661" width="0.0144%" height="15" fill="rgb(221,135,30)" fg:x="156867" fg:w="37"/><text x="61.4619%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (62 samples, 0.02%)</title><rect x="61.2294%" y="661" width="0.0242%" height="15" fill="rgb(249,193,18)" fg:x="156912" fg:w="62"/><text x="61.4794%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (304 samples, 0.12%)</title><rect x="61.2630%" y="661" width="0.1186%" height="15" fill="rgb(209,133,39)" fg:x="156998" fg:w="304"/><text x="61.5130%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (26 samples, 0.01%)</title><rect x="61.3816%" y="661" width="0.0101%" height="15" fill="rgb(232,100,14)" fg:x="157302" fg:w="26"/><text x="61.6316%" y="671.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (30 samples, 0.01%)</title><rect x="61.3917%" y="661" width="0.0117%" height="15" fill="rgb(224,185,1)" fg:x="157328" fg:w="30"/><text x="61.6417%" y="671.50"></text></g><g><title>sudoku-solver`__rdl_alloc (56 samples, 0.02%)</title><rect x="61.4034%" y="661" width="0.0219%" height="15" fill="rgb(223,139,8)" fg:x="157358" fg:w="56"/><text x="61.6534%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (70 samples, 0.03%)</title><rect x="61.5662%" y="629" width="0.0273%" height="15" fill="rgb(232,213,38)" fg:x="157775" fg:w="70"/><text x="61.8162%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (630 samples, 0.25%)</title><rect x="61.7663%" y="597" width="0.2458%" height="15" fill="rgb(207,94,22)" fg:x="158288" fg:w="630"/><text x="62.0163%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,158 samples, 0.45%)</title><rect x="61.6220%" y="613" width="0.4519%" height="15" fill="rgb(219,183,54)" fg:x="157918" fg:w="1158"/><text x="61.8720%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (158 samples, 0.06%)</title><rect x="62.0122%" y="597" width="0.0617%" height="15" fill="rgb(216,185,54)" fg:x="158918" fg:w="158"/><text x="62.2622%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (37 samples, 0.01%)</title><rect x="62.0738%" y="613" width="0.0144%" height="15" fill="rgb(254,217,39)" fg:x="159076" fg:w="37"/><text x="62.3238%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,269 samples, 0.50%)</title><rect x="61.5935%" y="629" width="0.4952%" height="15" fill="rgb(240,178,23)" fg:x="157845" fg:w="1269"/><text x="61.8435%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,645 samples, 0.64%)</title><rect x="61.4589%" y="645" width="0.6419%" height="15" fill="rgb(218,11,47)" fg:x="157500" fg:w="1645"/><text x="61.7089%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (30 samples, 0.01%)</title><rect x="62.1008%" y="645" width="0.0117%" height="15" fill="rgb(218,51,51)" fg:x="159145" fg:w="30"/><text x="62.3508%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (33 samples, 0.01%)</title><rect x="62.1125%" y="645" width="0.0129%" height="15" fill="rgb(238,126,27)" fg:x="159175" fg:w="33"/><text x="62.3625%" y="655.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (123,814 samples, 48.31%)</title><rect x="13.8117%" y="693" width="48.3141%" height="15" fill="rgb(249,202,22)" fg:x="35395" fg:w="123814"/><text x="14.0617%" y="703.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (5,678 samples, 2.22%)</title><rect x="59.9101%" y="677" width="2.2156%" height="15" fill="rgb(254,195,49)" fg:x="153531" fg:w="5678"/><text x="60.1601%" y="687.50">s..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (1,795 samples, 0.70%)</title><rect x="61.4253%" y="661" width="0.7004%" height="15" fill="rgb(208,123,14)" fg:x="157414" fg:w="1795"/><text x="61.6753%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (59 samples, 0.02%)</title><rect x="62.1257%" y="693" width="0.0230%" height="15" fill="rgb(224,200,8)" fg:x="159209" fg:w="59"/><text x="62.3757%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (60 samples, 0.02%)</title><rect x="62.8406%" y="629" width="0.0234%" height="15" fill="rgb(217,61,36)" fg:x="161041" fg:w="60"/><text x="63.0906%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (139 samples, 0.05%)</title><rect x="62.8110%" y="645" width="0.0542%" height="15" fill="rgb(206,35,45)" fg:x="160965" fg:w="139"/><text x="63.0610%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (258 samples, 0.10%)</title><rect x="62.7676%" y="677" width="0.1007%" height="15" fill="rgb(217,65,33)" fg:x="160854" fg:w="258"/><text x="63.0176%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (163 samples, 0.06%)</title><rect x="62.8047%" y="661" width="0.0636%" height="15" fill="rgb(222,158,48)" fg:x="160949" fg:w="163"/><text x="63.0547%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (128 samples, 0.05%)</title><rect x="62.8726%" y="677" width="0.0499%" height="15" fill="rgb(254,2,54)" fg:x="161123" fg:w="128"/><text x="63.1226%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (78 samples, 0.03%)</title><rect x="62.8921%" y="661" width="0.0304%" height="15" fill="rgb(250,143,38)" fg:x="161173" fg:w="78"/><text x="63.1421%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (36 samples, 0.01%)</title><rect x="62.9335%" y="677" width="0.0140%" height="15" fill="rgb(248,25,0)" fg:x="161279" fg:w="36"/><text x="63.1835%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (162 samples, 0.06%)</title><rect x="62.9561%" y="677" width="0.0632%" height="15" fill="rgb(206,152,27)" fg:x="161337" fg:w="162"/><text x="63.2061%" y="687.50"></text></g><g><title>sudoku-solver`__rdl_alloc (33 samples, 0.01%)</title><rect x="63.0318%" y="677" width="0.0129%" height="15" fill="rgb(240,77,30)" fg:x="161531" fg:w="33"/><text x="63.2818%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (47 samples, 0.02%)</title><rect x="63.1352%" y="645" width="0.0183%" height="15" fill="rgb(231,5,3)" fg:x="161796" fg:w="47"/><text x="63.3852%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (523 samples, 0.20%)</title><rect x="63.2652%" y="613" width="0.2041%" height="15" fill="rgb(207,226,32)" fg:x="162129" fg:w="523"/><text x="63.5152%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (895 samples, 0.35%)</title><rect x="63.1739%" y="629" width="0.3492%" height="15" fill="rgb(222,207,47)" fg:x="161895" fg:w="895"/><text x="63.4239%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (138 samples, 0.05%)</title><rect x="63.4692%" y="613" width="0.0538%" height="15" fill="rgb(229,115,45)" fg:x="162652" fg:w="138"/><text x="63.7192%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (40 samples, 0.02%)</title><rect x="63.5231%" y="629" width="0.0156%" height="15" fill="rgb(224,191,6)" fg:x="162790" fg:w="40"/><text x="63.7731%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (988 samples, 0.39%)</title><rect x="63.1536%" y="645" width="0.3855%" height="15" fill="rgb(230,227,24)" fg:x="161843" fg:w="988"/><text x="63.4036%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,248 samples, 0.49%)</title><rect x="63.0642%" y="661" width="0.4870%" height="15" fill="rgb(228,80,19)" fg:x="161614" fg:w="1248"/><text x="63.3142%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (28 samples, 0.01%)</title><rect x="63.5403%" y="645" width="0.0109%" height="15" fill="rgb(247,229,0)" fg:x="162834" fg:w="28"/><text x="63.7903%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (27 samples, 0.01%)</title><rect x="63.5407%" y="629" width="0.0105%" height="15" fill="rgb(237,194,15)" fg:x="162835" fg:w="27"/><text x="63.7907%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (36 samples, 0.01%)</title><rect x="63.5512%" y="661" width="0.0140%" height="15" fill="rgb(219,203,20)" fg:x="162862" fg:w="36"/><text x="63.8012%" y="671.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (129,227 samples, 50.43%)</title><rect x="13.1467%" y="709" width="50.4263%" height="15" fill="rgb(234,128,8)" fg:x="33691" fg:w="129227"/><text x="13.3967%" y="719.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (3,650 samples, 1.42%)</title><rect x="62.1488%" y="693" width="1.4243%" height="15" fill="rgb(248,202,8)" fg:x="159268" fg:w="3650"/><text x="62.3988%" y="703.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (1,354 samples, 0.53%)</title><rect x="63.0447%" y="677" width="0.5284%" height="15" fill="rgb(206,104,37)" fg:x="161564" fg:w="1354"/><text x="63.2947%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (131 samples, 0.05%)</title><rect x="65.2092%" y="645" width="0.0511%" height="15" fill="rgb(223,8,27)" fg:x="167111" fg:w="131"/><text x="65.4592%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (294 samples, 0.11%)</title><rect x="65.1507%" y="661" width="0.1147%" height="15" fill="rgb(216,217,28)" fg:x="166961" fg:w="294"/><text x="65.4007%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (562 samples, 0.22%)</title><rect x="65.0574%" y="693" width="0.2193%" height="15" fill="rgb(249,199,1)" fg:x="166722" fg:w="562"/><text x="65.3074%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (370 samples, 0.14%)</title><rect x="65.1323%" y="677" width="0.1444%" height="15" fill="rgb(240,85,17)" fg:x="166914" fg:w="370"/><text x="65.3823%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.01%)</title><rect x="65.2654%" y="661" width="0.0113%" height="15" fill="rgb(206,108,45)" fg:x="167255" fg:w="29"/><text x="65.5154%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (158 samples, 0.06%)</title><rect x="65.3380%" y="677" width="0.0617%" height="15" fill="rgb(245,210,41)" fg:x="167441" fg:w="158"/><text x="65.5880%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free (298 samples, 0.12%)</title><rect x="65.2845%" y="693" width="0.1163%" height="15" fill="rgb(206,13,37)" fg:x="167304" fg:w="298"/><text x="65.5345%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`malloc (43 samples, 0.02%)</title><rect x="65.4008%" y="693" width="0.0168%" height="15" fill="rgb(250,61,18)" fg:x="167602" fg:w="43"/><text x="65.6508%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (82 samples, 0.03%)</title><rect x="65.4199%" y="693" width="0.0320%" height="15" fill="rgb(235,172,48)" fg:x="167651" fg:w="82"/><text x="65.6699%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (36 samples, 0.01%)</title><rect x="65.4586%" y="693" width="0.0140%" height="15" fill="rgb(249,201,17)" fg:x="167750" fg:w="36"/><text x="65.7086%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (410 samples, 0.16%)</title><rect x="65.4726%" y="693" width="0.1600%" height="15" fill="rgb(219,208,6)" fg:x="167786" fg:w="410"/><text x="65.7226%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (40 samples, 0.02%)</title><rect x="65.6326%" y="693" width="0.0156%" height="15" fill="rgb(248,31,23)" fg:x="168196" fg:w="40"/><text x="65.8826%" y="703.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (27 samples, 0.01%)</title><rect x="65.6482%" y="693" width="0.0105%" height="15" fill="rgb(245,15,42)" fg:x="168236" fg:w="27"/><text x="65.8982%" y="703.50"></text></g><g><title>sudoku-solver`__rdl_alloc (69 samples, 0.03%)</title><rect x="65.6587%" y="693" width="0.0269%" height="15" fill="rgb(222,217,39)" fg:x="168263" fg:w="69"/><text x="65.9087%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (101 samples, 0.04%)</title><rect x="65.8769%" y="661" width="0.0394%" height="15" fill="rgb(210,219,27)" fg:x="168822" fg:w="101"/><text x="66.1269%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,080 samples, 0.42%)</title><rect x="66.1711%" y="629" width="0.4214%" height="15" fill="rgb(252,166,36)" fg:x="169576" fg:w="1080"/><text x="66.4211%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,842 samples, 0.72%)</title><rect x="65.9643%" y="645" width="0.7188%" height="15" fill="rgb(245,132,34)" fg:x="169046" fg:w="1842"/><text x="66.2143%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (232 samples, 0.09%)</title><rect x="66.5925%" y="629" width="0.0905%" height="15" fill="rgb(236,54,3)" fg:x="170656" fg:w="232"/><text x="66.8425%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (54 samples, 0.02%)</title><rect x="66.6831%" y="645" width="0.0211%" height="15" fill="rgb(241,173,43)" fg:x="170888" fg:w="54"/><text x="66.9331%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,020 samples, 0.79%)</title><rect x="65.9163%" y="661" width="0.7882%" height="15" fill="rgb(215,190,9)" fg:x="168923" fg:w="2020"/><text x="66.1663%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,539 samples, 0.99%)</title><rect x="65.7352%" y="677" width="0.9908%" height="15" fill="rgb(242,101,16)" fg:x="168459" fg:w="2539"/><text x="65.9852%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.02%)</title><rect x="66.7065%" y="661" width="0.0195%" height="15" fill="rgb(223,190,21)" fg:x="170948" fg:w="50"/><text x="66.9565%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (48 samples, 0.02%)</title><rect x="66.7072%" y="645" width="0.0187%" height="15" fill="rgb(215,228,25)" fg:x="170950" fg:w="48"/><text x="66.9572%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (34 samples, 0.01%)</title><rect x="66.7127%" y="629" width="0.0133%" height="15" fill="rgb(225,36,22)" fg:x="170964" fg:w="34"/><text x="66.9627%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (71 samples, 0.03%)</title><rect x="66.7260%" y="677" width="0.0277%" height="15" fill="rgb(251,106,46)" fg:x="170998" fg:w="71"/><text x="66.9760%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (40 samples, 0.02%)</title><rect x="66.7537%" y="677" width="0.0156%" height="15" fill="rgb(208,90,1)" fg:x="171069" fg:w="40"/><text x="67.0037%" y="687.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (140,013 samples, 54.64%)</title><rect x="12.1349%" y="725" width="54.6352%" height="15" fill="rgb(243,10,4)" fg:x="31098" fg:w="140013"/><text x="12.3849%" y="735.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (8,168 samples, 3.19%)</title><rect x="63.5828%" y="709" width="3.1873%" height="15" fill="rgb(212,137,27)" fg:x="162943" fg:w="8168"/><text x="63.8328%" y="719.50">sud..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (2,779 samples, 1.08%)</title><rect x="65.6857%" y="693" width="1.0844%" height="15" fill="rgb(231,220,49)" fg:x="168332" fg:w="2779"/><text x="65.9357%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (54 samples, 0.02%)</title><rect x="66.7701%" y="725" width="0.0211%" height="15" fill="rgb(237,96,20)" fg:x="171111" fg:w="54"/><text x="67.0201%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.01%)</title><rect x="68.7223%" y="693" width="0.0129%" height="15" fill="rgb(239,229,30)" fg:x="176114" fg:w="33"/><text x="68.9723%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (117 samples, 0.05%)</title><rect x="68.8355%" y="661" width="0.0457%" height="15" fill="rgb(219,65,33)" fg:x="176404" fg:w="117"/><text x="69.0855%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (333 samples, 0.13%)</title><rect x="68.7547%" y="677" width="0.1299%" height="15" fill="rgb(243,134,7)" fg:x="176197" fg:w="333"/><text x="69.0047%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (677 samples, 0.26%)</title><rect x="68.6302%" y="709" width="0.2642%" height="15" fill="rgb(216,177,54)" fg:x="175878" fg:w="677"/><text x="68.8802%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (408 samples, 0.16%)</title><rect x="68.7352%" y="693" width="0.1592%" height="15" fill="rgb(211,160,20)" fg:x="176147" fg:w="408"/><text x="68.9852%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (214 samples, 0.08%)</title><rect x="68.9806%" y="693" width="0.0835%" height="15" fill="rgb(239,85,39)" fg:x="176776" fg:w="214"/><text x="69.2306%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (419 samples, 0.16%)</title><rect x="68.9042%" y="709" width="0.1635%" height="15" fill="rgb(232,125,22)" fg:x="176580" fg:w="419"/><text x="69.1542%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`malloc (65 samples, 0.03%)</title><rect x="69.0677%" y="709" width="0.0254%" height="15" fill="rgb(244,57,34)" fg:x="176999" fg:w="65"/><text x="69.3177%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (121 samples, 0.05%)</title><rect x="69.1008%" y="709" width="0.0472%" height="15" fill="rgb(214,203,32)" fg:x="177084" fg:w="121"/><text x="69.3508%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (47 samples, 0.02%)</title><rect x="69.1531%" y="709" width="0.0183%" height="15" fill="rgb(207,58,43)" fg:x="177218" fg:w="47"/><text x="69.4031%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (493 samples, 0.19%)</title><rect x="69.1715%" y="709" width="0.1924%" height="15" fill="rgb(215,193,15)" fg:x="177265" fg:w="493"/><text x="69.4215%" y="719.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (46 samples, 0.02%)</title><rect x="69.3638%" y="709" width="0.0179%" height="15" fill="rgb(232,15,44)" fg:x="177758" fg:w="46"/><text x="69.6138%" y="719.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (38 samples, 0.01%)</title><rect x="69.3818%" y="709" width="0.0148%" height="15" fill="rgb(212,3,48)" fg:x="177804" fg:w="38"/><text x="69.6318%" y="719.50"></text></g><g><title>sudoku-solver`__rdl_alloc (102 samples, 0.04%)</title><rect x="69.3966%" y="709" width="0.0398%" height="15" fill="rgb(218,128,7)" fg:x="177842" fg:w="102"/><text x="69.6466%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (123 samples, 0.05%)</title><rect x="69.6733%" y="677" width="0.0480%" height="15" fill="rgb(226,216,39)" fg:x="178551" fg:w="123"/><text x="69.9233%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,229 samples, 0.48%)</title><rect x="70.0311%" y="645" width="0.4796%" height="15" fill="rgb(243,47,51)" fg:x="179468" fg:w="1229"/><text x="70.2811%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,141 samples, 0.84%)</title><rect x="69.7810%" y="661" width="0.8355%" height="15" fill="rgb(241,183,40)" fg:x="178827" fg:w="2141"/><text x="70.0310%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (271 samples, 0.11%)</title><rect x="70.5107%" y="645" width="0.1057%" height="15" fill="rgb(231,217,32)" fg:x="180697" fg:w="271"/><text x="70.7607%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,380 samples, 0.93%)</title><rect x="69.7213%" y="677" width="0.9287%" height="15" fill="rgb(229,61,38)" fg:x="178674" fg:w="2380"/><text x="69.9713%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (86 samples, 0.03%)</title><rect x="70.6164%" y="661" width="0.0336%" height="15" fill="rgb(225,210,5)" fg:x="180968" fg:w="86"/><text x="70.8664%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,014 samples, 1.18%)</title><rect x="69.4973%" y="693" width="1.1761%" height="15" fill="rgb(231,79,45)" fg:x="178100" fg:w="3014"/><text x="69.7473%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (56 samples, 0.02%)</title><rect x="70.6515%" y="677" width="0.0219%" height="15" fill="rgb(224,100,7)" fg:x="181058" fg:w="56"/><text x="70.9015%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (50 samples, 0.02%)</title><rect x="70.6539%" y="661" width="0.0195%" height="15" fill="rgb(241,198,18)" fg:x="181064" fg:w="50"/><text x="70.9039%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (39 samples, 0.02%)</title><rect x="70.6582%" y="645" width="0.0152%" height="15" fill="rgb(252,97,53)" fg:x="181075" fg:w="39"/><text x="70.9082%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (81 samples, 0.03%)</title><rect x="70.6734%" y="693" width="0.0316%" height="15" fill="rgb(220,88,7)" fg:x="181114" fg:w="81"/><text x="70.9234%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (51 samples, 0.02%)</title><rect x="70.7050%" y="693" width="0.0199%" height="15" fill="rgb(213,176,14)" fg:x="181195" fg:w="51"/><text x="70.9550%" y="703.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (153,461 samples, 59.88%)</title><rect x="10.8429%" y="741" width="59.8828%" height="15" fill="rgb(246,73,7)" fg:x="27787" fg:w="153461"/><text x="11.0929%" y="751.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (10,083 samples, 3.93%)</title><rect x="66.7911%" y="725" width="3.9345%" height="15" fill="rgb(245,64,36)" fg:x="171165" fg:w="10083"/><text x="67.0411%" y="735.50">sudo..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,304 samples, 1.29%)</title><rect x="69.4364%" y="709" width="1.2893%" height="15" fill="rgb(245,80,10)" fg:x="177944" fg:w="3304"/><text x="69.6864%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (74 samples, 0.03%)</title><rect x="70.7257%" y="741" width="0.0289%" height="15" fill="rgb(232,107,50)" fg:x="181248" fg:w="74"/><text x="70.9757%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (30 samples, 0.01%)</title><rect x="72.8871%" y="709" width="0.0117%" height="15" fill="rgb(253,3,0)" fg:x="186787" fg:w="30"/><text x="73.1371%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (121 samples, 0.05%)</title><rect x="73.0174%" y="677" width="0.0472%" height="15" fill="rgb(212,99,53)" fg:x="187121" fg:w="121"/><text x="73.2674%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (363 samples, 0.14%)</title><rect x="72.9269%" y="693" width="0.1416%" height="15" fill="rgb(249,111,54)" fg:x="186889" fg:w="363"/><text x="73.1769%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (756 samples, 0.30%)</title><rect x="72.7841%" y="725" width="0.2950%" height="15" fill="rgb(249,55,30)" fg:x="186523" fg:w="756"/><text x="73.0341%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (462 samples, 0.18%)</title><rect x="72.8988%" y="709" width="0.1803%" height="15" fill="rgb(237,47,42)" fg:x="186817" fg:w="462"/><text x="73.1488%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.01%)</title><rect x="73.0685%" y="693" width="0.0105%" height="15" fill="rgb(211,20,18)" fg:x="187252" fg:w="27"/><text x="73.3185%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (42 samples, 0.02%)</title><rect x="73.0791%" y="725" width="0.0164%" height="15" fill="rgb(231,203,46)" fg:x="187279" fg:w="42"/><text x="73.3291%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (216 samples, 0.08%)</title><rect x="73.1645%" y="709" width="0.0843%" height="15" fill="rgb(237,142,3)" fg:x="187498" fg:w="216"/><text x="73.4145%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (397 samples, 0.15%)</title><rect x="73.0955%" y="725" width="0.1549%" height="15" fill="rgb(241,107,1)" fg:x="187321" fg:w="397"/><text x="73.3455%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`malloc (80 samples, 0.03%)</title><rect x="73.2504%" y="725" width="0.0312%" height="15" fill="rgb(229,83,13)" fg:x="187718" fg:w="80"/><text x="73.5004%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (98 samples, 0.04%)</title><rect x="73.2855%" y="725" width="0.0382%" height="15" fill="rgb(241,91,40)" fg:x="187808" fg:w="98"/><text x="73.5355%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (39 samples, 0.02%)</title><rect x="73.3296%" y="725" width="0.0152%" height="15" fill="rgb(225,3,45)" fg:x="187921" fg:w="39"/><text x="73.5796%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (529 samples, 0.21%)</title><rect x="73.3448%" y="725" width="0.2064%" height="15" fill="rgb(244,223,14)" fg:x="187960" fg:w="529"/><text x="73.5948%" y="735.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (60 samples, 0.02%)</title><rect x="73.5512%" y="725" width="0.0234%" height="15" fill="rgb(224,124,37)" fg:x="188489" fg:w="60"/><text x="73.8012%" y="735.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (41 samples, 0.02%)</title><rect x="73.5746%" y="725" width="0.0160%" height="15" fill="rgb(251,171,30)" fg:x="188549" fg:w="41"/><text x="73.8246%" y="735.50"></text></g><g><title>sudoku-solver`__rdl_alloc (104 samples, 0.04%)</title><rect x="73.5906%" y="725" width="0.0406%" height="15" fill="rgb(236,46,54)" fg:x="188590" fg:w="104"/><text x="73.8406%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (133 samples, 0.05%)</title><rect x="73.9114%" y="693" width="0.0519%" height="15" fill="rgb(245,213,5)" fg:x="189412" fg:w="133"/><text x="74.1614%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,162 samples, 0.45%)</title><rect x="74.2891%" y="661" width="0.4534%" height="15" fill="rgb(230,144,27)" fg:x="190380" fg:w="1162"/><text x="74.5391%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (2,105 samples, 0.82%)</title><rect x="74.0277%" y="677" width="0.8214%" height="15" fill="rgb(220,86,6)" fg:x="189710" fg:w="2105"/><text x="74.2777%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (273 samples, 0.11%)</title><rect x="74.7426%" y="661" width="0.1065%" height="15" fill="rgb(240,20,13)" fg:x="191542" fg:w="273"/><text x="74.9926%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (92 samples, 0.04%)</title><rect x="74.8491%" y="677" width="0.0359%" height="15" fill="rgb(217,89,34)" fg:x="191815" fg:w="92"/><text x="75.0991%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,363 samples, 0.92%)</title><rect x="73.9633%" y="693" width="0.9221%" height="15" fill="rgb(229,13,5)" fg:x="189545" fg:w="2363"/><text x="74.2133%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3,100 samples, 1.21%)</title><rect x="73.6983%" y="709" width="1.2097%" height="15" fill="rgb(244,67,35)" fg:x="188866" fg:w="3100"/><text x="73.9483%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.02%)</title><rect x="74.8869%" y="693" width="0.0211%" height="15" fill="rgb(221,40,2)" fg:x="191912" fg:w="54"/><text x="75.1369%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (48 samples, 0.02%)</title><rect x="74.8893%" y="677" width="0.0187%" height="15" fill="rgb(237,157,21)" fg:x="191918" fg:w="48"/><text x="75.1393%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (33 samples, 0.01%)</title><rect x="74.8951%" y="661" width="0.0129%" height="15" fill="rgb(222,94,11)" fg:x="191933" fg:w="33"/><text x="75.1451%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (93 samples, 0.04%)</title><rect x="74.9080%" y="709" width="0.0363%" height="15" fill="rgb(249,113,6)" fg:x="191966" fg:w="93"/><text x="75.1580%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (60 samples, 0.02%)</title><rect x="74.9443%" y="709" width="0.0234%" height="15" fill="rgb(238,137,36)" fg:x="192059" fg:w="60"/><text x="75.1943%" y="719.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (168,187 samples, 65.63%)</title><rect x="9.3398%" y="757" width="65.6291%" height="15" fill="rgb(210,102,26)" fg:x="23935" fg:w="168187"/><text x="9.5898%" y="767.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (10,800 samples, 4.21%)</title><rect x="70.7546%" y="741" width="4.2143%" height="15" fill="rgb(218,30,30)" fg:x="181322" fg:w="10800"/><text x="71.0046%" y="751.50">sudok..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,428 samples, 1.34%)</title><rect x="73.6312%" y="725" width="1.3377%" height="15" fill="rgb(214,67,26)" fg:x="188694" fg:w="3428"/><text x="73.8812%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (75 samples, 0.03%)</title><rect x="74.9689%" y="757" width="0.0293%" height="15" fill="rgb(251,9,53)" fg:x="192122" fg:w="75"/><text x="75.2189%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (49 samples, 0.02%)</title><rect x="77.0799%" y="725" width="0.0191%" height="15" fill="rgb(228,204,25)" fg:x="197532" fg:w="49"/><text x="77.3299%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (158 samples, 0.06%)</title><rect x="77.2138%" y="693" width="0.0617%" height="15" fill="rgb(207,153,8)" fg:x="197875" fg:w="158"/><text x="77.4638%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (379 samples, 0.15%)</title><rect x="77.1303%" y="709" width="0.1479%" height="15" fill="rgb(242,9,16)" fg:x="197661" fg:w="379"/><text x="77.3803%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (761 samples, 0.30%)</title><rect x="76.9933%" y="741" width="0.2970%" height="15" fill="rgb(217,211,10)" fg:x="197310" fg:w="761"/><text x="77.2433%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (490 samples, 0.19%)</title><rect x="77.0991%" y="725" width="0.1912%" height="15" fill="rgb(219,228,52)" fg:x="197581" fg:w="490"/><text x="77.3491%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (31 samples, 0.01%)</title><rect x="77.2782%" y="709" width="0.0121%" height="15" fill="rgb(231,92,29)" fg:x="198040" fg:w="31"/><text x="77.5282%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (32 samples, 0.01%)</title><rect x="77.2903%" y="741" width="0.0125%" height="15" fill="rgb(232,8,23)" fg:x="198071" fg:w="32"/><text x="77.5403%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (232 samples, 0.09%)</title><rect x="77.3757%" y="725" width="0.0905%" height="15" fill="rgb(216,211,34)" fg:x="198290" fg:w="232"/><text x="77.6257%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (427 samples, 0.17%)</title><rect x="77.3028%" y="741" width="0.1666%" height="15" fill="rgb(236,151,0)" fg:x="198103" fg:w="427"/><text x="77.5528%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc (75 samples, 0.03%)</title><rect x="77.4694%" y="741" width="0.0293%" height="15" fill="rgb(209,168,3)" fg:x="198530" fg:w="75"/><text x="77.7194%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (121 samples, 0.05%)</title><rect x="77.5037%" y="741" width="0.0472%" height="15" fill="rgb(208,129,28)" fg:x="198618" fg:w="121"/><text x="77.7537%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (44 samples, 0.02%)</title><rect x="77.5572%" y="741" width="0.0172%" height="15" fill="rgb(229,78,22)" fg:x="198755" fg:w="44"/><text x="77.8072%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (515 samples, 0.20%)</title><rect x="77.5743%" y="741" width="0.2010%" height="15" fill="rgb(228,187,13)" fg:x="198799" fg:w="515"/><text x="77.8243%" y="751.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (63 samples, 0.02%)</title><rect x="77.7753%" y="741" width="0.0246%" height="15" fill="rgb(240,119,24)" fg:x="199314" fg:w="63"/><text x="78.0253%" y="751.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (32 samples, 0.01%)</title><rect x="77.7999%" y="741" width="0.0125%" height="15" fill="rgb(209,194,42)" fg:x="199377" fg:w="32"/><text x="78.0499%" y="751.50"></text></g><g><title>sudoku-solver`__rdl_alloc (87 samples, 0.03%)</title><rect x="77.8124%" y="741" width="0.0339%" height="15" fill="rgb(247,200,46)" fg:x="199409" fg:w="87"/><text x="78.0624%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (127 samples, 0.05%)</title><rect x="78.0937%" y="709" width="0.0496%" height="15" fill="rgb(218,76,16)" fg:x="200130" fg:w="127"/><text x="78.3437%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (1,101 samples, 0.43%)</title><rect x="78.4274%" y="677" width="0.4296%" height="15" fill="rgb(225,21,48)" fg:x="200985" fg:w="1101"/><text x="78.6774%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,902 samples, 0.74%)</title><rect x="78.2022%" y="693" width="0.7422%" height="15" fill="rgb(239,223,50)" fg:x="200408" fg:w="1902"/><text x="78.4522%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (224 samples, 0.09%)</title><rect x="78.8570%" y="677" width="0.0874%" height="15" fill="rgb(244,45,21)" fg:x="202086" fg:w="224"/><text x="79.1070%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2,145 samples, 0.84%)</title><rect x="78.1433%" y="709" width="0.8370%" height="15" fill="rgb(232,33,43)" fg:x="200257" fg:w="2145"/><text x="78.3933%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (92 samples, 0.04%)</title><rect x="78.9444%" y="693" width="0.0359%" height="15" fill="rgb(209,8,3)" fg:x="202310" fg:w="92"/><text x="79.1944%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,787 samples, 1.09%)</title><rect x="77.9119%" y="725" width="1.0875%" height="15" fill="rgb(214,25,53)" fg:x="199664" fg:w="2787"/><text x="78.1619%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (44 samples, 0.02%)</title><rect x="78.9822%" y="709" width="0.0172%" height="15" fill="rgb(254,186,54)" fg:x="202407" fg:w="44"/><text x="79.2322%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (40 samples, 0.02%)</title><rect x="78.9838%" y="693" width="0.0156%" height="15" fill="rgb(208,174,49)" fg:x="202411" fg:w="40"/><text x="79.2338%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (26 samples, 0.01%)</title><rect x="78.9893%" y="677" width="0.0101%" height="15" fill="rgb(233,191,51)" fg:x="202425" fg:w="26"/><text x="79.2393%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (73 samples, 0.03%)</title><rect x="78.9994%" y="725" width="0.0285%" height="15" fill="rgb(222,134,10)" fg:x="202451" fg:w="73"/><text x="79.2494%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (58 samples, 0.02%)</title><rect x="79.0279%" y="725" width="0.0226%" height="15" fill="rgb(230,226,20)" fg:x="202524" fg:w="58"/><text x="79.2779%" y="735.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (182,493 samples, 71.21%)</title><rect x="7.8398%" y="773" width="71.2115%" height="15" fill="rgb(251,111,25)" fg:x="20091" fg:w="182493"/><text x="8.0898%" y="783.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (10,387 samples, 4.05%)</title><rect x="74.9981%" y="757" width="4.0532%" height="15" fill="rgb(224,40,46)" fg:x="192197" fg:w="10387"/><text x="75.2481%" y="767.50">sudo..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (3,088 samples, 1.20%)</title><rect x="77.8463%" y="741" width="1.2050%" height="15" fill="rgb(236,108,47)" fg:x="199496" fg:w="3088"/><text x="78.0963%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (104 samples, 0.04%)</title><rect x="79.0513%" y="773" width="0.0406%" height="15" fill="rgb(234,93,0)" fg:x="202584" fg:w="104"/><text x="79.3013%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.01%)</title><rect x="80.8982%" y="741" width="0.0101%" height="15" fill="rgb(224,213,32)" fg:x="207317" fg:w="26"/><text x="81.1482%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (109 samples, 0.04%)</title><rect x="81.0004%" y="709" width="0.0425%" height="15" fill="rgb(251,11,48)" fg:x="207579" fg:w="109"/><text x="81.2504%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (316 samples, 0.12%)</title><rect x="80.9243%" y="725" width="0.1233%" height="15" fill="rgb(236,173,5)" fg:x="207384" fg:w="316"/><text x="81.1743%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (639 samples, 0.25%)</title><rect x="80.8116%" y="757" width="0.2493%" height="15" fill="rgb(230,95,12)" fg:x="207095" fg:w="639"/><text x="81.0616%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (391 samples, 0.15%)</title><rect x="80.9083%" y="741" width="0.1526%" height="15" fill="rgb(232,209,1)" fg:x="207343" fg:w="391"/><text x="81.1583%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (34 samples, 0.01%)</title><rect x="81.0476%" y="725" width="0.0133%" height="15" fill="rgb(232,6,1)" fg:x="207700" fg:w="34"/><text x="81.2976%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (210 samples, 0.08%)</title><rect x="81.1280%" y="741" width="0.0819%" height="15" fill="rgb(210,224,50)" fg:x="207906" fg:w="210"/><text x="81.3780%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free (369 samples, 0.14%)</title><rect x="81.0691%" y="757" width="0.1440%" height="15" fill="rgb(228,127,35)" fg:x="207755" fg:w="369"/><text x="81.3191%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc (63 samples, 0.02%)</title><rect x="81.2131%" y="757" width="0.0246%" height="15" fill="rgb(245,102,45)" fg:x="208124" fg:w="63"/><text x="81.4631%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (85 samples, 0.03%)</title><rect x="81.2420%" y="757" width="0.0332%" height="15" fill="rgb(214,1,49)" fg:x="208198" fg:w="85"/><text x="81.4920%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (44 samples, 0.02%)</title><rect x="81.2794%" y="757" width="0.0172%" height="15" fill="rgb(226,163,40)" fg:x="208294" fg:w="44"/><text x="81.5294%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (430 samples, 0.17%)</title><rect x="81.2966%" y="757" width="0.1678%" height="15" fill="rgb(239,212,28)" fg:x="208338" fg:w="430"/><text x="81.5466%" y="767.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (53 samples, 0.02%)</title><rect x="81.4644%" y="757" width="0.0207%" height="15" fill="rgb(220,20,13)" fg:x="208768" fg:w="53"/><text x="81.7144%" y="767.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$memcpy (28 samples, 0.01%)</title><rect x="81.4851%" y="757" width="0.0109%" height="15" fill="rgb(210,164,35)" fg:x="208821" fg:w="28"/><text x="81.7351%" y="767.50"></text></g><g><title>sudoku-solver`__rdl_alloc (87 samples, 0.03%)</title><rect x="81.4960%" y="757" width="0.0339%" height="15" fill="rgb(248,109,41)" fg:x="208849" fg:w="87"/><text x="81.7460%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (100 samples, 0.04%)</title><rect x="81.7372%" y="725" width="0.0390%" height="15" fill="rgb(238,23,50)" fg:x="209467" fg:w="100"/><text x="81.9872%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (750 samples, 0.29%)</title><rect x="82.0286%" y="693" width="0.2927%" height="15" fill="rgb(211,48,49)" fg:x="210214" fg:w="750"/><text x="82.2786%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (1,430 samples, 0.56%)</title><rect x="81.8265%" y="709" width="0.5580%" height="15" fill="rgb(223,36,21)" fg:x="209696" fg:w="1430"/><text x="82.0765%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (162 samples, 0.06%)</title><rect x="82.3213%" y="693" width="0.0632%" height="15" fill="rgb(207,123,46)" fg:x="210964" fg:w="162"/><text x="82.5713%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1,634 samples, 0.64%)</title><rect x="81.7762%" y="725" width="0.6376%" height="15" fill="rgb(240,218,32)" fg:x="209567" fg:w="1634"/><text x="82.0262%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (75 samples, 0.03%)</title><rect x="82.3845%" y="709" width="0.0293%" height="15" fill="rgb(252,5,43)" fg:x="211126" fg:w="75"/><text x="82.6345%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (40 samples, 0.02%)</title><rect x="82.4200%" y="693" width="0.0156%" height="15" fill="rgb(252,84,19)" fg:x="211217" fg:w="40"/><text x="82.6700%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2,194 samples, 0.86%)</title><rect x="81.5799%" y="741" width="0.8561%" height="15" fill="rgb(243,152,39)" fg:x="209064" fg:w="2194"/><text x="81.8299%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (55 samples, 0.02%)</title><rect x="82.4146%" y="725" width="0.0215%" height="15" fill="rgb(234,160,15)" fg:x="211203" fg:w="55"/><text x="82.6646%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (53 samples, 0.02%)</title><rect x="82.4154%" y="709" width="0.0207%" height="15" fill="rgb(237,34,20)" fg:x="211205" fg:w="53"/><text x="82.6654%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (79 samples, 0.03%)</title><rect x="82.4360%" y="741" width="0.0308%" height="15" fill="rgb(229,97,13)" fg:x="211258" fg:w="79"/><text x="82.6860%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="82.4669%" y="741" width="0.0179%" height="15" fill="rgb(234,71,50)" fg:x="211337" fg:w="46"/><text x="82.7169%" y="751.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (194,757 samples, 76.00%)</title><rect x="6.4889%" y="789" width="75.9971%" height="15" fill="rgb(253,155,4)" fg:x="16629" fg:w="194757"/><text x="6.7389%" y="799.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (8,698 samples, 3.39%)</title><rect x="79.0919%" y="773" width="3.3941%" height="15" fill="rgb(222,185,37)" fg:x="202688" fg:w="8698"/><text x="79.3419%" y="783.50">sud..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (2,448 samples, 0.96%)</title><rect x="81.5307%" y="757" width="0.9552%" height="15" fill="rgb(251,177,13)" fg:x="208938" fg:w="2448"/><text x="81.7807%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (84 samples, 0.03%)</title><rect x="82.4860%" y="789" width="0.0328%" height="15" fill="rgb(250,179,40)" fg:x="211386" fg:w="84"/><text x="82.7360%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (81 samples, 0.03%)</title><rect x="83.7745%" y="725" width="0.0316%" height="15" fill="rgb(242,44,2)" fg:x="214688" fg:w="81"/><text x="84.0245%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (217 samples, 0.08%)</title><rect x="83.7257%" y="741" width="0.0847%" height="15" fill="rgb(216,177,13)" fg:x="214563" fg:w="217"/><text x="83.9757%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (410 samples, 0.16%)</title><rect x="83.6558%" y="773" width="0.1600%" height="15" fill="rgb(216,106,43)" fg:x="214384" fg:w="410"/><text x="83.9058%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (258 samples, 0.10%)</title><rect x="83.7152%" y="757" width="0.1007%" height="15" fill="rgb(216,183,2)" fg:x="214536" fg:w="258"/><text x="83.9652%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (131 samples, 0.05%)</title><rect x="83.8650%" y="757" width="0.0511%" height="15" fill="rgb(249,75,3)" fg:x="214920" fg:w="131"/><text x="84.1150%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free (242 samples, 0.09%)</title><rect x="83.8229%" y="773" width="0.0944%" height="15" fill="rgb(219,67,39)" fg:x="214812" fg:w="242"/><text x="84.0729%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`malloc (47 samples, 0.02%)</title><rect x="83.9173%" y="773" width="0.0183%" height="15" fill="rgb(253,228,2)" fg:x="215054" fg:w="47"/><text x="84.1673%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (66 samples, 0.03%)</title><rect x="83.9407%" y="773" width="0.0258%" height="15" fill="rgb(235,138,27)" fg:x="215114" fg:w="66"/><text x="84.1907%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (30 samples, 0.01%)</title><rect x="83.9684%" y="773" width="0.0117%" height="15" fill="rgb(236,97,51)" fg:x="215185" fg:w="30"/><text x="84.2184%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (270 samples, 0.11%)</title><rect x="83.9801%" y="773" width="0.1054%" height="15" fill="rgb(240,80,30)" fg:x="215215" fg:w="270"/><text x="84.2301%" y="783.50"></text></g><g><title>sudoku-solver`DYLD-STUB$$malloc (35 samples, 0.01%)</title><rect x="84.0855%" y="773" width="0.0137%" height="15" fill="rgb(230,178,19)" fg:x="215485" fg:w="35"/><text x="84.3355%" y="783.50"></text></g><g><title>sudoku-solver`__rdl_alloc (52 samples, 0.02%)</title><rect x="84.1026%" y="773" width="0.0203%" height="15" fill="rgb(210,190,27)" fg:x="215529" fg:w="52"/><text x="84.3526%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (67 samples, 0.03%)</title><rect x="84.2716%" y="741" width="0.0261%" height="15" fill="rgb(222,107,31)" fg:x="215962" fg:w="67"/><text x="84.5216%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (443 samples, 0.17%)</title><rect x="84.4562%" y="709" width="0.1729%" height="15" fill="rgb(216,127,34)" fg:x="216435" fg:w="443"/><text x="84.7062%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (869 samples, 0.34%)</title><rect x="84.3235%" y="725" width="0.3391%" height="15" fill="rgb(234,116,52)" fg:x="216095" fg:w="869"/><text x="84.5735%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (86 samples, 0.03%)</title><rect x="84.6290%" y="709" width="0.0336%" height="15" fill="rgb(222,124,15)" fg:x="216878" fg:w="86"/><text x="84.8790%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (973 samples, 0.38%)</title><rect x="84.2977%" y="741" width="0.3797%" height="15" fill="rgb(231,179,28)" fg:x="216029" fg:w="973"/><text x="84.5477%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (38 samples, 0.01%)</title><rect x="84.6626%" y="725" width="0.0148%" height="15" fill="rgb(226,93,45)" fg:x="216964" fg:w="38"/><text x="84.9126%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,361 samples, 0.53%)</title><rect x="84.1581%" y="757" width="0.5311%" height="15" fill="rgb(215,8,51)" fg:x="215671" fg:w="1361"/><text x="84.4081%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (29 samples, 0.01%)</title><rect x="84.6778%" y="741" width="0.0113%" height="15" fill="rgb(223,106,5)" fg:x="217003" fg:w="29"/><text x="84.9278%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (27 samples, 0.01%)</title><rect x="84.6786%" y="725" width="0.0105%" height="15" fill="rgb(250,191,5)" fg:x="217005" fg:w="27"/><text x="84.9286%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (40 samples, 0.02%)</title><rect x="84.6891%" y="757" width="0.0156%" height="15" fill="rgb(242,132,44)" fg:x="217032" fg:w="40"/><text x="84.9391%" y="767.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (202,878 samples, 79.17%)</title><rect x="5.5469%" y="805" width="79.1660%" height="15" fill="rgb(251,152,29)" fg:x="14215" fg:w="202878"/><text x="5.7969%" y="815.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (5,623 samples, 2.19%)</title><rect x="82.5188%" y="789" width="2.1942%" height="15" fill="rgb(218,179,5)" fg:x="211470" fg:w="5623"/><text x="82.7688%" y="799.50">s..</text></g><g><title>sudoku-solver`alloc::vec::from_elem (1,512 samples, 0.59%)</title><rect x="84.1229%" y="773" width="0.5900%" height="15" fill="rgb(227,67,19)" fg:x="215581" fg:w="1512"/><text x="84.3729%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (55 samples, 0.02%)</title><rect x="84.7129%" y="805" width="0.0215%" height="15" fill="rgb(233,119,31)" fg:x="217093" fg:w="55"/><text x="84.9629%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (71 samples, 0.03%)</title><rect x="85.6643%" y="741" width="0.0277%" height="15" fill="rgb(241,120,22)" fg:x="219531" fg:w="71"/><text x="85.9143%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (168 samples, 0.07%)</title><rect x="85.6292%" y="757" width="0.0656%" height="15" fill="rgb(224,102,30)" fg:x="219441" fg:w="168"/><text x="85.8792%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (319 samples, 0.12%)</title><rect x="85.5730%" y="789" width="0.1245%" height="15" fill="rgb(210,164,37)" fg:x="219297" fg:w="319"/><text x="85.8230%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (198 samples, 0.08%)</title><rect x="85.6202%" y="773" width="0.0773%" height="15" fill="rgb(226,191,16)" fg:x="219418" fg:w="198"/><text x="85.8702%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (87 samples, 0.03%)</title><rect x="85.7298%" y="773" width="0.0339%" height="15" fill="rgb(214,40,45)" fg:x="219699" fg:w="87"/><text x="85.9798%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (157 samples, 0.06%)</title><rect x="85.7029%" y="789" width="0.0613%" height="15" fill="rgb(244,29,26)" fg:x="219630" fg:w="157"/><text x="85.9529%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc (31 samples, 0.01%)</title><rect x="85.7642%" y="789" width="0.0121%" height="15" fill="rgb(216,16,5)" fg:x="219787" fg:w="31"/><text x="86.0142%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (45 samples, 0.02%)</title><rect x="85.7778%" y="789" width="0.0176%" height="15" fill="rgb(249,76,35)" fg:x="219822" fg:w="45"/><text x="86.0278%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (196 samples, 0.08%)</title><rect x="85.8040%" y="789" width="0.0765%" height="15" fill="rgb(207,11,44)" fg:x="219889" fg:w="196"/><text x="86.0540%" y="799.50"></text></g><g><title>sudoku-solver`__rdl_alloc (36 samples, 0.01%)</title><rect x="85.8933%" y="789" width="0.0140%" height="15" fill="rgb(228,190,49)" fg:x="220118" fg:w="36"/><text x="86.1433%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (35 samples, 0.01%)</title><rect x="85.9964%" y="757" width="0.0137%" height="15" fill="rgb(214,173,12)" fg:x="220382" fg:w="35"/><text x="86.2464%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (365 samples, 0.14%)</title><rect x="86.1080%" y="725" width="0.1424%" height="15" fill="rgb(218,26,35)" fg:x="220668" fg:w="365"/><text x="86.3580%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (635 samples, 0.25%)</title><rect x="86.0280%" y="741" width="0.2478%" height="15" fill="rgb(220,200,19)" fg:x="220463" fg:w="635"/><text x="86.2780%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (65 samples, 0.03%)</title><rect x="86.2504%" y="725" width="0.0254%" height="15" fill="rgb(239,95,49)" fg:x="221033" fg:w="65"/><text x="86.5004%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (714 samples, 0.28%)</title><rect x="86.0100%" y="757" width="0.2786%" height="15" fill="rgb(235,85,53)" fg:x="220417" fg:w="714"/><text x="86.2600%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.01%)</title><rect x="86.2757%" y="741" width="0.0129%" height="15" fill="rgb(233,133,31)" fg:x="221098" fg:w="33"/><text x="86.5257%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (933 samples, 0.36%)</title><rect x="85.9320%" y="773" width="0.3641%" height="15" fill="rgb(218,25,20)" fg:x="220217" fg:w="933"/><text x="86.1820%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (34 samples, 0.01%)</title><rect x="86.2960%" y="773" width="0.0133%" height="15" fill="rgb(252,210,38)" fg:x="221150" fg:w="34"/><text x="86.5460%" y="783.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (208,799 samples, 81.48%)</title><rect x="4.8410%" y="821" width="81.4765%" height="15" fill="rgb(242,134,21)" fg:x="12406" fg:w="208799"/><text x="5.0910%" y="831.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (4,057 samples, 1.58%)</title><rect x="84.7344%" y="805" width="1.5831%" height="15" fill="rgb(213,28,48)" fg:x="217148" fg:w="4057"/><text x="84.9844%" y="815.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (1,051 samples, 0.41%)</title><rect x="85.9074%" y="789" width="0.4101%" height="15" fill="rgb(250,196,2)" fg:x="220154" fg:w="1051"/><text x="86.1574%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (35 samples, 0.01%)</title><rect x="86.3175%" y="821" width="0.0137%" height="15" fill="rgb(227,5,17)" fg:x="221205" fg:w="35"/><text x="86.5675%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (82 samples, 0.03%)</title><rect x="86.8868%" y="773" width="0.0320%" height="15" fill="rgb(221,226,24)" fg:x="222664" fg:w="82"/><text x="87.1368%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.01%)</title><rect x="86.9075%" y="757" width="0.0113%" height="15" fill="rgb(211,5,48)" fg:x="222717" fg:w="29"/><text x="87.1575%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (177 samples, 0.07%)</title><rect x="86.8537%" y="805" width="0.0691%" height="15" fill="rgb(219,150,6)" fg:x="222579" fg:w="177"/><text x="87.1037%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (104 samples, 0.04%)</title><rect x="86.8821%" y="789" width="0.0406%" height="15" fill="rgb(251,46,16)" fg:x="222652" fg:w="104"/><text x="87.1321%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (50 samples, 0.02%)</title><rect x="86.9434%" y="789" width="0.0195%" height="15" fill="rgb(220,204,40)" fg:x="222809" fg:w="50"/><text x="87.1934%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (98 samples, 0.04%)</title><rect x="86.9251%" y="805" width="0.0382%" height="15" fill="rgb(211,85,2)" fg:x="222762" fg:w="98"/><text x="87.1751%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (29 samples, 0.01%)</title><rect x="86.9699%" y="805" width="0.0113%" height="15" fill="rgb(229,17,7)" fg:x="222877" fg:w="29"/><text x="87.2199%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (117 samples, 0.05%)</title><rect x="86.9887%" y="805" width="0.0457%" height="15" fill="rgb(239,72,28)" fg:x="222925" fg:w="117"/><text x="87.2387%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.01%)</title><rect x="87.1038%" y="773" width="0.0109%" height="15" fill="rgb(230,47,54)" fg:x="223220" fg:w="28"/><text x="87.3538%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (222 samples, 0.09%)</title><rect x="87.1857%" y="741" width="0.0866%" height="15" fill="rgb(214,50,8)" fg:x="223430" fg:w="222"/><text x="87.4357%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (411 samples, 0.16%)</title><rect x="87.1303%" y="757" width="0.1604%" height="15" fill="rgb(216,198,43)" fg:x="223288" fg:w="411"/><text x="87.3803%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (47 samples, 0.02%)</title><rect x="87.2724%" y="741" width="0.0183%" height="15" fill="rgb(234,20,35)" fg:x="223652" fg:w="47"/><text x="87.5224%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (461 samples, 0.18%)</title><rect x="87.1147%" y="773" width="0.1799%" height="15" fill="rgb(254,45,19)" fg:x="223248" fg:w="461"/><text x="87.3647%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (614 samples, 0.24%)</title><rect x="87.0616%" y="789" width="0.2396%" height="15" fill="rgb(219,14,44)" fg:x="223112" fg:w="614"/><text x="87.3116%" y="799.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (212,480 samples, 82.91%)</title><rect x="4.3962%" y="837" width="82.9129%" height="15" fill="rgb(217,220,26)" fg:x="11266" fg:w="212480"/><text x="4.6462%" y="847.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,506 samples, 0.98%)</title><rect x="86.3312%" y="821" width="0.9779%" height="15" fill="rgb(213,158,28)" fg:x="221240" fg:w="2506"/><text x="86.5812%" y="831.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (670 samples, 0.26%)</title><rect x="87.0476%" y="805" width="0.2614%" height="15" fill="rgb(252,51,52)" fg:x="223076" fg:w="670"/><text x="87.2976%" y="815.50"></text></g><g><title>sudoku-solver`sudoku_solver::check_sudoku (28 samples, 0.01%)</title><rect x="87.3090%" y="837" width="0.0109%" height="15" fill="rgb(246,89,16)" fg:x="223746" fg:w="28"/><text x="87.5590%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (50 samples, 0.02%)</title><rect x="87.5615%" y="789" width="0.0195%" height="15" fill="rgb(216,158,49)" fg:x="224393" fg:w="50"/><text x="87.8115%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (100 samples, 0.04%)</title><rect x="87.5432%" y="821" width="0.0390%" height="15" fill="rgb(236,107,19)" fg:x="224346" fg:w="100"/><text x="87.7932%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (63 samples, 0.02%)</title><rect x="87.5576%" y="805" width="0.0246%" height="15" fill="rgb(228,185,30)" fg:x="224383" fg:w="63"/><text x="87.8076%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`free (58 samples, 0.02%)</title><rect x="87.5837%" y="821" width="0.0226%" height="15" fill="rgb(246,134,8)" fg:x="224450" fg:w="58"/><text x="87.8337%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (30 samples, 0.01%)</title><rect x="87.5947%" y="805" width="0.0117%" height="15" fill="rgb(214,143,50)" fg:x="224478" fg:w="30"/><text x="87.8447%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (51 samples, 0.02%)</title><rect x="87.6177%" y="821" width="0.0199%" height="15" fill="rgb(228,75,8)" fg:x="224537" fg:w="51"/><text x="87.8677%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (134 samples, 0.05%)</title><rect x="87.7277%" y="757" width="0.0523%" height="15" fill="rgb(207,175,4)" fg:x="224819" fg:w="134"/><text x="87.9777%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (282 samples, 0.11%)</title><rect x="87.6868%" y="773" width="0.1100%" height="15" fill="rgb(205,108,24)" fg:x="224714" fg:w="282"/><text x="87.9368%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (43 samples, 0.02%)</title><rect x="87.7800%" y="757" width="0.0168%" height="15" fill="rgb(244,120,49)" fg:x="224953" fg:w="43"/><text x="88.0300%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (306 samples, 0.12%)</title><rect x="87.6797%" y="789" width="0.1194%" height="15" fill="rgb(223,47,38)" fg:x="224696" fg:w="306"/><text x="87.9297%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (389 samples, 0.15%)</title><rect x="87.6516%" y="805" width="0.1518%" height="15" fill="rgb(229,179,11)" fg:x="224624" fg:w="389"/><text x="87.9016%" y="815.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (214,416 samples, 83.67%)</title><rect x="4.1417%" y="853" width="83.6683%" height="15" fill="rgb(231,122,1)" fg:x="10614" fg:w="214416"/><text x="4.3917%" y="863.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,256 samples, 0.49%)</title><rect x="87.3200%" y="837" width="0.4901%" height="15" fill="rgb(245,119,9)" fg:x="223774" fg:w="1256"/><text x="87.5700%" y="847.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (424 samples, 0.17%)</title><rect x="87.6446%" y="821" width="0.1655%" height="15" fill="rgb(241,163,25)" fg:x="224606" fg:w="424"/><text x="87.8946%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (61 samples, 0.02%)</title><rect x="88.1464%" y="805" width="0.0238%" height="15" fill="rgb(217,214,3)" fg:x="225892" fg:w="61"/><text x="88.3964%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (110 samples, 0.04%)</title><rect x="88.1285%" y="837" width="0.0429%" height="15" fill="rgb(240,86,28)" fg:x="225846" fg:w="110"/><text x="88.3785%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (76 samples, 0.03%)</title><rect x="88.1418%" y="821" width="0.0297%" height="15" fill="rgb(215,47,9)" fg:x="225880" fg:w="76"/><text x="88.3918%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (45 samples, 0.02%)</title><rect x="88.1890%" y="821" width="0.0176%" height="15" fill="rgb(252,25,45)" fg:x="226001" fg:w="45"/><text x="88.4390%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (83 samples, 0.03%)</title><rect x="88.1745%" y="837" width="0.0324%" height="15" fill="rgb(251,164,9)" fg:x="225964" fg:w="83"/><text x="88.4245%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (68 samples, 0.03%)</title><rect x="88.2221%" y="837" width="0.0265%" height="15" fill="rgb(233,194,0)" fg:x="226086" fg:w="68"/><text x="88.4721%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (164 samples, 0.06%)</title><rect x="88.3373%" y="773" width="0.0640%" height="15" fill="rgb(249,111,24)" fg:x="226381" fg:w="164"/><text x="88.5873%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (297 samples, 0.12%)</title><rect x="88.3041%" y="789" width="0.1159%" height="15" fill="rgb(250,223,3)" fg:x="226296" fg:w="297"/><text x="88.5541%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (48 samples, 0.02%)</title><rect x="88.4013%" y="773" width="0.0187%" height="15" fill="rgb(236,178,37)" fg:x="226545" fg:w="48"/><text x="88.6513%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (326 samples, 0.13%)</title><rect x="88.2971%" y="805" width="0.1272%" height="15" fill="rgb(241,158,50)" fg:x="226278" fg:w="326"/><text x="88.5471%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (416 samples, 0.16%)</title><rect x="88.2655%" y="821" width="0.1623%" height="15" fill="rgb(213,121,41)" fg:x="226197" fg:w="416"/><text x="88.5155%" y="831.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (216,617 samples, 84.53%)</title><rect x="3.9049%" y="869" width="84.5272%" height="15" fill="rgb(240,92,3)" fg:x="10007" fg:w="216617"/><text x="4.1549%" y="879.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,586 samples, 0.62%)</title><rect x="87.8132%" y="853" width="0.6189%" height="15" fill="rgb(205,123,3)" fg:x="225038" fg:w="1586"/><text x="88.0632%" y="863.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (448 samples, 0.17%)</title><rect x="88.2573%" y="837" width="0.1748%" height="15" fill="rgb(205,97,47)" fg:x="226176" fg:w="448"/><text x="88.5073%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (62 samples, 0.02%)</title><rect x="88.7528%" y="821" width="0.0242%" height="15" fill="rgb(247,152,14)" fg:x="227446" fg:w="62"/><text x="89.0028%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (115 samples, 0.04%)</title><rect x="88.7349%" y="853" width="0.0449%" height="15" fill="rgb(248,195,53)" fg:x="227400" fg:w="115"/><text x="88.9849%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (80 samples, 0.03%)</title><rect x="88.7485%" y="837" width="0.0312%" height="15" fill="rgb(226,201,16)" fg:x="227435" fg:w="80"/><text x="88.9985%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.03%)</title><rect x="88.7809%" y="853" width="0.0254%" height="15" fill="rgb(205,98,0)" fg:x="227518" fg:w="65"/><text x="89.0309%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (39 samples, 0.02%)</title><rect x="88.7911%" y="837" width="0.0152%" height="15" fill="rgb(214,191,48)" fg:x="227544" fg:w="39"/><text x="89.0411%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (62 samples, 0.02%)</title><rect x="88.8239%" y="853" width="0.0242%" height="15" fill="rgb(237,112,39)" fg:x="227628" fg:w="62"/><text x="89.0739%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (154 samples, 0.06%)</title><rect x="88.9366%" y="789" width="0.0601%" height="15" fill="rgb(247,203,27)" fg:x="227917" fg:w="154"/><text x="89.1866%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (267 samples, 0.10%)</title><rect x="88.9054%" y="805" width="0.1042%" height="15" fill="rgb(235,124,28)" fg:x="227837" fg:w="267"/><text x="89.1554%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.01%)</title><rect x="88.9967%" y="789" width="0.0129%" height="15" fill="rgb(208,207,46)" fg:x="228071" fg:w="33"/><text x="89.2467%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (297 samples, 0.12%)</title><rect x="88.8984%" y="821" width="0.1159%" height="15" fill="rgb(234,176,4)" fg:x="227819" fg:w="297"/><text x="89.1484%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (380 samples, 0.15%)</title><rect x="88.8691%" y="837" width="0.1483%" height="15" fill="rgb(230,133,28)" fg:x="227744" fg:w="380"/><text x="89.1191%" y="847.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (218,738 samples, 85.35%)</title><rect x="3.6704%" y="885" width="85.3548%" height="15" fill="rgb(211,137,40)" fg:x="9406" fg:w="218738"/><text x="3.9204%" y="895.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,510 samples, 0.59%)</title><rect x="88.4360%" y="869" width="0.5892%" height="15" fill="rgb(254,35,13)" fg:x="226634" fg:w="1510"/><text x="88.6860%" y="879.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (436 samples, 0.17%)</title><rect x="88.8551%" y="853" width="0.1701%" height="15" fill="rgb(225,49,51)" fg:x="227708" fg:w="436"/><text x="89.1051%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (54 samples, 0.02%)</title><rect x="89.3120%" y="837" width="0.0211%" height="15" fill="rgb(251,10,15)" fg:x="228879" fg:w="54"/><text x="89.5620%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (105 samples, 0.04%)</title><rect x="89.2941%" y="869" width="0.0410%" height="15" fill="rgb(228,207,15)" fg:x="228833" fg:w="105"/><text x="89.5441%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (70 samples, 0.03%)</title><rect x="89.3077%" y="853" width="0.0273%" height="15" fill="rgb(241,99,19)" fg:x="228868" fg:w="70"/><text x="89.5577%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (32 samples, 0.01%)</title><rect x="89.3456%" y="853" width="0.0125%" height="15" fill="rgb(207,104,49)" fg:x="228965" fg:w="32"/><text x="89.5956%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`free (58 samples, 0.02%)</title><rect x="89.3366%" y="869" width="0.0226%" height="15" fill="rgb(234,99,18)" fg:x="228942" fg:w="58"/><text x="89.5866%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (54 samples, 0.02%)</title><rect x="89.3682%" y="869" width="0.0211%" height="15" fill="rgb(213,191,49)" fg:x="229023" fg:w="54"/><text x="89.6182%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (154 samples, 0.06%)</title><rect x="89.4587%" y="805" width="0.0601%" height="15" fill="rgb(210,226,19)" fg:x="229255" fg:w="154"/><text x="89.7087%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (259 samples, 0.10%)</title><rect x="89.4330%" y="821" width="0.1011%" height="15" fill="rgb(229,97,18)" fg:x="229189" fg:w="259"/><text x="89.6830%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (39 samples, 0.02%)</title><rect x="89.5188%" y="805" width="0.0152%" height="15" fill="rgb(211,167,15)" fg:x="229409" fg:w="39"/><text x="89.7688%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (280 samples, 0.11%)</title><rect x="89.4283%" y="837" width="0.1093%" height="15" fill="rgb(210,169,34)" fg:x="229177" fg:w="280"/><text x="89.6783%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (347 samples, 0.14%)</title><rect x="89.4053%" y="853" width="0.1354%" height="15" fill="rgb(241,121,31)" fg:x="229118" fg:w="347"/><text x="89.6553%" y="863.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (220,560 samples, 86.07%)</title><rect x="3.4815%" y="901" width="86.0658%" height="15" fill="rgb(232,40,11)" fg:x="8922" fg:w="220560"/><text x="3.7315%" y="911.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,325 samples, 0.52%)</title><rect x="89.0303%" y="885" width="0.5170%" height="15" fill="rgb(205,86,26)" fg:x="228157" fg:w="1325"/><text x="89.2803%" y="895.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (379 samples, 0.15%)</title><rect x="89.3994%" y="869" width="0.1479%" height="15" fill="rgb(231,126,28)" fg:x="229103" fg:w="379"/><text x="89.6494%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (67 samples, 0.03%)</title><rect x="89.9375%" y="853" width="0.0261%" height="15" fill="rgb(219,221,18)" fg:x="230482" fg:w="67"/><text x="90.1875%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (123 samples, 0.05%)</title><rect x="89.9165%" y="885" width="0.0480%" height="15" fill="rgb(211,40,0)" fg:x="230428" fg:w="123"/><text x="90.1665%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (79 samples, 0.03%)</title><rect x="89.9336%" y="869" width="0.0308%" height="15" fill="rgb(239,85,43)" fg:x="230472" fg:w="79"/><text x="90.1836%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (62 samples, 0.02%)</title><rect x="89.9656%" y="885" width="0.0242%" height="15" fill="rgb(231,55,21)" fg:x="230554" fg:w="62"/><text x="90.2156%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (27 samples, 0.01%)</title><rect x="89.9793%" y="869" width="0.0105%" height="15" fill="rgb(225,184,43)" fg:x="230589" fg:w="27"/><text x="90.2293%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (29 samples, 0.01%)</title><rect x="89.9968%" y="885" width="0.0113%" height="15" fill="rgb(251,158,41)" fg:x="230634" fg:w="29"/><text x="90.2468%" y="895.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.03%)</title><rect x="90.0132%" y="885" width="0.0300%" height="15" fill="rgb(234,159,37)" fg:x="230676" fg:w="77"/><text x="90.2632%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (183 samples, 0.07%)</title><rect x="90.1397%" y="821" width="0.0714%" height="15" fill="rgb(216,204,22)" fg:x="231000" fg:w="183"/><text x="90.3897%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (310 samples, 0.12%)</title><rect x="90.1049%" y="837" width="0.1210%" height="15" fill="rgb(214,17,3)" fg:x="230911" fg:w="310"/><text x="90.3549%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (38 samples, 0.01%)</title><rect x="90.2111%" y="821" width="0.0148%" height="15" fill="rgb(212,111,17)" fg:x="231183" fg:w="38"/><text x="90.4611%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (351 samples, 0.14%)</title><rect x="90.0932%" y="853" width="0.1370%" height="15" fill="rgb(221,157,24)" fg:x="230881" fg:w="351"/><text x="90.3432%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (445 samples, 0.17%)</title><rect x="90.0604%" y="869" width="0.1736%" height="15" fill="rgb(252,16,13)" fg:x="230797" fg:w="445"/><text x="90.3104%" y="879.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (222,941 samples, 86.99%)</title><rect x="3.2470%" y="917" width="86.9949%" height="15" fill="rgb(221,62,2)" fg:x="8321" fg:w="222941"/><text x="3.4970%" y="927.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,764 samples, 0.69%)</title><rect x="89.5536%" y="901" width="0.6883%" height="15" fill="rgb(247,87,22)" fg:x="229498" fg:w="1764"/><text x="89.8036%" y="911.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (492 samples, 0.19%)</title><rect x="90.0499%" y="885" width="0.1920%" height="15" fill="rgb(215,73,9)" fg:x="230770" fg:w="492"/><text x="90.2999%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (29 samples, 0.01%)</title><rect x="90.6352%" y="853" width="0.0113%" height="15" fill="rgb(207,175,33)" fg:x="232270" fg:w="29"/><text x="90.8852%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (62 samples, 0.02%)</title><rect x="90.6227%" y="869" width="0.0242%" height="15" fill="rgb(243,129,54)" fg:x="232238" fg:w="62"/><text x="90.8727%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (118 samples, 0.05%)</title><rect x="90.6036%" y="901" width="0.0460%" height="15" fill="rgb(227,119,45)" fg:x="232189" fg:w="118"/><text x="90.8536%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (79 samples, 0.03%)</title><rect x="90.6188%" y="885" width="0.0308%" height="15" fill="rgb(205,109,36)" fg:x="232228" fg:w="79"/><text x="90.8688%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (44 samples, 0.02%)</title><rect x="90.6629%" y="885" width="0.0172%" height="15" fill="rgb(205,6,39)" fg:x="232341" fg:w="44"/><text x="90.9129%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`free (79 samples, 0.03%)</title><rect x="90.6501%" y="901" width="0.0308%" height="15" fill="rgb(221,32,16)" fg:x="232308" fg:w="79"/><text x="90.9001%" y="911.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (64 samples, 0.02%)</title><rect x="90.6973%" y="901" width="0.0250%" height="15" fill="rgb(228,144,50)" fg:x="232429" fg:w="64"/><text x="90.9473%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (158 samples, 0.06%)</title><rect x="90.8179%" y="837" width="0.0617%" height="15" fill="rgb(229,201,53)" fg:x="232738" fg:w="158"/><text x="91.0679%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (277 samples, 0.11%)</title><rect x="90.7820%" y="853" width="0.1081%" height="15" fill="rgb(249,153,27)" fg:x="232646" fg:w="277"/><text x="91.0320%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (27 samples, 0.01%)</title><rect x="90.8795%" y="837" width="0.0105%" height="15" fill="rgb(227,106,25)" fg:x="232896" fg:w="27"/><text x="91.1295%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (313 samples, 0.12%)</title><rect x="90.7726%" y="869" width="0.1221%" height="15" fill="rgb(230,65,29)" fg:x="232622" fg:w="313"/><text x="91.0226%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (398 samples, 0.16%)</title><rect x="90.7402%" y="885" width="0.1553%" height="15" fill="rgb(221,57,46)" fg:x="232539" fg:w="398"/><text x="90.9902%" y="895.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (225,191 samples, 87.87%)</title><rect x="3.0300%" y="933" width="87.8729%" height="15" fill="rgb(229,161,17)" fg:x="7765" fg:w="225191"/><text x="3.2800%" y="943.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,675 samples, 0.65%)</title><rect x="90.2493%" y="917" width="0.6536%" height="15" fill="rgb(222,213,11)" fg:x="231281" fg:w="1675"/><text x="90.4993%" y="927.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (438 samples, 0.17%)</title><rect x="90.7320%" y="901" width="0.1709%" height="15" fill="rgb(235,35,13)" fg:x="232518" fg:w="438"/><text x="90.9820%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (87 samples, 0.03%)</title><rect x="91.1714%" y="917" width="0.0339%" height="15" fill="rgb(233,158,34)" fg:x="233644" fg:w="87"/><text x="91.4214%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (58 samples, 0.02%)</title><rect x="91.1827%" y="901" width="0.0226%" height="15" fill="rgb(215,151,48)" fg:x="233673" fg:w="58"/><text x="91.4327%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (48 samples, 0.02%)</title><rect x="91.1866%" y="885" width="0.0187%" height="15" fill="rgb(229,84,14)" fg:x="233683" fg:w="48"/><text x="91.4366%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (38 samples, 0.01%)</title><rect x="91.2170%" y="901" width="0.0148%" height="15" fill="rgb(229,68,14)" fg:x="233761" fg:w="38"/><text x="91.4670%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`free (65 samples, 0.03%)</title><rect x="91.2073%" y="917" width="0.0254%" height="15" fill="rgb(243,106,26)" fg:x="233736" fg:w="65"/><text x="91.4573%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (49 samples, 0.02%)</title><rect x="91.2428%" y="917" width="0.0191%" height="15" fill="rgb(206,45,38)" fg:x="233827" fg:w="49"/><text x="91.4928%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (146 samples, 0.06%)</title><rect x="91.3310%" y="853" width="0.0570%" height="15" fill="rgb(226,6,15)" fg:x="234053" fg:w="146"/><text x="91.5810%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (243 samples, 0.09%)</title><rect x="91.3056%" y="869" width="0.0948%" height="15" fill="rgb(232,22,54)" fg:x="233988" fg:w="243"/><text x="91.5556%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (32 samples, 0.01%)</title><rect x="91.3880%" y="853" width="0.0125%" height="15" fill="rgb(229,222,32)" fg:x="234199" fg:w="32"/><text x="91.6380%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (267 samples, 0.10%)</title><rect x="91.2994%" y="885" width="0.1042%" height="15" fill="rgb(228,62,29)" fg:x="233972" fg:w="267"/><text x="91.5494%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (327 samples, 0.13%)</title><rect x="91.2783%" y="901" width="0.1276%" height="15" fill="rgb(251,103,34)" fg:x="233918" fg:w="327"/><text x="91.5283%" y="911.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (226,950 samples, 88.56%)</title><rect x="2.8509%" y="949" width="88.5593%" height="15" fill="rgb(233,12,30)" fg:x="7306" fg:w="226950"/><text x="3.1009%" y="959.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,291 samples, 0.50%)</title><rect x="90.9064%" y="933" width="0.5038%" height="15" fill="rgb(238,52,0)" fg:x="232965" fg:w="1291"/><text x="91.1564%" y="943.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (354 samples, 0.14%)</title><rect x="91.2721%" y="917" width="0.1381%" height="15" fill="rgb(223,98,5)" fg:x="233902" fg:w="354"/><text x="91.5221%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (71 samples, 0.03%)</title><rect x="91.8067%" y="901" width="0.0277%" height="15" fill="rgb(228,75,37)" fg:x="235272" fg:w="71"/><text x="92.0567%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (139 samples, 0.05%)</title><rect x="91.7821%" y="933" width="0.0542%" height="15" fill="rgb(205,115,49)" fg:x="235209" fg:w="139"/><text x="92.0321%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (91 samples, 0.04%)</title><rect x="91.8008%" y="917" width="0.0355%" height="15" fill="rgb(250,154,43)" fg:x="235257" fg:w="91"/><text x="92.0508%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (39 samples, 0.02%)</title><rect x="91.8511%" y="917" width="0.0152%" height="15" fill="rgb(226,43,29)" fg:x="235386" fg:w="39"/><text x="92.1011%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`free (76 samples, 0.03%)</title><rect x="91.8371%" y="933" width="0.0297%" height="15" fill="rgb(249,228,39)" fg:x="235350" fg:w="76"/><text x="92.0871%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (78 samples, 0.03%)</title><rect x="91.8812%" y="933" width="0.0304%" height="15" fill="rgb(216,79,43)" fg:x="235463" fg:w="78"/><text x="92.1312%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (137 samples, 0.05%)</title><rect x="92.0107%" y="869" width="0.0535%" height="15" fill="rgb(228,95,12)" fg:x="235795" fg:w="137"/><text x="92.2607%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (257 samples, 0.10%)</title><rect x="91.9764%" y="885" width="0.1003%" height="15" fill="rgb(249,221,15)" fg:x="235707" fg:w="257"/><text x="92.2264%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (32 samples, 0.01%)</title><rect x="92.0642%" y="869" width="0.0125%" height="15" fill="rgb(233,34,13)" fg:x="235932" fg:w="32"/><text x="92.3142%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (291 samples, 0.11%)</title><rect x="91.9682%" y="901" width="0.1136%" height="15" fill="rgb(214,103,39)" fg:x="235686" fg:w="291"/><text x="92.2182%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (392 samples, 0.15%)</title><rect x="91.9315%" y="917" width="0.1530%" height="15" fill="rgb(251,126,39)" fg:x="235592" fg:w="392"/><text x="92.1815%" y="927.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (229,271 samples, 89.46%)</title><rect x="2.6250%" y="965" width="89.4650%" height="15" fill="rgb(214,216,36)" fg:x="6727" fg:w="229271"/><text x="2.8750%" y="975.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,733 samples, 0.68%)</title><rect x="91.4137%" y="949" width="0.6762%" height="15" fill="rgb(220,221,8)" fg:x="234265" fg:w="1733"/><text x="91.6637%" y="959.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (431 samples, 0.17%)</title><rect x="91.9218%" y="933" width="0.1682%" height="15" fill="rgb(240,216,3)" fg:x="235567" fg:w="431"/><text x="92.1718%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (43 samples, 0.02%)</title><rect x="92.4244%" y="917" width="0.0168%" height="15" fill="rgb(232,218,17)" fg:x="236855" fg:w="43"/><text x="92.6744%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (92 samples, 0.04%)</title><rect x="92.4072%" y="949" width="0.0359%" height="15" fill="rgb(229,163,45)" fg:x="236811" fg:w="92"/><text x="92.6572%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (60 samples, 0.02%)</title><rect x="92.4197%" y="933" width="0.0234%" height="15" fill="rgb(231,110,42)" fg:x="236843" fg:w="60"/><text x="92.6697%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`free (74 samples, 0.03%)</title><rect x="92.4450%" y="949" width="0.0289%" height="15" fill="rgb(208,170,48)" fg:x="236908" fg:w="74"/><text x="92.6950%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (42 samples, 0.02%)</title><rect x="92.4575%" y="933" width="0.0164%" height="15" fill="rgb(239,116,25)" fg:x="236940" fg:w="42"/><text x="92.7075%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (45 samples, 0.02%)</title><rect x="92.4864%" y="949" width="0.0176%" height="15" fill="rgb(219,200,50)" fg:x="237014" fg:w="45"/><text x="92.7364%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (122 samples, 0.05%)</title><rect x="92.5859%" y="885" width="0.0476%" height="15" fill="rgb(245,200,0)" fg:x="237269" fg:w="122"/><text x="92.8359%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (222 samples, 0.09%)</title><rect x="92.5570%" y="901" width="0.0866%" height="15" fill="rgb(245,119,33)" fg:x="237195" fg:w="222"/><text x="92.8070%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (26 samples, 0.01%)</title><rect x="92.6335%" y="885" width="0.0101%" height="15" fill="rgb(231,125,12)" fg:x="237391" fg:w="26"/><text x="92.8835%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (264 samples, 0.10%)</title><rect x="92.5465%" y="917" width="0.1030%" height="15" fill="rgb(216,96,41)" fg:x="237168" fg:w="264"/><text x="92.7965%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (342 samples, 0.13%)</title><rect x="92.5176%" y="933" width="0.1335%" height="15" fill="rgb(248,43,45)" fg:x="237094" fg:w="342"/><text x="92.7676%" y="943.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (231,294 samples, 90.25%)</title><rect x="2.4049%" y="981" width="90.2544%" height="15" fill="rgb(217,222,7)" fg:x="6163" fg:w="231294"/><text x="2.6549%" y="991.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,444 samples, 0.56%)</title><rect x="92.0958%" y="965" width="0.5635%" height="15" fill="rgb(233,28,6)" fg:x="236013" fg:w="1444"/><text x="92.3458%" y="975.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (378 samples, 0.15%)</title><rect x="92.5118%" y="949" width="0.1475%" height="15" fill="rgb(231,218,15)" fg:x="237079" fg:w="378"/><text x="92.7618%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.01%)</title><rect x="92.8329%" y="933" width="0.0113%" height="15" fill="rgb(226,171,48)" fg:x="237902" fg:w="29"/><text x="93.0829%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (55 samples, 0.02%)</title><rect x="92.8247%" y="965" width="0.0215%" height="15" fill="rgb(235,201,9)" fg:x="237881" fg:w="55"/><text x="93.0747%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (38 samples, 0.01%)</title><rect x="92.8314%" y="949" width="0.0148%" height="15" fill="rgb(217,80,15)" fg:x="237898" fg:w="38"/><text x="93.0814%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.01%)</title><rect x="92.8470%" y="965" width="0.0117%" height="15" fill="rgb(219,152,8)" fg:x="237938" fg:w="30"/><text x="93.0970%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (26 samples, 0.01%)</title><rect x="92.8653%" y="965" width="0.0101%" height="15" fill="rgb(243,107,38)" fg:x="237985" fg:w="26"/><text x="93.1153%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (85 samples, 0.03%)</title><rect x="92.9281%" y="901" width="0.0332%" height="15" fill="rgb(231,17,5)" fg:x="238146" fg:w="85"/><text x="93.1781%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (159 samples, 0.06%)</title><rect x="92.9121%" y="917" width="0.0620%" height="15" fill="rgb(209,25,54)" fg:x="238105" fg:w="159"/><text x="93.1621%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.01%)</title><rect x="92.9613%" y="901" width="0.0129%" height="15" fill="rgb(219,0,2)" fg:x="238231" fg:w="33"/><text x="93.2113%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (185 samples, 0.07%)</title><rect x="92.9047%" y="933" width="0.0722%" height="15" fill="rgb(246,9,5)" fg:x="238086" fg:w="185"/><text x="93.1547%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (236 samples, 0.09%)</title><rect x="92.8860%" y="949" width="0.0921%" height="15" fill="rgb(226,159,4)" fg:x="238038" fg:w="236"/><text x="93.1360%" y="959.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (232,482 samples, 90.72%)</title><rect x="2.2625%" y="997" width="90.7180%" height="15" fill="rgb(219,175,34)" fg:x="5798" fg:w="232482"/><text x="2.5125%" y="1007.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (810 samples, 0.32%)</title><rect x="92.6643%" y="981" width="0.3161%" height="15" fill="rgb(236,10,46)" fg:x="237470" fg:w="810"/><text x="92.9143%" y="991.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (253 samples, 0.10%)</title><rect x="92.8817%" y="965" width="0.0987%" height="15" fill="rgb(240,211,16)" fg:x="238027" fg:w="253"/><text x="93.1317%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (67 samples, 0.03%)</title><rect x="93.3722%" y="949" width="0.0261%" height="15" fill="rgb(205,3,43)" fg:x="239284" fg:w="67"/><text x="93.6222%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (133 samples, 0.05%)</title><rect x="93.3484%" y="981" width="0.0519%" height="15" fill="rgb(245,7,22)" fg:x="239223" fg:w="133"/><text x="93.5984%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (75 samples, 0.03%)</title><rect x="93.3710%" y="965" width="0.0293%" height="15" fill="rgb(239,132,32)" fg:x="239281" fg:w="75"/><text x="93.6210%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`free (73 samples, 0.03%)</title><rect x="93.4026%" y="981" width="0.0285%" height="15" fill="rgb(228,202,34)" fg:x="239362" fg:w="73"/><text x="93.6526%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (41 samples, 0.02%)</title><rect x="93.4151%" y="965" width="0.0160%" height="15" fill="rgb(254,200,22)" fg:x="239394" fg:w="41"/><text x="93.6651%" y="975.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (88 samples, 0.03%)</title><rect x="93.4487%" y="981" width="0.0343%" height="15" fill="rgb(219,10,39)" fg:x="239480" fg:w="88"/><text x="93.6987%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (191 samples, 0.07%)</title><rect x="93.5806%" y="917" width="0.0745%" height="15" fill="rgb(226,210,39)" fg:x="239818" fg:w="191"/><text x="93.8306%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (335 samples, 0.13%)</title><rect x="93.5388%" y="933" width="0.1307%" height="15" fill="rgb(208,219,16)" fg:x="239711" fg:w="335"/><text x="93.7888%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (37 samples, 0.01%)</title><rect x="93.6551%" y="917" width="0.0144%" height="15" fill="rgb(216,158,51)" fg:x="240009" fg:w="37"/><text x="93.9051%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (365 samples, 0.14%)</title><rect x="93.5326%" y="949" width="0.1424%" height="15" fill="rgb(233,14,44)" fg:x="239695" fg:w="365"/><text x="93.7826%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (457 samples, 0.18%)</title><rect x="93.5006%" y="965" width="0.1783%" height="15" fill="rgb(237,97,39)" fg:x="239613" fg:w="457"/><text x="93.7506%" y="975.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (234,858 samples, 91.65%)</title><rect x="2.0404%" y="1013" width="91.6451%" height="15" fill="rgb(218,198,43)" fg:x="5229" fg:w="234858"/><text x="2.2904%" y="1023.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,801 samples, 0.70%)</title><rect x="92.9828%" y="997" width="0.7028%" height="15" fill="rgb(231,104,20)" fg:x="238286" fg:w="1801"/><text x="93.2328%" y="1007.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (500 samples, 0.20%)</title><rect x="93.4904%" y="981" width="0.1951%" height="15" fill="rgb(254,36,13)" fg:x="239587" fg:w="500"/><text x="93.7404%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (56 samples, 0.02%)</title><rect x="94.3368%" y="949" width="0.0219%" height="15" fill="rgb(248,14,50)" fg:x="241756" fg:w="56"/><text x="94.5868%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (125 samples, 0.05%)</title><rect x="94.3118%" y="965" width="0.0488%" height="15" fill="rgb(217,107,29)" fg:x="241692" fg:w="125"/><text x="94.5618%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (244 samples, 0.10%)</title><rect x="94.2674%" y="997" width="0.0952%" height="15" fill="rgb(251,169,33)" fg:x="241578" fg:w="244"/><text x="94.5174%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (147 samples, 0.06%)</title><rect x="94.3052%" y="981" width="0.0574%" height="15" fill="rgb(217,108,32)" fg:x="241675" fg:w="147"/><text x="94.5552%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (69 samples, 0.03%)</title><rect x="94.3938%" y="981" width="0.0269%" height="15" fill="rgb(219,66,42)" fg:x="241902" fg:w="69"/><text x="94.6438%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`free (137 samples, 0.05%)</title><rect x="94.3684%" y="997" width="0.0535%" height="15" fill="rgb(206,180,7)" fg:x="241837" fg:w="137"/><text x="94.6184%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (34 samples, 0.01%)</title><rect x="94.4320%" y="997" width="0.0133%" height="15" fill="rgb(208,226,31)" fg:x="242000" fg:w="34"/><text x="94.6820%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (110 samples, 0.04%)</title><rect x="94.4523%" y="997" width="0.0429%" height="15" fill="rgb(218,26,49)" fg:x="242052" fg:w="110"/><text x="94.7023%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (38 samples, 0.01%)</title><rect x="94.5705%" y="965" width="0.0148%" height="15" fill="rgb(233,197,48)" fg:x="242355" fg:w="38"/><text x="94.8205%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (280 samples, 0.11%)</title><rect x="94.6474%" y="933" width="0.1093%" height="15" fill="rgb(252,181,51)" fg:x="242552" fg:w="280"/><text x="94.8974%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (470 samples, 0.18%)</title><rect x="94.5975%" y="949" width="0.1834%" height="15" fill="rgb(253,90,19)" fg:x="242424" fg:w="470"/><text x="94.8475%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (62 samples, 0.02%)</title><rect x="94.7567%" y="933" width="0.0242%" height="15" fill="rgb(215,171,30)" fg:x="242832" fg:w="62"/><text x="95.0067%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (515 samples, 0.20%)</title><rect x="94.5854%" y="965" width="0.2010%" height="15" fill="rgb(214,222,9)" fg:x="242393" fg:w="515"/><text x="94.8354%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (666 samples, 0.26%)</title><rect x="94.5304%" y="981" width="0.2599%" height="15" fill="rgb(223,3,22)" fg:x="242252" fg:w="666"/><text x="94.7804%" y="991.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (238,523 samples, 93.08%)</title><rect x="1.7255%" y="1029" width="93.0752%" height="15" fill="rgb(225,196,46)" fg:x="4422" fg:w="238523"/><text x="1.9755%" y="1039.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,848 samples, 1.11%)</title><rect x="93.6894%" y="1013" width="1.1113%" height="15" fill="rgb(209,110,37)" fg:x="240097" fg:w="2848"/><text x="93.9394%" y="1023.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (740 samples, 0.29%)</title><rect x="94.5120%" y="997" width="0.2888%" height="15" fill="rgb(249,89,12)" fg:x="242205" fg:w="740"/><text x="94.7620%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (43 samples, 0.02%)</title><rect x="95.4552%" y="965" width="0.0168%" height="15" fill="rgb(226,27,33)" fg:x="244622" fg:w="43"/><text x="95.7052%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (101 samples, 0.04%)</title><rect x="95.4329%" y="981" width="0.0394%" height="15" fill="rgb(213,82,22)" fg:x="244565" fg:w="101"/><text x="95.6829%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (208 samples, 0.08%)</title><rect x="95.3951%" y="1013" width="0.0812%" height="15" fill="rgb(248,140,0)" fg:x="244468" fg:w="208"/><text x="95.6451%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (132 samples, 0.05%)</title><rect x="95.4247%" y="997" width="0.0515%" height="15" fill="rgb(228,106,3)" fg:x="244544" fg:w="132"/><text x="95.6747%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (65 samples, 0.03%)</title><rect x="95.5051%" y="997" width="0.0254%" height="15" fill="rgb(209,23,37)" fg:x="244750" fg:w="65"/><text x="95.7551%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`free (131 samples, 0.05%)</title><rect x="95.4809%" y="1013" width="0.0511%" height="15" fill="rgb(241,93,50)" fg:x="244688" fg:w="131"/><text x="95.7309%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (36 samples, 0.01%)</title><rect x="95.5434%" y="1013" width="0.0140%" height="15" fill="rgb(253,46,43)" fg:x="244848" fg:w="36"/><text x="95.7934%" y="1023.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (115 samples, 0.04%)</title><rect x="95.5660%" y="1013" width="0.0449%" height="15" fill="rgb(226,206,43)" fg:x="244906" fg:w="115"/><text x="95.8160%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (212 samples, 0.08%)</title><rect x="95.7646%" y="949" width="0.0827%" height="15" fill="rgb(217,54,7)" fg:x="245415" fg:w="212"/><text x="96.0146%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (409 samples, 0.16%)</title><rect x="95.7096%" y="965" width="0.1596%" height="15" fill="rgb(223,5,52)" fg:x="245274" fg:w="409"/><text x="95.9596%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (56 samples, 0.02%)</title><rect x="95.8473%" y="949" width="0.0219%" height="15" fill="rgb(206,52,46)" fg:x="245627" fg:w="56"/><text x="96.0973%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (476 samples, 0.19%)</title><rect x="95.6932%" y="981" width="0.1857%" height="15" fill="rgb(253,136,11)" fg:x="245232" fg:w="476"/><text x="95.9432%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (625 samples, 0.24%)</title><rect x="95.6405%" y="997" width="0.2439%" height="15" fill="rgb(208,106,33)" fg:x="245097" fg:w="625"/><text x="95.8905%" y="1007.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (242,184 samples, 94.50%)</title><rect x="1.3907%" y="1045" width="94.5038%" height="15" fill="rgb(206,54,4)" fg:x="3564" fg:w="242184"/><text x="1.6407%" y="1055.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,782 samples, 1.09%)</title><rect x="94.8090%" y="1029" width="1.0856%" height="15" fill="rgb(213,3,15)" fg:x="242966" fg:w="2782"/><text x="95.0590%" y="1039.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (683 samples, 0.27%)</title><rect x="95.6280%" y="1013" width="0.2665%" height="15" fill="rgb(252,211,39)" fg:x="245065" fg:w="683"/><text x="95.8780%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (39 samples, 0.02%)</title><rect x="96.5392%" y="981" width="0.0152%" height="15" fill="rgb(223,6,36)" fg:x="247400" fg:w="39"/><text x="96.7892%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (101 samples, 0.04%)</title><rect x="96.5154%" y="997" width="0.0394%" height="15" fill="rgb(252,169,45)" fg:x="247339" fg:w="101"/><text x="96.7654%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (187 samples, 0.07%)</title><rect x="96.4846%" y="1029" width="0.0730%" height="15" fill="rgb(212,48,26)" fg:x="247260" fg:w="187"/><text x="96.7346%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (119 samples, 0.05%)</title><rect x="96.5111%" y="1013" width="0.0464%" height="15" fill="rgb(251,102,48)" fg:x="247328" fg:w="119"/><text x="96.7611%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (60 samples, 0.02%)</title><rect x="96.5794%" y="1013" width="0.0234%" height="15" fill="rgb(243,208,16)" fg:x="247503" fg:w="60"/><text x="96.8294%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`free (107 samples, 0.04%)</title><rect x="96.5626%" y="1029" width="0.0418%" height="15" fill="rgb(219,96,24)" fg:x="247460" fg:w="107"/><text x="96.8126%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (39 samples, 0.02%)</title><rect x="96.6098%" y="1029" width="0.0152%" height="15" fill="rgb(219,33,29)" fg:x="247581" fg:w="39"/><text x="96.8598%" y="1039.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (128 samples, 0.05%)</title><rect x="96.6332%" y="1029" width="0.0499%" height="15" fill="rgb(223,176,5)" fg:x="247641" fg:w="128"/><text x="96.8832%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (221 samples, 0.09%)</title><rect x="96.8272%" y="965" width="0.0862%" height="15" fill="rgb(228,140,14)" fg:x="248138" fg:w="221"/><text x="97.0772%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (384 samples, 0.15%)</title><rect x="96.7764%" y="981" width="0.1498%" height="15" fill="rgb(217,179,31)" fg:x="248008" fg:w="384"/><text x="97.0264%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (33 samples, 0.01%)</title><rect x="96.9134%" y="965" width="0.0129%" height="15" fill="rgb(230,9,30)" fg:x="248359" fg:w="33"/><text x="97.1634%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (432 samples, 0.17%)</title><rect x="96.7655%" y="997" width="0.1686%" height="15" fill="rgb(230,136,20)" fg:x="247980" fg:w="432"/><text x="97.0155%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (579 samples, 0.23%)</title><rect x="96.7132%" y="1013" width="0.2259%" height="15" fill="rgb(215,210,22)" fg:x="247846" fg:w="579"/><text x="96.9632%" y="1023.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (245,798 samples, 95.91%)</title><rect x="1.0364%" y="1061" width="95.9141%" height="15" fill="rgb(218,43,5)" fg:x="2656" fg:w="245798"/><text x="1.2864%" y="1071.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,682 samples, 1.05%)</title><rect x="95.9039%" y="1045" width="1.0466%" height="15" fill="rgb(216,11,5)" fg:x="245772" fg:w="2682"/><text x="96.1539%" y="1055.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (645 samples, 0.25%)</title><rect x="96.6988%" y="1029" width="0.2517%" height="15" fill="rgb(209,82,29)" fg:x="247809" fg:w="645"/><text x="96.9488%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (34 samples, 0.01%)</title><rect x="97.4823%" y="997" width="0.0133%" height="15" fill="rgb(244,115,12)" fg:x="249817" fg:w="34"/><text x="97.7323%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (82 samples, 0.03%)</title><rect x="97.4644%" y="1013" width="0.0320%" height="15" fill="rgb(222,82,18)" fg:x="249771" fg:w="82"/><text x="97.7144%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (161 samples, 0.06%)</title><rect x="97.4371%" y="1045" width="0.0628%" height="15" fill="rgb(249,227,8)" fg:x="249701" fg:w="161"/><text x="97.6871%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (109 samples, 0.04%)</title><rect x="97.4574%" y="1029" width="0.0425%" height="15" fill="rgb(253,141,45)" fg:x="249753" fg:w="109"/><text x="97.7074%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (62 samples, 0.02%)</title><rect x="97.5143%" y="1029" width="0.0242%" height="15" fill="rgb(234,184,4)" fg:x="249899" fg:w="62"/><text x="97.7643%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`free (95 samples, 0.04%)</title><rect x="97.5018%" y="1045" width="0.0371%" height="15" fill="rgb(218,194,23)" fg:x="249867" fg:w="95"/><text x="97.7518%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (29 samples, 0.01%)</title><rect x="97.5459%" y="1045" width="0.0113%" height="15" fill="rgb(235,66,41)" fg:x="249980" fg:w="29"/><text x="97.7959%" y="1055.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (77 samples, 0.03%)</title><rect x="97.5639%" y="1045" width="0.0300%" height="15" fill="rgb(245,217,1)" fg:x="250026" fg:w="77"/><text x="97.8139%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.01%)</title><rect x="97.6611%" y="1013" width="0.0109%" height="15" fill="rgb(229,91,1)" fg:x="250275" fg:w="28"/><text x="97.9111%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (172 samples, 0.07%)</title><rect x="97.7293%" y="981" width="0.0671%" height="15" fill="rgb(207,101,30)" fg:x="250450" fg:w="172"/><text x="97.9793%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (320 samples, 0.12%)</title><rect x="97.6833%" y="997" width="0.1249%" height="15" fill="rgb(223,82,49)" fg:x="250332" fg:w="320"/><text x="97.9333%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (30 samples, 0.01%)</title><rect x="97.7965%" y="981" width="0.0117%" height="15" fill="rgb(218,167,17)" fg:x="250622" fg:w="30"/><text x="98.0465%" y="991.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (361 samples, 0.14%)</title><rect x="97.6720%" y="1013" width="0.1409%" height="15" fill="rgb(208,103,14)" fg:x="250303" fg:w="361"/><text x="97.9220%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (510 samples, 0.20%)</title><rect x="97.6181%" y="1029" width="0.1990%" height="15" fill="rgb(238,20,8)" fg:x="250165" fg:w="510"/><text x="97.8681%" y="1039.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (248,819 samples, 97.09%)</title><rect x="0.7317%" y="1077" width="97.0929%" height="15" fill="rgb(218,80,54)" fg:x="1875" fg:w="248819"/><text x="0.9817%" y="1087.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (2,223 samples, 0.87%)</title><rect x="96.9571%" y="1061" width="0.8674%" height="15" fill="rgb(240,144,17)" fg:x="248471" fg:w="2223"/><text x="97.2071%" y="1071.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (560 samples, 0.22%)</title><rect x="97.6060%" y="1045" width="0.2185%" height="15" fill="rgb(245,27,50)" fg:x="250134" fg:w="560"/><text x="97.8560%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (65 samples, 0.03%)</title><rect x="98.1890%" y="1029" width="0.0254%" height="15" fill="rgb(251,51,7)" fg:x="251628" fg:w="65"/><text x="98.4390%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (130 samples, 0.05%)</title><rect x="98.1656%" y="1061" width="0.0507%" height="15" fill="rgb(245,217,29)" fg:x="251568" fg:w="130"/><text x="98.4156%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (78 samples, 0.03%)</title><rect x="98.1859%" y="1045" width="0.0304%" height="15" fill="rgb(221,176,29)" fg:x="251620" fg:w="78"/><text x="98.4359%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.01%)</title><rect x="98.2343%" y="1045" width="0.0101%" height="15" fill="rgb(212,180,24)" fg:x="251744" fg:w="26"/><text x="98.4843%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`free (68 samples, 0.03%)</title><rect x="98.2187%" y="1061" width="0.0265%" height="15" fill="rgb(254,24,2)" fg:x="251704" fg:w="68"/><text x="98.4687%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (52 samples, 0.02%)</title><rect x="98.2624%" y="1061" width="0.0203%" height="15" fill="rgb(230,100,2)" fg:x="251816" fg:w="52"/><text x="98.5124%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (102 samples, 0.04%)</title><rect x="98.3638%" y="997" width="0.0398%" height="15" fill="rgb(219,142,25)" fg:x="252076" fg:w="102"/><text x="98.6138%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (188 samples, 0.07%)</title><rect x="98.3392%" y="1013" width="0.0734%" height="15" fill="rgb(240,73,43)" fg:x="252013" fg:w="188"/><text x="98.5892%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (217 samples, 0.08%)</title><rect x="98.3303%" y="1029" width="0.0847%" height="15" fill="rgb(214,114,15)" fg:x="251990" fg:w="217"/><text x="98.5803%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (293 samples, 0.11%)</title><rect x="98.3037%" y="1045" width="0.1143%" height="15" fill="rgb(207,130,4)" fg:x="251922" fg:w="293"/><text x="98.5537%" y="1055.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (250,920 samples, 97.91%)</title><rect x="0.5139%" y="1093" width="97.9127%" height="15" fill="rgb(221,25,40)" fg:x="1317" fg:w="250920"/><text x="0.7639%" y="1103.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (1,532 samples, 0.60%)</title><rect x="97.8288%" y="1077" width="0.5978%" height="15" fill="rgb(241,184,7)" fg:x="250705" fg:w="1532"/><text x="98.0788%" y="1087.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (346 samples, 0.14%)</title><rect x="98.2916%" y="1061" width="0.1350%" height="15" fill="rgb(235,159,4)" fg:x="251891" fg:w="346"/><text x="98.5416%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.01%)</title><rect x="98.6604%" y="1045" width="0.0144%" height="15" fill="rgb(214,87,48)" fg:x="252836" fg:w="37"/><text x="98.9104%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (72 samples, 0.03%)</title><rect x="98.6475%" y="1077" width="0.0281%" height="15" fill="rgb(246,198,24)" fg:x="252803" fg:w="72"/><text x="98.8975%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (46 samples, 0.02%)</title><rect x="98.6577%" y="1061" width="0.0179%" height="15" fill="rgb(209,66,40)" fg:x="252829" fg:w="46"/><text x="98.9077%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (26 samples, 0.01%)</title><rect x="98.6819%" y="1061" width="0.0101%" height="15" fill="rgb(233,147,39)" fg:x="252891" fg:w="26"/><text x="98.9319%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`free (42 samples, 0.02%)</title><rect x="98.6764%" y="1077" width="0.0164%" height="15" fill="rgb(231,145,52)" fg:x="252877" fg:w="42"/><text x="98.9264%" y="1087.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.02%)</title><rect x="98.7060%" y="1077" width="0.0168%" height="15" fill="rgb(206,20,26)" fg:x="252953" fg:w="43"/><text x="98.9560%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (63 samples, 0.02%)</title><rect x="98.7810%" y="1013" width="0.0246%" height="15" fill="rgb(238,220,4)" fg:x="253145" fg:w="63"/><text x="99.0310%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (122 samples, 0.05%)</title><rect x="98.7630%" y="1029" width="0.0476%" height="15" fill="rgb(252,195,42)" fg:x="253099" fg:w="122"/><text x="99.0130%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (149 samples, 0.06%)</title><rect x="98.7556%" y="1045" width="0.0581%" height="15" fill="rgb(209,10,6)" fg:x="253080" fg:w="149"/><text x="99.0056%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (214 samples, 0.08%)</title><rect x="98.7322%" y="1061" width="0.0835%" height="15" fill="rgb(229,3,52)" fg:x="253020" fg:w="214"/><text x="98.9822%" y="1071.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (252,270 samples, 98.44%)</title><rect x="0.3777%" y="1109" width="98.4395%" height="15" fill="rgb(253,49,37)" fg:x="968" fg:w="252270"/><text x="0.6277%" y="1119.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (984 samples, 0.38%)</title><rect x="98.4333%" y="1093" width="0.3840%" height="15" fill="rgb(240,103,49)" fg:x="252254" fg:w="984"/><text x="98.6833%" y="1103.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (232 samples, 0.09%)</title><rect x="98.7267%" y="1077" width="0.0905%" height="15" fill="rgb(250,182,30)" fg:x="253006" fg:w="232"/><text x="98.9767%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (51 samples, 0.02%)</title><rect x="98.9546%" y="1093" width="0.0199%" height="15" fill="rgb(248,8,30)" fg:x="253590" fg:w="51"/><text x="99.2046%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.01%)</title><rect x="98.9636%" y="1077" width="0.0109%" height="15" fill="rgb(237,120,30)" fg:x="253613" fg:w="28"/><text x="99.2136%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.01%)</title><rect x="98.9757%" y="1093" width="0.0109%" height="15" fill="rgb(221,146,34)" fg:x="253644" fg:w="28"/><text x="99.2257%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (44 samples, 0.02%)</title><rect x="99.0338%" y="1029" width="0.0172%" height="15" fill="rgb(242,55,13)" fg:x="253793" fg:w="44"/><text x="99.2838%" y="1039.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (70 samples, 0.03%)</title><rect x="99.0249%" y="1045" width="0.0273%" height="15" fill="rgb(242,112,31)" fg:x="253770" fg:w="70"/><text x="99.2749%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (84 samples, 0.03%)</title><rect x="99.0221%" y="1061" width="0.0328%" height="15" fill="rgb(249,192,27)" fg:x="253763" fg:w="84"/><text x="99.2721%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (119 samples, 0.05%)</title><rect x="99.0100%" y="1077" width="0.0464%" height="15" fill="rgb(208,204,44)" fg:x="253732" fg:w="119"/><text x="99.2600%" y="1087.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (253,096 samples, 98.76%)</title><rect x="0.2985%" y="1125" width="98.7618%" height="15" fill="rgb(208,93,54)" fg:x="765" fg:w="253096"/><text x="0.5485%" y="1135.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (609 samples, 0.24%)</title><rect x="98.8227%" y="1109" width="0.2376%" height="15" fill="rgb(242,1,31)" fg:x="253252" fg:w="609"/><text x="99.0727%" y="1119.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (137 samples, 0.05%)</title><rect x="99.0069%" y="1093" width="0.0535%" height="15" fill="rgb(241,83,25)" fg:x="253724" fg:w="137"/><text x="99.2569%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.01%)</title><rect x="99.1411%" y="1045" width="0.0101%" height="15" fill="rgb(205,169,50)" fg:x="254068" fg:w="26"/><text x="99.3911%" y="1055.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (42 samples, 0.02%)</title><rect x="99.1372%" y="1061" width="0.0164%" height="15" fill="rgb(239,186,37)" fg:x="254058" fg:w="42"/><text x="99.3872%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.02%)</title><rect x="99.1357%" y="1077" width="0.0187%" height="15" fill="rgb(205,221,10)" fg:x="254054" fg:w="48"/><text x="99.3857%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.02%)</title><rect x="99.1326%" y="1093" width="0.0226%" height="15" fill="rgb(218,196,15)" fg:x="254046" fg:w="58"/><text x="99.3826%" y="1103.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (253,448 samples, 98.90%)</title><rect x="0.2568%" y="1141" width="98.8992%" height="15" fill="rgb(218,196,35)" fg:x="658" fg:w="253448"/><text x="0.5068%" y="1151.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (239 samples, 0.09%)</title><rect x="99.0627%" y="1125" width="0.0933%" height="15" fill="rgb(233,63,24)" fg:x="253867" fg:w="239"/><text x="99.3127%" y="1135.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (63 samples, 0.02%)</title><rect x="99.1314%" y="1109" width="0.0246%" height="15" fill="rgb(225,8,4)" fg:x="254043" fg:w="63"/><text x="99.3814%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.01%)</title><rect x="99.2672%" y="1125" width="0.0144%" height="15" fill="rgb(234,105,35)" fg:x="254391" fg:w="37"/><text x="99.5172%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (37 samples, 0.01%)</title><rect x="99.3257%" y="1061" width="0.0144%" height="15" fill="rgb(236,21,32)" fg:x="254541" fg:w="37"/><text x="99.5757%" y="1071.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (59 samples, 0.02%)</title><rect x="99.3199%" y="1077" width="0.0230%" height="15" fill="rgb(228,109,6)" fg:x="254526" fg:w="59"/><text x="99.5699%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (67 samples, 0.03%)</title><rect x="99.3171%" y="1093" width="0.0261%" height="15" fill="rgb(229,215,31)" fg:x="254519" fg:w="67"/><text x="99.5671%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (93 samples, 0.04%)</title><rect x="99.3074%" y="1109" width="0.0363%" height="15" fill="rgb(221,52,54)" fg:x="254494" fg:w="93"/><text x="99.5574%" y="1119.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (254,068 samples, 99.14%)</title><rect x="0.2033%" y="1157" width="99.1411%" height="15" fill="rgb(252,129,43)" fg:x="521" fg:w="254068"/><text x="0.4533%" y="1167.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (482 samples, 0.19%)</title><rect x="99.1564%" y="1141" width="0.1881%" height="15" fill="rgb(248,183,27)" fg:x="254107" fg:w="482"/><text x="99.4064%" y="1151.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (106 samples, 0.04%)</title><rect x="99.3031%" y="1125" width="0.0414%" height="15" fill="rgb(250,0,22)" fg:x="254483" fg:w="106"/><text x="99.5531%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (36 samples, 0.01%)</title><rect x="99.4646%" y="1141" width="0.0140%" height="15" fill="rgb(213,166,10)" fg:x="254897" fg:w="36"/><text x="99.7146%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.01%)</title><rect x="99.4681%" y="1125" width="0.0105%" height="15" fill="rgb(207,163,36)" fg:x="254906" fg:w="27"/><text x="99.7181%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (35 samples, 0.01%)</title><rect x="99.5224%" y="1077" width="0.0137%" height="15" fill="rgb(208,122,22)" fg:x="255045" fg:w="35"/><text x="99.7724%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (67 samples, 0.03%)</title><rect x="99.5130%" y="1093" width="0.0261%" height="15" fill="rgb(207,104,49)" fg:x="255021" fg:w="67"/><text x="99.7630%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (98 samples, 0.04%)</title><rect x="99.5013%" y="1125" width="0.0382%" height="15" fill="rgb(248,211,50)" fg:x="254991" fg:w="98"/><text x="99.7513%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (73 samples, 0.03%)</title><rect x="99.5111%" y="1109" width="0.0285%" height="15" fill="rgb(217,13,45)" fg:x="255016" fg:w="73"/><text x="99.7611%" y="1119.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (254,695 samples, 99.39%)</title><rect x="0.1557%" y="1173" width="99.3858%" height="15" fill="rgb(211,216,49)" fg:x="399" fg:w="254695"/><text x="0.4057%" y="1183.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (501 samples, 0.20%)</title><rect x="99.3460%" y="1157" width="0.1955%" height="15" fill="rgb(221,58,53)" fg:x="254593" fg:w="501"/><text x="99.5960%" y="1167.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (105 samples, 0.04%)</title><rect x="99.5005%" y="1141" width="0.0410%" height="15" fill="rgb(220,112,41)" fg:x="254989" fg:w="105"/><text x="99.7505%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (42 samples, 0.02%)</title><rect x="99.6410%" y="1157" width="0.0164%" height="15" fill="rgb(236,38,28)" fg:x="255349" fg:w="42"/><text x="99.8910%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (27 samples, 0.01%)</title><rect x="99.6929%" y="1093" width="0.0105%" height="15" fill="rgb(227,195,22)" fg:x="255482" fg:w="27"/><text x="99.9429%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (52 samples, 0.02%)</title><rect x="99.6863%" y="1109" width="0.0203%" height="15" fill="rgb(214,55,33)" fg:x="255465" fg:w="52"/><text x="99.9363%" y="1119.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (76 samples, 0.03%)</title><rect x="99.6777%" y="1141" width="0.0297%" height="15" fill="rgb(248,80,13)" fg:x="255443" fg:w="76"/><text x="99.9277%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (56 samples, 0.02%)</title><rect x="99.6855%" y="1125" width="0.0219%" height="15" fill="rgb(238,52,6)" fg:x="255463" fg:w="56"/><text x="99.9355%" y="1135.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (255,259 samples, 99.61%)</title><rect x="0.1026%" y="1189" width="99.6059%" height="15" fill="rgb(224,198,47)" fg:x="263" fg:w="255259"/><text x="0.3526%" y="1199.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (426 samples, 0.17%)</title><rect x="99.5423%" y="1173" width="0.1662%" height="15" fill="rgb(233,171,20)" fg:x="255096" fg:w="426"/><text x="99.7923%" y="1183.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (83 samples, 0.03%)</title><rect x="99.6761%" y="1157" width="0.0324%" height="15" fill="rgb(241,30,25)" fg:x="255439" fg:w="83"/><text x="99.9261%" y="1167.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.01%)</title><rect x="99.8068%" y="1125" width="0.0121%" height="15" fill="rgb(207,171,38)" fg:x="255774" fg:w="31"/><text x="100.0568%" y="1135.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.01%)</title><rect x="99.8049%" y="1141" width="0.0144%" height="15" fill="rgb(234,70,1)" fg:x="255769" fg:w="37"/><text x="100.0549%" y="1151.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (49 samples, 0.02%)</title><rect x="99.8006%" y="1157" width="0.0191%" height="15" fill="rgb(232,178,18)" fg:x="255758" fg:w="49"/><text x="100.0506%" y="1167.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (255,657 samples, 99.76%)</title><rect x="0.0589%" y="1205" width="99.7612%" height="15" fill="rgb(241,78,40)" fg:x="151" fg:w="255657"/><text x="0.3089%" y="1215.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (286 samples, 0.11%)</title><rect x="99.7085%" y="1189" width="0.1116%" height="15" fill="rgb(222,35,25)" fg:x="255522" fg:w="286"/><text x="99.9585%" y="1199.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (52 samples, 0.02%)</title><rect x="99.7998%" y="1173" width="0.0203%" height="15" fill="rgb(207,92,16)" fg:x="255756" fg:w="52"/><text x="100.0498%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (33 samples, 0.01%)</title><rect x="99.8779%" y="1173" width="0.0129%" height="15" fill="rgb(216,59,51)" fg:x="255956" fg:w="33"/><text x="100.1279%" y="1183.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (26 samples, 0.01%)</title><rect x="99.8806%" y="1157" width="0.0101%" height="15" fill="rgb(213,80,28)" fg:x="255963" fg:w="26"/><text x="100.1306%" y="1167.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (255,895 samples, 99.85%)</title><rect x="0.0371%" y="1221" width="99.8541%" height="15" fill="rgb(220,93,7)" fg:x="95" fg:w="255895"/><text x="0.2871%" y="1231.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (181 samples, 0.07%)</title><rect x="99.8205%" y="1205" width="0.0706%" height="15" fill="rgb(225,24,44)" fg:x="255809" fg:w="181"/><text x="100.0705%" y="1215.50"></text></g><g><title>sudoku-solver`alloc::vec::from_elem (36 samples, 0.01%)</title><rect x="99.8771%" y="1189" width="0.0140%" height="15" fill="rgb(243,74,40)" fg:x="255954" fg:w="36"/><text x="100.1271%" y="1199.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (256,029 samples, 99.91%)</title><rect x="0.0261%" y="1237" width="99.9063%" height="15" fill="rgb(228,39,7)" fg:x="67" fg:w="256029"/><text x="0.2761%" y="1247.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (103 samples, 0.04%)</title><rect x="99.8923%" y="1221" width="0.0402%" height="15" fill="rgb(227,79,8)" fg:x="255993" fg:w="103"/><text x="100.1423%" y="1231.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (256,096 samples, 99.93%)</title><rect x="0.0195%" y="1253" width="99.9325%" height="15" fill="rgb(236,58,11)" fg:x="50" fg:w="256096"/><text x="0.2695%" y="1263.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (49 samples, 0.02%)</title><rect x="99.9329%" y="1237" width="0.0191%" height="15" fill="rgb(249,63,35)" fg:x="256097" fg:w="49"/><text x="100.1829%" y="1247.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (256,136 samples, 99.95%)</title><rect x="0.0156%" y="1269" width="99.9481%" height="15" fill="rgb(252,114,16)" fg:x="40" fg:w="256136"/><text x="0.2656%" y="1279.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (27 samples, 0.01%)</title><rect x="99.9532%" y="1253" width="0.0105%" height="15" fill="rgb(254,151,24)" fg:x="256149" fg:w="27"/><text x="100.2032%" y="1263.50"></text></g><g><title>sudoku-solver`sudoku_solver::backtraking::backtraking_recursive (256,158 samples, 99.96%)</title><rect x="0.0125%" y="1285" width="99.9567%" height="15" fill="rgb(253,54,39)" fg:x="32" fg:w="256158"/><text x="0.2625%" y="1295.50">sudoku-solver`sudoku_solver::backtraking::backtraking_recursive</text></g><g><title>all (256,269 samples, 100%)</title><rect x="0.0000%" y="1397" width="100.0000%" height="15" fill="rgb(243,25,45)" fg:x="0" fg:w="256269"/><text x="0.2500%" y="1407.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (256,264 samples, 100.00%)</title><rect x="0.0020%" y="1381" width="99.9980%" height="15" fill="rgb(234,134,9)" fg:x="5" fg:w="256264"/><text x="0.2520%" y="1391.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (256,264 samples, 100.00%)</title><rect x="0.0020%" y="1365" width="99.9980%" height="15" fill="rgb(227,166,31)" fg:x="5" fg:w="256264"/><text x="0.2520%" y="1375.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>sudoku-solver`std::sys::unix::thread::Thread::new::thread_start (256,264 samples, 100.00%)</title><rect x="0.0020%" y="1349" width="99.9980%" height="15" fill="rgb(245,143,41)" fg:x="5" fg:w="256264"/><text x="0.2520%" y="1359.50">sudoku-solver`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}} (256,264 samples, 100.00%)</title><rect x="0.0020%" y="1333" width="99.9980%" height="15" fill="rgb(238,181,32)" fg:x="5" fg:w="256264"/><text x="0.2520%" y="1343.50">sudoku-solver`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace (256,264 samples, 100.00%)</title><rect x="0.0020%" y="1317" width="99.9980%" height="15" fill="rgb(224,113,18)" fg:x="5" fg:w="256264"/><text x="0.2520%" y="1327.50">sudoku-solver`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>sudoku-solver`sudoku_solver::solve_sudoku (256,262 samples, 100.00%)</title><rect x="0.0027%" y="1301" width="99.9973%" height="15" fill="rgb(240,229,28)" fg:x="7" fg:w="256262"/><text x="0.2527%" y="1311.50">sudoku-solver`sudoku_solver::solve_sudoku</text></g><g><title>sudoku-solver`sudoku_solver::possible_numbers (79 samples, 0.03%)</title><rect x="99.9692%" y="1285" width="0.0308%" height="15" fill="rgb(250,185,3)" fg:x="256190" fg:w="79"/><text x="100.2192%" y="1295.50"></text></g></svg></svg>